# -*- coding: utf-8 -*-

################################################################################
## Form generated from reading UI file 'MainWindow.ui'
##
## Created by: Qt User Interface Compiler version 6.5.1
##
## WARNING! All changes made in this file will be lost when recompiling UI file!
################################################################################

from PySide6.QtCore import (QCoreApplication, QDate, QDateTime, QLocale,
    QMetaObject, QObject, QPoint, QRect,
    QSize, QTime, QUrl, Qt)
from PySide6.QtGui import (QAction, QBrush, QColor, QConicalGradient,
    QCursor, QFont, QFontDatabase, QGradient,
    QIcon, QImage, QKeySequence, QLinearGradient,
    QPainter, QPalette, QPixmap, QRadialGradient,
    QTransform)
from PySide6.QtWidgets import (QAbstractItemView, QApplication, QCheckBox, QComboBox,
    QDoubleSpinBox, QFormLayout, QFrame, QGridLayout,
    QHBoxLayout, QHeaderView, QLabel, QLineEdit,
    QListView, QMainWindow, QMenu, QMenuBar,
    QPlainTextEdit, QProgressBar, QPushButton, QRadioButton,
    QSizePolicy, QSlider, QSpacerItem, QSpinBox,
    QSplitter, QTabWidget, QTableView, QTextEdit,
    QToolBar, QTreeView, QVBoxLayout, QWidget)
from .icons_rc import *

class Ui_mainWindow(object):
    def setupUi(self, mainWindow):
        if not mainWindow.objectName():
            mainWindow.setObjectName(u"mainWindow")
        mainWindow.resize(1379, 785)
        mainWindow.setBaseSize(QSize(0, 0))
        icon = QIcon()
        icon.addFile(u":/Program icon/GridCal_icon.svg", QSize(), QIcon.Normal, QIcon.Off)
        mainWindow.setWindowIcon(icon)
        mainWindow.setAutoFillBackground(False)
        mainWindow.setIconSize(QSize(48, 48))
        mainWindow.setToolButtonStyle(Qt.ToolButtonIconOnly)
        mainWindow.setDocumentMode(False)
        mainWindow.setTabShape(QTabWidget.Rounded)
        mainWindow.setDockNestingEnabled(False)
        mainWindow.setUnifiedTitleAndToolBarOnMac(False)
        self.actionOpen_file = QAction(mainWindow)
        self.actionOpen_file.setObjectName(u"actionOpen_file")
        icon1 = QIcon()
        icon1.addFile(u":/Icons/icons/loadc.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionOpen_file.setIcon(icon1)
        self.actionSave = QAction(mainWindow)
        self.actionSave.setObjectName(u"actionSave")
        icon2 = QIcon()
        icon2.addFile(u":/Icons/icons/savec.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionSave.setIcon(icon2)
        self.actionExport = QAction(mainWindow)
        self.actionExport.setObjectName(u"actionExport")
        icon3 = QIcon()
        icon3.addFile(u":/Icons/icons/save.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionExport.setIcon(icon3)
        self.actionNew_project = QAction(mainWindow)
        self.actionNew_project.setObjectName(u"actionNew_project")
        icon4 = QIcon()
        icon4.addFile(u":/Icons/icons/new2c.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionNew_project.setIcon(icon4)
        self.actionPower_flow = QAction(mainWindow)
        self.actionPower_flow.setObjectName(u"actionPower_flow")
        icon5 = QIcon()
        icon5.addFile(u":/Icons/icons/pf.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionPower_flow.setIcon(icon5)
        self.actionPower_Flow_Time_series = QAction(mainWindow)
        self.actionPower_Flow_Time_series.setObjectName(u"actionPower_Flow_Time_series")
        icon6 = QIcon()
        icon6.addFile(u":/Icons/icons/pf_ts.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionPower_Flow_Time_series.setIcon(icon6)
        self.actionBigger_nodes = QAction(mainWindow)
        self.actionBigger_nodes.setObjectName(u"actionBigger_nodes")
        icon7 = QIcon()
        icon7.addFile(u":/Icons/icons/plus (gray).svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionBigger_nodes.setIcon(icon7)
        self.actionSmaller_nodes = QAction(mainWindow)
        self.actionSmaller_nodes.setObjectName(u"actionSmaller_nodes")
        icon8 = QIcon()
        icon8.addFile(u":/Icons/icons/minus (gray).svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionSmaller_nodes.setIcon(icon8)
        self.actionPower_flow_Stochastic = QAction(mainWindow)
        self.actionPower_flow_Stochastic.setObjectName(u"actionPower_flow_Stochastic")
        icon9 = QIcon()
        icon9.addFile(u":/Icons/icons/stochastic_pf.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionPower_flow_Stochastic.setIcon(icon9)
        self.actionVoltage_stability = QAction(mainWindow)
        self.actionVoltage_stability.setObjectName(u"actionVoltage_stability")
        icon10 = QIcon()
        icon10.addFile(u":/Icons/icons/continuation_power_flow.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionVoltage_stability.setIcon(icon10)
        self.actionAbout = QAction(mainWindow)
        self.actionAbout.setObjectName(u"actionAbout")
        self.actionAbout.setIcon(icon)
        self.actionCenter_view = QAction(mainWindow)
        self.actionCenter_view.setObjectName(u"actionCenter_view")
        icon11 = QIcon()
        icon11.addFile(u":/Icons/icons/resize.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionCenter_view.setIcon(icon11)
        self.actionShort_Circuit = QAction(mainWindow)
        self.actionShort_Circuit.setObjectName(u"actionShort_Circuit")
        icon12 = QIcon()
        icon12.addFile(u":/Icons/icons/short_circuit.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionShort_Circuit.setIcon(icon12)
        self.actionAutoatic_layout = QAction(mainWindow)
        self.actionAutoatic_layout.setObjectName(u"actionAutoatic_layout")
        icon13 = QIcon()
        icon13.addFile(u":/Icons/icons/automatic_layout.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionAutoatic_layout.setIcon(icon13)
        self.actionBlackout_cascade = QAction(mainWindow)
        self.actionBlackout_cascade.setObjectName(u"actionBlackout_cascade")
        self.actionBlackout_cascade.setCheckable(True)
        icon14 = QIcon()
        icon14.addFile(u":/Icons/icons/blackout.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionBlackout_cascade.setIcon(icon14)
        self.actionOPF = QAction(mainWindow)
        self.actionOPF.setObjectName(u"actionOPF")
        icon15 = QIcon()
        icon15.addFile(u":/Icons/icons/dcopf.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionOPF.setIcon(icon15)
        self.actionOPF_time_series = QAction(mainWindow)
        self.actionOPF_time_series.setObjectName(u"actionOPF_time_series")
        icon16 = QIcon()
        icon16.addFile(u":/Icons/icons/dcopf_ts.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionOPF_time_series.setIcon(icon16)
        self.actionDetect_transformers = QAction(mainWindow)
        self.actionDetect_transformers.setObjectName(u"actionDetect_transformers")
        icon17 = QIcon()
        icon17.addFile(u":/Icons/icons/detect_tr.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionDetect_transformers.setIcon(icon17)
        self.actionAuto_rate_branches = QAction(mainWindow)
        self.actionAuto_rate_branches.setObjectName(u"actionAuto_rate_branches")
        icon18 = QIcon()
        icon18.addFile(u":/Icons/icons/rate_br.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionAuto_rate_branches.setIcon(icon18)
        self.actionExport_all_the_device_s_profiles = QAction(mainWindow)
        self.actionExport_all_the_device_s_profiles.setObjectName(u"actionExport_all_the_device_s_profiles")
        self.actionExport_all_the_device_s_profiles.setIcon(icon3)
        self.actionGrid_Reduction = QAction(mainWindow)
        self.actionGrid_Reduction.setObjectName(u"actionGrid_Reduction")
        icon19 = QIcon()
        icon19.addFile(u":/Icons/icons/grid_reduction.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionGrid_Reduction.setIcon(icon19)
        self.actionStorage_location_suggestion = QAction(mainWindow)
        self.actionStorage_location_suggestion.setObjectName(u"actionStorage_location_suggestion")
        self.actionStorage_location_suggestion.setCheckable(True)
        icon20 = QIcon()
        icon20.addFile(u":/Icons/icons/storage_loc.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionStorage_location_suggestion.setIcon(icon20)
        self.actionLaunch_data_analysis_tool = QAction(mainWindow)
        self.actionLaunch_data_analysis_tool.setObjectName(u"actionLaunch_data_analysis_tool")
        icon21 = QIcon()
        icon21.addFile(u":/Icons/icons/inputs_analysis 2.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionLaunch_data_analysis_tool.setIcon(icon21)
        self.actionOnline_documentation = QAction(mainWindow)
        self.actionOnline_documentation.setObjectName(u"actionOnline_documentation")
        icon22 = QIcon()
        icon22.addFile(u":/Icons/icons/new.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionOnline_documentation.setIcon(icon22)
        self.actionExport_all_results = QAction(mainWindow)
        self.actionExport_all_results.setObjectName(u"actionExport_all_results")
        icon23 = QIcon()
        icon23.addFile(u":/Icons/icons/export_pickle.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionExport_all_results.setIcon(icon23)
        self.actionSave_as = QAction(mainWindow)
        self.actionSave_as.setObjectName(u"actionSave_as")
        self.actionSave_as.setIcon(icon3)
        self.actionDelete_selected = QAction(mainWindow)
        self.actionDelete_selected.setObjectName(u"actionDelete_selected")
        icon24 = QIcon()
        icon24.addFile(u":/Icons/icons/delete3.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionDelete_selected.setIcon(icon24)
        self.actionLinearAnalysis = QAction(mainWindow)
        self.actionLinearAnalysis.setObjectName(u"actionLinearAnalysis")
        icon25 = QIcon()
        icon25.addFile(u":/Icons/icons/ptdf.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionLinearAnalysis.setIcon(icon25)
        self.actionReset_console = QAction(mainWindow)
        self.actionReset_console.setObjectName(u"actionReset_console")
        icon26 = QIcon()
        icon26.addFile(u":/Icons/icons/undo.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionReset_console.setIcon(icon26)
        self.actionOpf_to_Power_flow = QAction(mainWindow)
        self.actionOpf_to_Power_flow.setObjectName(u"actionOpf_to_Power_flow")
        self.actionOpf_to_Power_flow.setCheckable(True)
        icon27 = QIcon()
        icon27.addFile(u":/Icons/icons/dcopf2ts.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionOpf_to_Power_flow.setIcon(icon27)
        self.actionTry_to_fix_buses_location = QAction(mainWindow)
        self.actionTry_to_fix_buses_location.setObjectName(u"actionTry_to_fix_buses_location")
        icon28 = QIcon()
        icon28.addFile(u":/Icons/icons/move_bus.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionTry_to_fix_buses_location.setIcon(icon28)
        self.actionSet_OPF_generation_to_profiles = QAction(mainWindow)
        self.actionSet_OPF_generation_to_profiles.setObjectName(u"actionSet_OPF_generation_to_profiles")
        self.actionSet_OPF_generation_to_profiles.setIcon(icon27)
        self.actionPTDF_time_series = QAction(mainWindow)
        self.actionPTDF_time_series.setObjectName(u"actionPTDF_time_series")
        icon29 = QIcon()
        icon29.addFile(u":/Icons/icons/ptdf_ts.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionPTDF_time_series.setIcon(icon29)
        self.actionAdd_circuit = QAction(mainWindow)
        self.actionAdd_circuit.setObjectName(u"actionAdd_circuit")
        icon30 = QIcon()
        icon30.addFile(u":/Icons/icons/load_add.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionAdd_circuit.setIcon(icon30)
        self.actionSync = QAction(mainWindow)
        self.actionSync.setObjectName(u"actionSync")
        self.actionSync.setCheckable(True)
        icon31 = QIcon()
        icon31.addFile(u":/Icons/icons/sync.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionSync.setIcon(icon31)
        self.actionDrawSchematic = QAction(mainWindow)
        self.actionDrawSchematic.setObjectName(u"actionDrawSchematic")
        icon32 = QIcon()
        icon32.addFile(u":/Icons/icons/grid_icon.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionDrawSchematic.setIcon(icon32)
        self.actionSigma_analysis = QAction(mainWindow)
        self.actionSigma_analysis.setObjectName(u"actionSigma_analysis")
        icon33 = QIcon()
        icon33.addFile(u":/Icons/icons/sigma.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionSigma_analysis.setIcon(icon33)
        self.actionClear_stuff_running_right_now = QAction(mainWindow)
        self.actionClear_stuff_running_right_now.setObjectName(u"actionClear_stuff_running_right_now")
        icon34 = QIcon()
        icon34.addFile(u":/Icons/icons/clear_runs.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionClear_stuff_running_right_now.setIcon(icon34)
        self.actionAdd_default_catalogue = QAction(mainWindow)
        self.actionAdd_default_catalogue.setObjectName(u"actionAdd_default_catalogue")
        icon35 = QIcon()
        icon35.addFile(u":/Icons/icons/CatalogueAdd.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionAdd_default_catalogue.setIcon(icon35)
        self.actionFind_node_groups = QAction(mainWindow)
        self.actionFind_node_groups.setObjectName(u"actionFind_node_groups")
        self.actionFind_node_groups.setCheckable(True)
        icon36 = QIcon()
        icon36.addFile(u":/Icons/icons/color_grid2.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionFind_node_groups.setIcon(icon36)
        self.actiongrid_Generator = QAction(mainWindow)
        self.actiongrid_Generator.setObjectName(u"actiongrid_Generator")
        self.actiongrid_Generator.setIcon(icon13)
        self.actionImportPlexosNodeLoad = QAction(mainWindow)
        self.actionImportPlexosNodeLoad.setObjectName(u"actionImportPlexosNodeLoad")
        icon37 = QIcon()
        icon37.addFile(u":/Icons/icons/load.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionImportPlexosNodeLoad.setIcon(icon37)
        self.actionImportPlexosGeneratorGeneration = QAction(mainWindow)
        self.actionImportPlexosGeneratorGeneration.setObjectName(u"actionImportPlexosGeneratorGeneration")
        self.actionImportPlexosGeneratorGeneration.setIcon(icon37)
        self.actionOTDF_time_series = QAction(mainWindow)
        self.actionOTDF_time_series.setObjectName(u"actionOTDF_time_series")
        icon38 = QIcon()
        icon38.addFile(u":/Icons/icons/otdf_ts.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionOTDF_time_series.setIcon(icon38)
        self.actionImportPlexosBranchRates = QAction(mainWindow)
        self.actionImportPlexosBranchRates.setObjectName(u"actionImportPlexosBranchRates")
        self.actionImportPlexosBranchRates.setIcon(icon37)
        self.actionClustering_time_series = QAction(mainWindow)
        self.actionClustering_time_series.setObjectName(u"actionClustering_time_series")
        icon39 = QIcon()
        icon39.addFile(u":/Icons/icons/pf_ts_cluster.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionClustering_time_series.setIcon(icon39)
        self.actionSetSelectedBusArea = QAction(mainWindow)
        self.actionSetSelectedBusArea.setObjectName(u"actionSetSelectedBusArea")
        self.actionSetSelectedBusArea.setIcon(icon32)
        self.actionSetSelectedBusZone = QAction(mainWindow)
        self.actionSetSelectedBusZone.setObjectName(u"actionSetSelectedBusZone")
        self.actionSetSelectedBusZone.setIcon(icon32)
        self.actionSetSelectedBusCountry = QAction(mainWindow)
        self.actionSetSelectedBusCountry.setObjectName(u"actionSetSelectedBusCountry")
        icon40 = QIcon()
        icon40.addFile(u":/Icons/icons/map.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionSetSelectedBusCountry.setIcon(icon40)
        self.actionImport_bus_coordinates = QAction(mainWindow)
        self.actionImport_bus_coordinates.setObjectName(u"actionImport_bus_coordinates")
        self.actionImport_bus_coordinates.setIcon(icon30)
        self.actionATC = QAction(mainWindow)
        self.actionATC.setObjectName(u"actionATC")
        icon41 = QIcon()
        icon41.addFile(u":/Icons/icons/atc.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionATC.setIcon(icon41)
        self.actionATC_Time_Series = QAction(mainWindow)
        self.actionATC_Time_Series.setObjectName(u"actionATC_Time_Series")
        icon42 = QIcon()
        icon42.addFile(u":/Icons/icons/atc_ts.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionATC_Time_Series.setIcon(icon42)
        self.actionContingency_analysis = QAction(mainWindow)
        self.actionContingency_analysis.setObjectName(u"actionContingency_analysis")
        icon43 = QIcon()
        icon43.addFile(u":/Icons/icons/otdf.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionContingency_analysis.setIcon(icon43)
        self.actionOptimal_Net_Transfer_Capacity = QAction(mainWindow)
        self.actionOptimal_Net_Transfer_Capacity.setObjectName(u"actionOptimal_Net_Transfer_Capacity")
        icon44 = QIcon()
        icon44.addFile(u":/Icons/icons/ntc_opf.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionOptimal_Net_Transfer_Capacity.setIcon(icon44)
        self.actionSet_schematic_positions_from_GPS_coordinates = QAction(mainWindow)
        self.actionSet_schematic_positions_from_GPS_coordinates.setObjectName(u"actionSet_schematic_positions_from_GPS_coordinates")
        self.actionSet_schematic_positions_from_GPS_coordinates.setIcon(icon40)
        self.actionInputs_analysis = QAction(mainWindow)
        self.actionInputs_analysis.setObjectName(u"actionInputs_analysis")
        icon45 = QIcon()
        icon45.addFile(u":/Icons/icons/stats.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionInputs_analysis.setIcon(icon45)
        self.actionATC_clustering = QAction(mainWindow)
        self.actionATC_clustering.setObjectName(u"actionATC_clustering")
        icon46 = QIcon()
        icon46.addFile(u":/Icons/icons/atc_ts_clustering.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionATC_clustering.setIcon(icon46)
        self.actionFuse_devices = QAction(mainWindow)
        self.actionFuse_devices.setObjectName(u"actionFuse_devices")
        icon47 = QIcon()
        icon47.addFile(u":/Icons/icons/fusion.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionFuse_devices.setIcon(icon47)
        self.actionDelete_inconsistencies = QAction(mainWindow)
        self.actionDelete_inconsistencies.setObjectName(u"actionDelete_inconsistencies")
        icon48 = QIcon()
        icon48.addFile(u":/Icons/icons/delete.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionDelete_inconsistencies.setIcon(icon48)
        self.actionOptimal_Net_Transfer_Capacity_Time_Series = QAction(mainWindow)
        self.actionOptimal_Net_Transfer_Capacity_Time_Series.setObjectName(u"actionOptimal_Net_Transfer_Capacity_Time_Series")
        icon49 = QIcon()
        icon49.addFile(u":/Icons/icons/ntc_opf_ts.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionOptimal_Net_Transfer_Capacity_Time_Series.setIcon(icon49)
        self.actionOptimal_NTC_time_series_clustering = QAction(mainWindow)
        self.actionOptimal_NTC_time_series_clustering.setObjectName(u"actionOptimal_NTC_time_series_clustering")
        icon50 = QIcon()
        icon50.addFile(u":/Icons/icons/ntc_opf_ts_clustering.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionOptimal_NTC_time_series_clustering.setIcon(icon50)
        self.actionre_index_time = QAction(mainWindow)
        self.actionre_index_time.setObjectName(u"actionre_index_time")
        icon51 = QIcon()
        icon51.addFile(u":/Icons/icons/data.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionre_index_time.setIcon(icon51)
        self.actionFix_generators_active_based_on_the_power = QAction(mainWindow)
        self.actionFix_generators_active_based_on_the_power.setObjectName(u"actionFix_generators_active_based_on_the_power")
        icon52 = QIcon()
        icon52.addFile(u":/Icons/icons/gear.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionFix_generators_active_based_on_the_power.setIcon(icon52)
        self.actionFix_loads_active_based_on_the_power = QAction(mainWindow)
        self.actionFix_loads_active_based_on_the_power.setObjectName(u"actionFix_loads_active_based_on_the_power")
        self.actionFix_loads_active_based_on_the_power.setIcon(icon52)
        self.actionImport_contingencies = QAction(mainWindow)
        self.actionImport_contingencies.setObjectName(u"actionImport_contingencies")
        self.actionImport_contingencies.setIcon(icon30)
        self.actionInitialize_contingencies = QAction(mainWindow)
        self.actionInitialize_contingencies.setObjectName(u"actionInitialize_contingencies")
        icon53 = QIcon()
        icon53.addFile(u":/Icons/icons/contingency_wizzard.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionInitialize_contingencies.setIcon(icon53)
        self.actionExport_contingencies = QAction(mainWindow)
        self.actionExport_contingencies.setObjectName(u"actionExport_contingencies")
        self.actionExport_contingencies.setIcon(icon3)
        self.actionAdd_selected_to_contingency = QAction(mainWindow)
        self.actionAdd_selected_to_contingency.setObjectName(u"actionAdd_selected_to_contingency")
        icon54 = QIcon()
        icon54.addFile(u":/Icons/icons/add_contingency.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionAdd_selected_to_contingency.setIcon(icon54)
        self.actionAdd_selected_as_new_investment = QAction(mainWindow)
        self.actionAdd_selected_as_new_investment.setObjectName(u"actionAdd_selected_as_new_investment")
        icon55 = QIcon()
        icon55.addFile(u":/Icons/icons/investment.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionAdd_selected_as_new_investment.setIcon(icon55)
        self.actionZoom_in = QAction(mainWindow)
        self.actionZoom_in.setObjectName(u"actionZoom_in")
        icon56 = QIcon()
        icon56.addFile(u":/Icons/icons/zoom_in.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionZoom_in.setIcon(icon56)
        self.actionZoom_out = QAction(mainWindow)
        self.actionZoom_out.setObjectName(u"actionZoom_out")
        icon57 = QIcon()
        icon57.addFile(u":/Icons/icons/zoom_out.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionZoom_out.setIcon(icon57)
        self.actionClustering = QAction(mainWindow)
        self.actionClustering.setObjectName(u"actionClustering")
        icon58 = QIcon()
        icon58.addFile(u":/Icons/icons/clustering.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionClustering.setIcon(icon58)
        self.actionClustering.setMenuRole(QAction.NoRole)
        self.actionUse_clustering = QAction(mainWindow)
        self.actionUse_clustering.setObjectName(u"actionUse_clustering")
        self.actionUse_clustering.setCheckable(True)
        icon59 = QIcon()
        icon59.addFile(u":/Icons/icons/clustering_use.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionUse_clustering.setIcon(icon59)
        self.actionInvestments_evaluation = QAction(mainWindow)
        self.actionInvestments_evaluation.setObjectName(u"actionInvestments_evaluation")
        icon60 = QIcon()
        icon60.addFile(u":/Icons/icons/expansion_planning.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionInvestments_evaluation.setIcon(icon60)
        self.actionAdd_selection_bus_branch_diagram = QAction(mainWindow)
        self.actionAdd_selection_bus_branch_diagram.setObjectName(u"actionAdd_selection_bus_branch_diagram")
        icon61 = QIcon()
        icon61.addFile(u":/Icons/icons/schematic.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionAdd_selection_bus_branch_diagram.setIcon(icon61)
        self.actionAdd_bus_vecinity_diagram = QAction(mainWindow)
        self.actionAdd_bus_vecinity_diagram.setObjectName(u"actionAdd_bus_vecinity_diagram")
        self.actionAdd_bus_vecinity_diagram.setIcon(icon32)
        self.actionAdd_general_bus_branch_diagram = QAction(mainWindow)
        self.actionAdd_general_bus_branch_diagram.setObjectName(u"actionAdd_general_bus_branch_diagram")
        self.actionAdd_general_bus_branch_diagram.setIcon(icon61)
        self.actionAdd_map = QAction(mainWindow)
        self.actionAdd_map.setObjectName(u"actionAdd_map")
        icon62 = QIcon()
        icon62.addFile(u":/Icons/icons/map (add).svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionAdd_map.setIcon(icon62)
        self.actionAdd_substation_diagram = QAction(mainWindow)
        self.actionAdd_substation_diagram.setObjectName(u"actionAdd_substation_diagram")
        icon63 = QIcon()
        icon63.addFile(u":/Icons/icons/add_substation.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionAdd_substation_diagram.setIcon(icon63)
        self.actionRemove_selected_diagram = QAction(mainWindow)
        self.actionRemove_selected_diagram.setObjectName(u"actionRemove_selected_diagram")
        self.actionRemove_selected_diagram.setIcon(icon8)
        self.centralwidget = QWidget(mainWindow)
        self.centralwidget.setObjectName(u"centralwidget")
        self.verticalLayout = QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName(u"verticalLayout")
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.tabWidget = QTabWidget(self.centralwidget)
        self.tabWidget.setObjectName(u"tabWidget")
        self.GridTab = QWidget()
        self.GridTab.setObjectName(u"GridTab")
        self.verticalLayout_9 = QVBoxLayout(self.GridTab)
        self.verticalLayout_9.setSpacing(0)
        self.verticalLayout_9.setObjectName(u"verticalLayout_9")
        self.verticalLayout_9.setContentsMargins(0, 0, 0, 0)
        self.tabWidget_3 = QTabWidget(self.GridTab)
        self.tabWidget_3.setObjectName(u"tabWidget_3")
        self.tabWidget_3.setTabPosition(QTabWidget.South)
        self.tabWidget_3.setTabShape(QTabWidget.Rounded)
        self.tabWidget_3.setElideMode(Qt.ElideNone)
        self.tabWidget_3.setDocumentMode(True)
        self.GridSectionTab = QWidget()
        self.GridSectionTab.setObjectName(u"GridSectionTab")
        self.verticalLayout_30 = QVBoxLayout(self.GridSectionTab)
        self.verticalLayout_30.setObjectName(u"verticalLayout_30")
        self.verticalLayout_30.setContentsMargins(0, 0, 0, 0)
        self.frame_6 = QFrame(self.GridSectionTab)
        self.frame_6.setObjectName(u"frame_6")
        self.frame_6.setFrameShape(QFrame.NoFrame)
        self.frame_6.setFrameShadow(QFrame.Raised)
        self.verticalLayout_5 = QVBoxLayout(self.frame_6)
        self.verticalLayout_5.setObjectName(u"verticalLayout_5")
        self.verticalLayout_5.setContentsMargins(0, 0, 0, 0)
        self.diagram_selection_splitter = QSplitter(self.frame_6)
        self.diagram_selection_splitter.setObjectName(u"diagram_selection_splitter")
        self.diagram_selection_splitter.setOrientation(Qt.Horizontal)
        self.schematic_frame = QFrame(self.diagram_selection_splitter)
        self.schematic_frame.setObjectName(u"schematic_frame")
        sizePolicy = QSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.schematic_frame.sizePolicy().hasHeightForWidth())
        self.schematic_frame.setSizePolicy(sizePolicy)
        self.schematic_frame.setFrameShape(QFrame.NoFrame)
        self.schematic_frame.setFrameShadow(QFrame.Raised)
        self.verticalLayout_3 = QVBoxLayout(self.schematic_frame)
        self.verticalLayout_3.setObjectName(u"verticalLayout_3")
        self.verticalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.schematic_layout = QHBoxLayout()
        self.schematic_layout.setObjectName(u"schematic_layout")

        self.verticalLayout_3.addLayout(self.schematic_layout)

        self.diagram_selection_splitter.addWidget(self.schematic_frame)
        self.diagram_selection_frame = QFrame(self.diagram_selection_splitter)
        self.diagram_selection_frame.setObjectName(u"diagram_selection_frame")
        self.diagram_selection_frame.setFrameShape(QFrame.NoFrame)
        self.diagram_selection_frame.setFrameShadow(QFrame.Raised)
        self.verticalLayout_2 = QVBoxLayout(self.diagram_selection_frame)
        self.verticalLayout_2.setObjectName(u"verticalLayout_2")
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.diagramsListView = QListView(self.diagram_selection_frame)
        self.diagramsListView.setObjectName(u"diagramsListView")

        self.verticalLayout_2.addWidget(self.diagramsListView)

        self.diagram_selection_splitter.addWidget(self.diagram_selection_frame)

        self.verticalLayout_5.addWidget(self.diagram_selection_splitter)

        self.grid_colouring_frame = QFrame(self.frame_6)
        self.grid_colouring_frame.setObjectName(u"grid_colouring_frame")
        self.grid_colouring_frame.setMaximumSize(QSize(16777215, 50))
        self.grid_colouring_frame.setFrameShape(QFrame.NoFrame)
        self.grid_colouring_frame.setFrameShadow(QFrame.Raised)
        self.gridLayout_20 = QGridLayout(self.grid_colouring_frame)
        self.gridLayout_20.setObjectName(u"gridLayout_20")
        self.gridLayout_20.setContentsMargins(1, 1, 1, 1)
        self.start_label = QLabel(self.grid_colouring_frame)
        self.start_label.setObjectName(u"start_label")
        font = QFont()
        font.setPointSize(9)
        self.start_label.setFont(font)

        self.gridLayout_20.addWidget(self.start_label, 2, 8, 1, 1)

        self.profile_end_slider = QSlider(self.grid_colouring_frame)
        self.profile_end_slider.setObjectName(u"profile_end_slider")
        self.profile_end_slider.setOrientation(Qt.Horizontal)

        self.gridLayout_20.addWidget(self.profile_end_slider, 1, 12, 1, 1)

        self.grid_name_line_edit = QLineEdit(self.grid_colouring_frame)
        self.grid_name_line_edit.setObjectName(u"grid_name_line_edit")

        self.gridLayout_20.addWidget(self.grid_name_line_edit, 1, 0, 1, 1)

        self.view_next_simulation_step_pushButton = QPushButton(self.grid_colouring_frame)
        self.view_next_simulation_step_pushButton.setObjectName(u"view_next_simulation_step_pushButton")
        icon64 = QIcon()
        icon64.addFile(u":/Icons/icons/next.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.view_next_simulation_step_pushButton.setIcon(icon64)

        self.gridLayout_20.addWidget(self.view_next_simulation_step_pushButton, 1, 11, 1, 1)

        self.colour_results_pushButton = QPushButton(self.grid_colouring_frame)
        self.colour_results_pushButton.setObjectName(u"colour_results_pushButton")
        icon65 = QIcon()
        icon65.addFile(u":/Icons/icons/color_grid.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.colour_results_pushButton.setIcon(icon65)

        self.gridLayout_20.addWidget(self.colour_results_pushButton, 1, 15, 1, 1)

        self.simulation_results_step_slider = QSlider(self.grid_colouring_frame)
        self.simulation_results_step_slider.setObjectName(u"simulation_results_step_slider")
        self.simulation_results_step_slider.setOrientation(Qt.Horizontal)

        self.gridLayout_20.addWidget(self.simulation_results_step_slider, 1, 10, 1, 1)

        self.schematic_step_label = QLabel(self.grid_colouring_frame)
        self.schematic_step_label.setObjectName(u"schematic_step_label")
        self.schematic_step_label.setFont(font)

        self.gridLayout_20.addWidget(self.schematic_step_label, 2, 10, 1, 1)

        self.end_label = QLabel(self.grid_colouring_frame)
        self.end_label.setObjectName(u"end_label")
        self.end_label.setFont(font)

        self.gridLayout_20.addWidget(self.end_label, 2, 12, 1, 1)

        self.horizontalSpacer_19 = QSpacerItem(40, 20, QSizePolicy.Expanding, QSizePolicy.Minimum)

        self.gridLayout_20.addItem(self.horizontalSpacer_19, 1, 1, 1, 1)

        self.available_results_to_color_comboBox = QComboBox(self.grid_colouring_frame)
        self.available_results_to_color_comboBox.setObjectName(u"available_results_to_color_comboBox")
        self.available_results_to_color_comboBox.setMinimumSize(QSize(164, 0))

        self.gridLayout_20.addWidget(self.available_results_to_color_comboBox, 1, 14, 1, 1)

        self.view_previous_simulation_step_pushButton = QPushButton(self.grid_colouring_frame)
        self.view_previous_simulation_step_pushButton.setObjectName(u"view_previous_simulation_step_pushButton")
        icon66 = QIcon()
        icon66.addFile(u":/Icons/icons/prev.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.view_previous_simulation_step_pushButton.setIcon(icon66)

        self.gridLayout_20.addWidget(self.view_previous_simulation_step_pushButton, 1, 9, 1, 1)

        self.profile_start_slider = QSlider(self.grid_colouring_frame)
        self.profile_start_slider.setObjectName(u"profile_start_slider")
        self.profile_start_slider.setOrientation(Qt.Horizontal)

        self.gridLayout_20.addWidget(self.profile_start_slider, 1, 8, 1, 1)

        self.horizontalSpacer_2 = QSpacerItem(40, 20, QSizePolicy.Expanding, QSizePolicy.Minimum)

        self.gridLayout_20.addItem(self.horizontalSpacer_2, 1, 13, 1, 1)


        self.verticalLayout_5.addWidget(self.grid_colouring_frame)


        self.verticalLayout_30.addWidget(self.frame_6)

        self.tabWidget_3.addTab(self.GridSectionTab, icon61, "")
        self.DataTab = QWidget()
        self.DataTab.setObjectName(u"DataTab")
        self.verticalLayout_8 = QVBoxLayout(self.DataTab)
        self.verticalLayout_8.setObjectName(u"verticalLayout_8")
        self.verticalLayout_8.setContentsMargins(0, 0, 0, 0)
        self.dataStructuresSplitter = QSplitter(self.DataTab)
        self.dataStructuresSplitter.setObjectName(u"dataStructuresSplitter")
        self.dataStructuresSplitter.setOrientation(Qt.Horizontal)
        self.frame_26 = QFrame(self.dataStructuresSplitter)
        self.frame_26.setObjectName(u"frame_26")
        self.frame_26.setFrameShape(QFrame.NoFrame)
        self.frame_26.setFrameShadow(QFrame.Raised)
        self.verticalLayout_27 = QVBoxLayout(self.frame_26)
        self.verticalLayout_27.setObjectName(u"verticalLayout_27")
        self.verticalLayout_27.setContentsMargins(-1, 10, 0, 4)
        self.dataStructuresTreeView = QTreeView(self.frame_26)
        self.dataStructuresTreeView.setObjectName(u"dataStructuresTreeView")

        self.verticalLayout_27.addWidget(self.dataStructuresTreeView)

        self.frame_17 = QFrame(self.frame_26)
        self.frame_17.setObjectName(u"frame_17")
        self.frame_17.setFrameShape(QFrame.NoFrame)
        self.frame_17.setFrameShadow(QFrame.Raised)
        self.horizontalLayout_26 = QHBoxLayout(self.frame_17)
        self.horizontalLayout_26.setObjectName(u"horizontalLayout_26")
        self.horizontalLayout_26.setContentsMargins(0, 0, 0, 0)

        self.verticalLayout_27.addWidget(self.frame_17)

        self.dataStructuresSplitter.addWidget(self.frame_26)
        self.frame_38 = QFrame(self.dataStructuresSplitter)
        self.frame_38.setObjectName(u"frame_38")
        self.frame_38.setFrameShape(QFrame.NoFrame)
        self.frame_38.setFrameShadow(QFrame.Raised)
        self.verticalLayout_26 = QVBoxLayout(self.frame_38)
        self.verticalLayout_26.setObjectName(u"verticalLayout_26")
        self.verticalLayout_26.setContentsMargins(0, -1, 0, -1)
        self.frame_54 = QFrame(self.frame_38)
        self.frame_54.setObjectName(u"frame_54")
        self.frame_54.setMinimumSize(QSize(0, 25))
        self.frame_54.setFrameShape(QFrame.NoFrame)
        self.frame_54.setFrameShadow(QFrame.Raised)
        self.horizontalLayout_28 = QHBoxLayout(self.frame_54)
        self.horizontalLayout_28.setObjectName(u"horizontalLayout_28")
        self.horizontalLayout_28.setContentsMargins(0, 0, 0, 0)
        self.property_comboBox = QComboBox(self.frame_54)
        self.property_comboBox.setObjectName(u"property_comboBox")
        self.property_comboBox.setMinimumSize(QSize(120, 0))

        self.horizontalLayout_28.addWidget(self.property_comboBox)

        self.smart_search_lineEdit = QLineEdit(self.frame_54)
        self.smart_search_lineEdit.setObjectName(u"smart_search_lineEdit")
        self.smart_search_lineEdit.setMinimumSize(QSize(120, 0))

        self.horizontalLayout_28.addWidget(self.smart_search_lineEdit)

        self.filter_pushButton = QPushButton(self.frame_54)
        self.filter_pushButton.setObjectName(u"filter_pushButton")
        icon67 = QIcon()
        icon67.addFile(u":/Icons/icons/magnifying_glass.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.filter_pushButton.setIcon(icon67)

        self.horizontalLayout_28.addWidget(self.filter_pushButton)

        self.highlight_selection_buses_pushButton = QPushButton(self.frame_54)
        self.highlight_selection_buses_pushButton.setObjectName(u"highlight_selection_buses_pushButton")
        icon68 = QIcon()
        icon68.addFile(u":/Icons/icons/highlight.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.highlight_selection_buses_pushButton.setIcon(icon68)

        self.horizontalLayout_28.addWidget(self.highlight_selection_buses_pushButton)

        self.busViewerButton = QPushButton(self.frame_54)
        self.busViewerButton.setObjectName(u"busViewerButton")
        self.busViewerButton.setIcon(icon32)

        self.horizontalLayout_28.addWidget(self.busViewerButton)

        self.copyObjectsTableButton = QPushButton(self.frame_54)
        self.copyObjectsTableButton.setObjectName(u"copyObjectsTableButton")
        icon69 = QIcon()
        icon69.addFile(u":/Icons/icons/copy.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.copyObjectsTableButton.setIcon(icon69)

        self.horizontalLayout_28.addWidget(self.copyObjectsTableButton)

        self.setValueToColumnButton = QPushButton(self.frame_54)
        self.setValueToColumnButton.setObjectName(u"setValueToColumnButton")
        icon70 = QIcon()
        icon70.addFile(u":/Icons/icons/copy2down.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.setValueToColumnButton.setIcon(icon70)

        self.horizontalLayout_28.addWidget(self.setValueToColumnButton)

        self.highlight_by_property_pushButton = QPushButton(self.frame_54)
        self.highlight_by_property_pushButton.setObjectName(u"highlight_by_property_pushButton")
        icon71 = QIcon()
        icon71.addFile(u":/Icons/icons/highlight2.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.highlight_by_property_pushButton.setIcon(icon71)

        self.horizontalLayout_28.addWidget(self.highlight_by_property_pushButton)

        self.clear_highlight_pushButton = QPushButton(self.frame_54)
        self.clear_highlight_pushButton.setObjectName(u"clear_highlight_pushButton")
        icon72 = QIcon()
        icon72.addFile(u":/Icons/icons/unhighlight.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.clear_highlight_pushButton.setIcon(icon72)

        self.horizontalLayout_28.addWidget(self.clear_highlight_pushButton)

        self.structure_analysis_pushButton = QPushButton(self.frame_54)
        self.structure_analysis_pushButton.setObjectName(u"structure_analysis_pushButton")
        icon73 = QIcon()
        icon73.addFile(u":/Icons/icons/histogram.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.structure_analysis_pushButton.setIcon(icon73)

        self.horizontalLayout_28.addWidget(self.structure_analysis_pushButton)

        self.horizontalSpacer_6 = QSpacerItem(40, 20, QSizePolicy.Expanding, QSizePolicy.Minimum)

        self.horizontalLayout_28.addItem(self.horizontalSpacer_6)

        self.delete_and_reduce_pushButton = QPushButton(self.frame_54)
        self.delete_and_reduce_pushButton.setObjectName(u"delete_and_reduce_pushButton")
        self.delete_and_reduce_pushButton.setIcon(icon61)

        self.horizontalLayout_28.addWidget(self.delete_and_reduce_pushButton)


        self.verticalLayout_26.addWidget(self.frame_54)

        self.dataStructureTableView = QTableView(self.frame_38)
        self.dataStructureTableView.setObjectName(u"dataStructureTableView")

        self.verticalLayout_26.addWidget(self.dataStructureTableView)

        self.frame_9 = QFrame(self.frame_38)
        self.frame_9.setObjectName(u"frame_9")
        self.frame_9.setFrameShape(QFrame.NoFrame)
        self.frame_9.setFrameShadow(QFrame.Raised)
        self.horizontalLayout_25 = QHBoxLayout(self.frame_9)
        self.horizontalLayout_25.setObjectName(u"horizontalLayout_25")
        self.horizontalLayout_25.setContentsMargins(0, 0, 0, 0)
        self.add_object_pushButton = QPushButton(self.frame_9)
        self.add_object_pushButton.setObjectName(u"add_object_pushButton")
        icon74 = QIcon()
        icon74.addFile(u":/Icons/icons/plus.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.add_object_pushButton.setIcon(icon74)

        self.horizontalLayout_25.addWidget(self.add_object_pushButton)

        self.delete_selected_objects_pushButton = QPushButton(self.frame_9)
        self.delete_selected_objects_pushButton.setObjectName(u"delete_selected_objects_pushButton")
        icon75 = QIcon()
        icon75.addFile(u":/Icons/icons/minus.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.delete_selected_objects_pushButton.setIcon(icon75)

        self.horizontalLayout_25.addWidget(self.delete_selected_objects_pushButton)

        self.horizontalSpacer_9 = QSpacerItem(40, 20, QSizePolicy.Expanding, QSizePolicy.Minimum)

        self.horizontalLayout_25.addItem(self.horizontalSpacer_9)

        self.catalogue_edit_pushButton = QPushButton(self.frame_9)
        self.catalogue_edit_pushButton.setObjectName(u"catalogue_edit_pushButton")
        icon76 = QIcon()
        icon76.addFile(u":/Icons/icons/edit.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.catalogue_edit_pushButton.setIcon(icon76)

        self.horizontalLayout_25.addWidget(self.catalogue_edit_pushButton)


        self.verticalLayout_26.addWidget(self.frame_9)

        self.dataStructuresSplitter.addWidget(self.frame_38)

        self.verticalLayout_8.addWidget(self.dataStructuresSplitter)

        self.tabWidget_3.addTab(self.DataTab, icon51, "")
        self.timeEventsTab = QWidget()
        self.timeEventsTab.setObjectName(u"timeEventsTab")
        self.verticalLayout_14 = QVBoxLayout(self.timeEventsTab)
        self.verticalLayout_14.setObjectName(u"verticalLayout_14")
        self.verticalLayout_14.setContentsMargins(0, 0, 0, 0)
        self.frame = QFrame(self.timeEventsTab)
        self.frame.setObjectName(u"frame")
        self.frame.setFrameShape(QFrame.NoFrame)
        self.frame.setFrameShadow(QFrame.Raised)
        self.horizontalLayout = QHBoxLayout(self.frame)
        self.horizontalLayout.setObjectName(u"horizontalLayout")
        self.horizontalLayout.setContentsMargins(1, 2, 1, 2)
        self.new_profiles_structure_pushButton = QPushButton(self.frame)
        self.new_profiles_structure_pushButton.setObjectName(u"new_profiles_structure_pushButton")
        self.new_profiles_structure_pushButton.setIcon(icon22)

        self.horizontalLayout.addWidget(self.new_profiles_structure_pushButton)

        self.edit_profiles_pushButton = QPushButton(self.frame)
        self.edit_profiles_pushButton.setObjectName(u"edit_profiles_pushButton")
        icon77 = QIcon()
        icon77.addFile(u":/Icons/icons/import_profiles.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.edit_profiles_pushButton.setIcon(icon77)
        self.edit_profiles_pushButton.setFlat(False)

        self.horizontalLayout.addWidget(self.edit_profiles_pushButton)

        self.edit_profiles_from_models_pushButton = QPushButton(self.frame)
        self.edit_profiles_from_models_pushButton.setObjectName(u"edit_profiles_from_models_pushButton")
        icon78 = QIcon()
        icon78.addFile(u":/Icons/icons/import_models.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.edit_profiles_from_models_pushButton.setIcon(icon78)
        self.edit_profiles_from_models_pushButton.setFlat(False)

        self.horizontalLayout.addWidget(self.edit_profiles_from_models_pushButton)

        self.delete_profiles_structure_pushButton = QPushButton(self.frame)
        self.delete_profiles_structure_pushButton.setObjectName(u"delete_profiles_structure_pushButton")
        self.delete_profiles_structure_pushButton.setIcon(icon48)

        self.horizontalLayout.addWidget(self.delete_profiles_structure_pushButton)

        self.horizontalSpacer = QSpacerItem(183, 20, QSizePolicy.Expanding, QSizePolicy.Minimum)

        self.horizontalLayout.addItem(self.horizontalSpacer)

        self.undo_pushButton = QPushButton(self.frame)
        self.undo_pushButton.setObjectName(u"undo_pushButton")
        self.undo_pushButton.setIcon(icon26)

        self.horizontalLayout.addWidget(self.undo_pushButton)

        self.redo_pushButton = QPushButton(self.frame)
        self.redo_pushButton.setObjectName(u"redo_pushButton")
        icon79 = QIcon()
        icon79.addFile(u":/Icons/icons/redo.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.redo_pushButton.setIcon(icon79)

        self.horizontalLayout.addWidget(self.redo_pushButton)

        self.copy_profile_pushButton = QPushButton(self.frame)
        self.copy_profile_pushButton.setObjectName(u"copy_profile_pushButton")
        self.copy_profile_pushButton.setIcon(icon69)

        self.horizontalLayout.addWidget(self.copy_profile_pushButton)

        self.paste_profiles_pushButton = QPushButton(self.frame)
        self.paste_profiles_pushButton.setObjectName(u"paste_profiles_pushButton")
        icon80 = QIcon()
        icon80.addFile(u":/Icons/icons/paste.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.paste_profiles_pushButton.setIcon(icon80)

        self.horizontalLayout.addWidget(self.paste_profiles_pushButton)

        self.set_linear_combination_profile_pushButton = QPushButton(self.frame)
        self.set_linear_combination_profile_pushButton.setObjectName(u"set_linear_combination_profile_pushButton")
        icon81 = QIcon()
        icon81.addFile(u":/Icons/icons/copy2right.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.set_linear_combination_profile_pushButton.setIcon(icon81)

        self.horizontalLayout.addWidget(self.set_linear_combination_profile_pushButton)

        self.device_type_magnitude_comboBox_2 = QComboBox(self.frame)
        self.device_type_magnitude_comboBox_2.setObjectName(u"device_type_magnitude_comboBox_2")

        self.horizontalLayout.addWidget(self.device_type_magnitude_comboBox_2)

        self.horizontalSpacer_7 = QSpacerItem(183, 20, QSizePolicy.Expanding, QSizePolicy.Minimum)

        self.horizontalLayout.addItem(self.horizontalSpacer_7)

        self.set_profile_state_button = QPushButton(self.frame)
        self.set_profile_state_button.setObjectName(u"set_profile_state_button")
        icon82 = QIcon()
        icon82.addFile(u":/Icons/icons/copy2left.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.set_profile_state_button.setIcon(icon82)

        self.horizontalLayout.addWidget(self.set_profile_state_button)

        self.profile_time_selection_comboBox = QComboBox(self.frame)
        self.profile_time_selection_comboBox.setObjectName(u"profile_time_selection_comboBox")
        self.profile_time_selection_comboBox.setMinimumSize(QSize(200, 0))

        self.horizontalLayout.addWidget(self.profile_time_selection_comboBox)

        self.profile_device_type_comboBox = QComboBox(self.frame)
        self.profile_device_type_comboBox.setObjectName(u"profile_device_type_comboBox")

        self.horizontalLayout.addWidget(self.profile_device_type_comboBox)

        self.device_type_magnitude_comboBox = QComboBox(self.frame)
        self.device_type_magnitude_comboBox.setObjectName(u"device_type_magnitude_comboBox")

        self.horizontalLayout.addWidget(self.device_type_magnitude_comboBox)

        self.plot_time_series_pushButton = QPushButton(self.frame)
        self.plot_time_series_pushButton.setObjectName(u"plot_time_series_pushButton")
        icon83 = QIcon()
        icon83.addFile(u":/Icons/icons/plot.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.plot_time_series_pushButton.setIcon(icon83)

        self.horizontalLayout.addWidget(self.plot_time_series_pushButton)


        self.verticalLayout_14.addWidget(self.frame)

        self.profiles_tableView = QTableView(self.timeEventsTab)
        self.profiles_tableView.setObjectName(u"profiles_tableView")
        self.profiles_tableView.setLayoutDirection(Qt.LeftToRight)
        self.profiles_tableView.setAlternatingRowColors(True)
        self.profiles_tableView.setSelectionMode(QAbstractItemView.ContiguousSelection)

        self.verticalLayout_14.addWidget(self.profiles_tableView)

        self.frame_12 = QFrame(self.timeEventsTab)
        self.frame_12.setObjectName(u"frame_12")
        self.frame_12.setFrameShape(QFrame.NoFrame)
        self.frame_12.setFrameShadow(QFrame.Raised)
        self.horizontalLayout_4 = QHBoxLayout(self.frame_12)
        self.horizontalLayout_4.setObjectName(u"horizontalLayout_4")
        self.horizontalLayout_4.setContentsMargins(1, 2, 1, 2)
        self.profile_add_pushButton = QPushButton(self.frame_12)
        self.profile_add_pushButton.setObjectName(u"profile_add_pushButton")
        self.profile_add_pushButton.setIcon(icon74)

        self.horizontalLayout_4.addWidget(self.profile_add_pushButton)

        self.profile_subtract_pushButton = QPushButton(self.frame_12)
        self.profile_subtract_pushButton.setObjectName(u"profile_subtract_pushButton")
        self.profile_subtract_pushButton.setIcon(icon75)

        self.horizontalLayout_4.addWidget(self.profile_subtract_pushButton)

        self.profile_multiply_pushButton = QPushButton(self.frame_12)
        self.profile_multiply_pushButton.setObjectName(u"profile_multiply_pushButton")
        icon84 = QIcon()
        icon84.addFile(u":/Icons/icons/multiply.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.profile_multiply_pushButton.setIcon(icon84)

        self.horizontalLayout_4.addWidget(self.profile_multiply_pushButton)

        self.profile_divide_pushButton = QPushButton(self.frame_12)
        self.profile_divide_pushButton.setObjectName(u"profile_divide_pushButton")
        icon85 = QIcon()
        icon85.addFile(u":/Icons/icons/divide.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.profile_divide_pushButton.setIcon(icon85)

        self.horizontalLayout_4.addWidget(self.profile_divide_pushButton)

        self.set_profile_value_pushButton = QPushButton(self.frame_12)
        self.set_profile_value_pushButton.setObjectName(u"set_profile_value_pushButton")
        icon86 = QIcon()
        icon86.addFile(u":/Icons/icons/copy2up.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.set_profile_value_pushButton.setIcon(icon86)

        self.horizontalLayout_4.addWidget(self.set_profile_value_pushButton)

        self.profile_factor_doubleSpinBox = QDoubleSpinBox(self.frame_12)
        self.profile_factor_doubleSpinBox.setObjectName(u"profile_factor_doubleSpinBox")
        self.profile_factor_doubleSpinBox.setMinimum(-999999.000000000000000)
        self.profile_factor_doubleSpinBox.setMaximum(9999999.000000000000000)
        self.profile_factor_doubleSpinBox.setValue(1.000000000000000)

        self.horizontalLayout_4.addWidget(self.profile_factor_doubleSpinBox)

        self.horizontalSpacer_13 = QSpacerItem(267, 20, QSizePolicy.Expanding, QSizePolicy.Minimum)

        self.horizontalLayout_4.addItem(self.horizontalSpacer_13)


        self.verticalLayout_14.addWidget(self.frame_12)

        icon87 = QIcon()
        icon87.addFile(u":/Icons/icons/clock.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.tabWidget_3.addTab(self.timeEventsTab, icon87, "")
        self.compiledArraysTab = QWidget()
        self.compiledArraysTab.setObjectName(u"compiledArraysTab")
        self.horizontalLayout_7 = QHBoxLayout(self.compiledArraysTab)
        self.horizontalLayout_7.setObjectName(u"horizontalLayout_7")
        self.horizontalLayout_7.setContentsMargins(0, 0, 0, 0)
        self.simulationDataSplitter = QSplitter(self.compiledArraysTab)
        self.simulationDataSplitter.setObjectName(u"simulationDataSplitter")
        self.simulationDataSplitter.setOrientation(Qt.Horizontal)
        self.frame_28 = QFrame(self.simulationDataSplitter)
        self.frame_28.setObjectName(u"frame_28")
        self.frame_28.setFrameShape(QFrame.NoFrame)
        self.frame_28.setFrameShadow(QFrame.Raised)
        self.gridLayout_19 = QGridLayout(self.frame_28)
        self.gridLayout_19.setObjectName(u"gridLayout_19")
        self.gridLayout_19.setContentsMargins(-1, -1, 0, -1)
        self.simulationDataStructuresListView = QListView(self.frame_28)
        self.simulationDataStructuresListView.setObjectName(u"simulationDataStructuresListView")

        self.gridLayout_19.addWidget(self.simulationDataStructuresListView, 1, 0, 1, 4)

        self.compute_simulation_data_pushButton = QPushButton(self.frame_28)
        self.compute_simulation_data_pushButton.setObjectName(u"compute_simulation_data_pushButton")
        self.compute_simulation_data_pushButton.setMaximumSize(QSize(32, 16777215))
        icon88 = QIcon()
        icon88.addFile(u":/Icons/icons/calculator.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.compute_simulation_data_pushButton.setIcon(icon88)

        self.gridLayout_19.addWidget(self.compute_simulation_data_pushButton, 0, 0, 1, 1)

        self.exportSimulationDataButton = QPushButton(self.frame_28)
        self.exportSimulationDataButton.setObjectName(u"exportSimulationDataButton")
        self.exportSimulationDataButton.setMaximumSize(QSize(32, 16777215))
        self.exportSimulationDataButton.setIcon(icon3)

        self.gridLayout_19.addWidget(self.exportSimulationDataButton, 0, 1, 1, 1)

        self.simulation_data_island_comboBox = QComboBox(self.frame_28)
        self.simulation_data_island_comboBox.setObjectName(u"simulation_data_island_comboBox")

        self.gridLayout_19.addWidget(self.simulation_data_island_comboBox, 0, 2, 1, 2)

        self.simulationDataSplitter.addWidget(self.frame_28)
        self.frame_29 = QFrame(self.simulationDataSplitter)
        self.frame_29.setObjectName(u"frame_29")
        self.frame_29.setFrameShape(QFrame.NoFrame)
        self.frame_29.setFrameShadow(QFrame.Raised)
        self.gridLayout_23 = QGridLayout(self.frame_29)
        self.gridLayout_23.setObjectName(u"gridLayout_23")
        self.gridLayout_23.setContentsMargins(0, 8, -1, -1)
        self.arrayModeComboBox = QComboBox(self.frame_29)
        self.arrayModeComboBox.setObjectName(u"arrayModeComboBox")

        self.gridLayout_23.addWidget(self.arrayModeComboBox, 0, 3, 1, 1)

        self.horizontalSpacer_23 = QSpacerItem(510, 20, QSizePolicy.Expanding, QSizePolicy.Minimum)

        self.gridLayout_23.addItem(self.horizontalSpacer_23, 0, 5, 1, 1)

        self.simulationDataStructureTableView = QTableView(self.frame_29)
        self.simulationDataStructureTableView.setObjectName(u"simulationDataStructureTableView")

        self.gridLayout_23.addWidget(self.simulationDataStructureTableView, 1, 0, 1, 7)

        self.copyArraysToNumpyButton = QPushButton(self.frame_29)
        self.copyArraysToNumpyButton.setObjectName(u"copyArraysToNumpyButton")
        icon89 = QIcon()
        icon89.addFile(u":/Icons/icons/array.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.copyArraysToNumpyButton.setIcon(icon89)

        self.gridLayout_23.addWidget(self.copyArraysToNumpyButton, 0, 1, 1, 1)

        self.plotArraysButton = QPushButton(self.frame_29)
        self.plotArraysButton.setObjectName(u"plotArraysButton")
        self.plotArraysButton.setMinimumSize(QSize(32, 0))
        self.plotArraysButton.setIcon(icon83)

        self.gridLayout_23.addWidget(self.plotArraysButton, 0, 6, 1, 1)

        self.copyArraysButton = QPushButton(self.frame_29)
        self.copyArraysButton.setObjectName(u"copyArraysButton")
        self.copyArraysButton.setMinimumSize(QSize(32, 0))
        self.copyArraysButton.setIcon(icon69)

        self.gridLayout_23.addWidget(self.copyArraysButton, 0, 2, 1, 1)

        self.simulationDataSplitter.addWidget(self.frame_29)

        self.horizontalLayout_7.addWidget(self.simulationDataSplitter)

        icon90 = QIcon()
        icon90.addFile(u":/Icons/icons/squares.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.tabWidget_3.addTab(self.compiledArraysTab, icon90, "")
        self.commentsTab = QWidget()
        self.commentsTab.setObjectName(u"commentsTab")
        self.verticalLayout_18 = QVBoxLayout(self.commentsTab)
        self.verticalLayout_18.setObjectName(u"verticalLayout_18")
        self.comments_textEdit = QTextEdit(self.commentsTab)
        self.comments_textEdit.setObjectName(u"comments_textEdit")

        self.verticalLayout_18.addWidget(self.comments_textEdit)

        self.tabWidget_3.addTab(self.commentsTab, icon76, "")

        self.verticalLayout_9.addWidget(self.tabWidget_3)

        self.tabWidget.addTab(self.GridTab, icon61, "")
        self.ResultsTab = QWidget()
        self.ResultsTab.setObjectName(u"ResultsTab")
        self.verticalLayout_13 = QVBoxLayout(self.ResultsTab)
        self.verticalLayout_13.setObjectName(u"verticalLayout_13")
        self.verticalLayout_13.setContentsMargins(0, 0, 0, 0)
        self.results_splitter = QSplitter(self.ResultsTab)
        self.results_splitter.setObjectName(u"results_splitter")
        self.results_splitter.setOrientation(Qt.Horizontal)
        self.frame_16 = QFrame(self.results_splitter)
        self.frame_16.setObjectName(u"frame_16")
        self.frame_16.setFrameShape(QFrame.NoFrame)
        self.frame_16.setFrameShadow(QFrame.Raised)
        self.verticalLayout_23 = QVBoxLayout(self.frame_16)
        self.verticalLayout_23.setObjectName(u"verticalLayout_23")
        self.verticalLayout_23.setContentsMargins(0, 0, 0, 0)
        self.splitter = QSplitter(self.frame_16)
        self.splitter.setObjectName(u"splitter")
        self.splitter.setOrientation(Qt.Vertical)
        self.frame_61 = QFrame(self.splitter)
        self.frame_61.setObjectName(u"frame_61")
        self.frame_61.setFrameShape(QFrame.NoFrame)
        self.frame_61.setFrameShadow(QFrame.Raised)
        self.verticalLayout_10 = QVBoxLayout(self.frame_61)
        self.verticalLayout_10.setObjectName(u"verticalLayout_10")
        self.verticalLayout_10.setContentsMargins(-1, 8, 0, -1)
        self.frame_62 = QFrame(self.frame_61)
        self.frame_62.setObjectName(u"frame_62")
        self.frame_62.setFrameShape(QFrame.NoFrame)
        self.frame_62.setFrameShadow(QFrame.Raised)
        self.horizontalLayout_34 = QHBoxLayout(self.frame_62)
        self.horizontalLayout_34.setObjectName(u"horizontalLayout_34")
        self.horizontalLayout_34.setContentsMargins(0, 0, 0, 0)
        self.label_16 = QLabel(self.frame_62)
        self.label_16.setObjectName(u"label_16")
        self.label_16.setMinimumSize(QSize(0, 24))
        palette = QPalette()
        brush = QBrush(QColor(119, 118, 123, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.WindowText, brush)
        palette.setBrush(QPalette.Inactive, QPalette.WindowText, brush)
        brush1 = QBrush(QColor(190, 190, 190, 255))
        brush1.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.label_16.setPalette(palette)

        self.horizontalLayout_34.addWidget(self.label_16)

        self.horizontalSpacer_22 = QSpacerItem(40, 20, QSizePolicy.Expanding, QSizePolicy.Minimum)

        self.horizontalLayout_34.addItem(self.horizontalSpacer_22)

        self.deleteDriverButton = QPushButton(self.frame_62)
        self.deleteDriverButton.setObjectName(u"deleteDriverButton")
        self.deleteDriverButton.setIcon(icon75)

        self.horizontalLayout_34.addWidget(self.deleteDriverButton)


        self.verticalLayout_10.addWidget(self.frame_62)

        self.results_treeView = QTreeView(self.frame_61)
        self.results_treeView.setObjectName(u"results_treeView")
        self.results_treeView.setAnimated(True)

        self.verticalLayout_10.addWidget(self.results_treeView)

        self.splitter.addWidget(self.frame_61)
        self.frame_14 = QFrame(self.splitter)
        self.frame_14.setObjectName(u"frame_14")
        self.frame_14.setFrameShape(QFrame.NoFrame)
        self.frame_14.setFrameShadow(QFrame.Raised)
        self.verticalLayout_6 = QVBoxLayout(self.frame_14)
        self.verticalLayout_6.setObjectName(u"verticalLayout_6")
        self.verticalLayout_6.setContentsMargins(-1, -1, 0, -1)
        self.frame_60 = QFrame(self.frame_14)
        self.frame_60.setObjectName(u"frame_60")
        self.frame_60.setFrameShape(QFrame.NoFrame)
        self.frame_60.setFrameShadow(QFrame.Raised)
        self.horizontalLayout_33 = QHBoxLayout(self.frame_60)
        self.horizontalLayout_33.setObjectName(u"horizontalLayout_33")
        self.horizontalLayout_33.setContentsMargins(0, 0, 0, 0)
        self.label_37 = QLabel(self.frame_60)
        self.label_37.setObjectName(u"label_37")
        palette1 = QPalette()
        palette1.setBrush(QPalette.Active, QPalette.WindowText, brush)
        palette1.setBrush(QPalette.Inactive, QPalette.WindowText, brush)
        palette1.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.label_37.setPalette(palette1)

        self.horizontalLayout_33.addWidget(self.label_37)

        self.horizontalSpacer_21 = QSpacerItem(40, 20, QSizePolicy.Expanding, QSizePolicy.Minimum)

        self.horizontalLayout_33.addItem(self.horizontalSpacer_21)

        self.loadResultFromDiskButton = QPushButton(self.frame_60)
        self.loadResultFromDiskButton.setObjectName(u"loadResultFromDiskButton")
        self.loadResultFromDiskButton.setIcon(icon1)

        self.horizontalLayout_33.addWidget(self.loadResultFromDiskButton)


        self.verticalLayout_6.addWidget(self.frame_60)

        self.diskSessionsTreeView = QTreeView(self.frame_14)
        self.diskSessionsTreeView.setObjectName(u"diskSessionsTreeView")
        self.diskSessionsTreeView.setAnimated(True)

        self.verticalLayout_6.addWidget(self.diskSessionsTreeView)

        self.splitter.addWidget(self.frame_14)

        self.verticalLayout_23.addWidget(self.splitter)

        self.results_splitter.addWidget(self.frame_16)
        self.frame_5 = QFrame(self.results_splitter)
        self.frame_5.setObjectName(u"frame_5")
        self.frame_5.setFrameShape(QFrame.NoFrame)
        self.frame_5.setFrameShadow(QFrame.Raised)
        self.verticalLayout_24 = QVBoxLayout(self.frame_5)
        self.verticalLayout_24.setObjectName(u"verticalLayout_24")
        self.verticalLayout_24.setContentsMargins(0, -1, 8, -1)
        self.frame_8 = QFrame(self.frame_5)
        self.frame_8.setObjectName(u"frame_8")
        self.frame_8.setFrameShape(QFrame.NoFrame)
        self.frame_8.setFrameShadow(QFrame.Raised)
        self.horizontalLayout_2 = QHBoxLayout(self.frame_8)
        self.horizontalLayout_2.setObjectName(u"horizontalLayout_2")
        self.horizontalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.copy_results_pushButton = QPushButton(self.frame_8)
        self.copy_results_pushButton.setObjectName(u"copy_results_pushButton")
        self.copy_results_pushButton.setIcon(icon69)

        self.horizontalLayout_2.addWidget(self.copy_results_pushButton)

        self.copy_numpy_button = QPushButton(self.frame_8)
        self.copy_numpy_button.setObjectName(u"copy_numpy_button")
        self.copy_numpy_button.setIcon(icon89)

        self.horizontalLayout_2.addWidget(self.copy_numpy_button)

        self.saveResultsButton = QPushButton(self.frame_8)
        self.saveResultsButton.setObjectName(u"saveResultsButton")
        self.saveResultsButton.setIcon(icon3)

        self.horizontalLayout_2.addWidget(self.saveResultsButton)

        self.results_as_cdf_checkBox = QCheckBox(self.frame_8)
        self.results_as_cdf_checkBox.setObjectName(u"results_as_cdf_checkBox")
        icon91 = QIcon()
        icon91.addFile(u":/Icons/icons/cdf.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.results_as_cdf_checkBox.setIcon(icon91)

        self.horizontalLayout_2.addWidget(self.results_as_cdf_checkBox)

        self.results_as_abs_checkBox = QCheckBox(self.frame_8)
        self.results_as_abs_checkBox.setObjectName(u"results_as_abs_checkBox")
        icon92 = QIcon()
        icon92.addFile(u":/Icons/icons/abs.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.results_as_abs_checkBox.setIcon(icon92)

        self.horizontalLayout_2.addWidget(self.results_as_abs_checkBox)

        self.units_label = QLabel(self.frame_8)
        self.units_label.setObjectName(u"units_label")

        self.horizontalLayout_2.addWidget(self.units_label)

        self.horizontalSpacer_4 = QSpacerItem(40, 20, QSizePolicy.Expanding, QSizePolicy.Minimum)

        self.horizontalLayout_2.addItem(self.horizontalSpacer_4)

        self.sear_results_lineEdit = QLineEdit(self.frame_8)
        self.sear_results_lineEdit.setObjectName(u"sear_results_lineEdit")

        self.horizontalLayout_2.addWidget(self.sear_results_lineEdit)

        self.search_results_Button = QPushButton(self.frame_8)
        self.search_results_Button.setObjectName(u"search_results_Button")
        self.search_results_Button.setIcon(icon67)

        self.horizontalLayout_2.addWidget(self.search_results_Button)

        self.horizontalSpacer_17 = QSpacerItem(40, 20, QSizePolicy.Expanding, QSizePolicy.Minimum)

        self.horizontalLayout_2.addItem(self.horizontalSpacer_17)

        self.plot_data_pushButton = QPushButton(self.frame_8)
        self.plot_data_pushButton.setObjectName(u"plot_data_pushButton")
        self.plot_data_pushButton.setIcon(icon83)

        self.horizontalLayout_2.addWidget(self.plot_data_pushButton)


        self.verticalLayout_24.addWidget(self.frame_8)

        self.resultsTableView = QTableView(self.frame_5)
        self.resultsTableView.setObjectName(u"resultsTableView")
        self.resultsTableView.setAlternatingRowColors(True)
        self.resultsTableView.setSelectionMode(QAbstractItemView.ExtendedSelection)
        self.resultsTableView.setSelectionBehavior(QAbstractItemView.SelectItems)

        self.verticalLayout_24.addWidget(self.resultsTableView)

        self.results_splitter.addWidget(self.frame_5)

        self.verticalLayout_13.addWidget(self.results_splitter)

        self.tabWidget.addTab(self.ResultsTab, icon83, "")
        self.main_console_tab = QWidget()
        self.main_console_tab.setObjectName(u"main_console_tab")
        self.verticalLayout_22 = QVBoxLayout(self.main_console_tab)
        self.verticalLayout_22.setObjectName(u"verticalLayout_22")
        self.verticalLayout_22.setContentsMargins(0, 0, 0, 0)
        self.tabWidget_2 = QTabWidget(self.main_console_tab)
        self.tabWidget_2.setObjectName(u"tabWidget_2")
        self.tabWidget_2.setTabPosition(QTabWidget.South)
        self.tab_7 = QWidget()
        self.tab_7.setObjectName(u"tab_7")
        self.verticalLayout_28 = QVBoxLayout(self.tab_7)
        self.verticalLayout_28.setObjectName(u"verticalLayout_28")
        self.verticalLayout_28.setContentsMargins(0, 0, 0, 0)
        self.outputTextEdit = QPlainTextEdit(self.tab_7)
        self.outputTextEdit.setObjectName(u"outputTextEdit")
        palette2 = QPalette()
        brush2 = QBrush(QColor(255, 255, 255, 255))
        brush2.setStyle(Qt.SolidPattern)
        palette2.setBrush(QPalette.Active, QPalette.Button, brush2)
        palette2.setBrush(QPalette.Active, QPalette.Midlight, brush2)
        brush3 = QBrush(QColor(127, 127, 127, 255))
        brush3.setStyle(Qt.SolidPattern)
        palette2.setBrush(QPalette.Active, QPalette.Dark, brush3)
        brush4 = QBrush(QColor(170, 170, 170, 255))
        brush4.setStyle(Qt.SolidPattern)
        palette2.setBrush(QPalette.Active, QPalette.Mid, brush4)
        palette2.setBrush(QPalette.Active, QPalette.Window, brush2)
        palette2.setBrush(QPalette.Active, QPalette.AlternateBase, brush2)
        brush5 = QBrush(QColor(0, 0, 0, 128))
        brush5.setStyle(Qt.NoBrush)
#if QT_VERSION >= QT_VERSION_CHECK(5, 12, 0)
        palette2.setBrush(QPalette.Active, QPalette.PlaceholderText, brush5)
#endif
        palette2.setBrush(QPalette.Inactive, QPalette.Button, brush2)
        palette2.setBrush(QPalette.Inactive, QPalette.Midlight, brush2)
        palette2.setBrush(QPalette.Inactive, QPalette.Dark, brush3)
        palette2.setBrush(QPalette.Inactive, QPalette.Mid, brush4)
        palette2.setBrush(QPalette.Inactive, QPalette.Window, brush2)
        palette2.setBrush(QPalette.Inactive, QPalette.AlternateBase, brush2)
        brush6 = QBrush(QColor(0, 0, 0, 128))
        brush6.setStyle(Qt.NoBrush)
#if QT_VERSION >= QT_VERSION_CHECK(5, 12, 0)
        palette2.setBrush(QPalette.Inactive, QPalette.PlaceholderText, brush6)
#endif
        palette2.setBrush(QPalette.Disabled, QPalette.Button, brush2)
        palette2.setBrush(QPalette.Disabled, QPalette.Midlight, brush2)
        palette2.setBrush(QPalette.Disabled, QPalette.Dark, brush3)
        palette2.setBrush(QPalette.Disabled, QPalette.Mid, brush4)
        palette2.setBrush(QPalette.Disabled, QPalette.Window, brush2)
        palette2.setBrush(QPalette.Disabled, QPalette.AlternateBase, brush2)
        brush7 = QBrush(QColor(0, 0, 0, 128))
        brush7.setStyle(Qt.NoBrush)
#if QT_VERSION >= QT_VERSION_CHECK(5, 12, 0)
        palette2.setBrush(QPalette.Disabled, QPalette.PlaceholderText, brush7)
#endif
        self.outputTextEdit.setPalette(palette2)
        font1 = QFont()
        font1.setFamilies([u"Cousine"])
        font1.setPointSize(9)
        self.outputTextEdit.setFont(font1)
        self.outputTextEdit.setFrameShape(QFrame.NoFrame)
        self.outputTextEdit.setLineWrapMode(QPlainTextEdit.NoWrap)
        self.outputTextEdit.setPlainText(u"")
        self.outputTextEdit.setTextInteractionFlags(Qt.LinksAccessibleByMouse|Qt.TextEditable|Qt.TextEditorInteraction|Qt.TextSelectableByKeyboard|Qt.TextSelectableByMouse)

        self.verticalLayout_28.addWidget(self.outputTextEdit)

        self.tabWidget_2.addTab(self.tab_7, icon51, "")
        self.pythonConsoleTab = QWidget()
        self.pythonConsoleTab.setObjectName(u"pythonConsoleTab")
        self.verticalLayout_33 = QVBoxLayout(self.pythonConsoleTab)
        self.verticalLayout_33.setObjectName(u"verticalLayout_33")
        self.verticalLayout_33.setContentsMargins(0, 0, 0, 0)
        icon93 = QIcon()
        icon93.addFile(u":/Icons/icons/console.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.tabWidget_2.addTab(self.pythonConsoleTab, icon93, "")

        self.verticalLayout_22.addWidget(self.tabWidget_2)

        self.tabWidget.addTab(self.main_console_tab, icon93, "")
        self.SettingsTab = QWidget()
        self.SettingsTab.setObjectName(u"SettingsTab")
        self.gridLayout_8 = QGridLayout(self.SettingsTab)
        self.gridLayout_8.setObjectName(u"gridLayout_8")
        self.settings_tabWidget = QTabWidget(self.SettingsTab)
        self.settings_tabWidget.setObjectName(u"settings_tabWidget")
        self.settings_tabWidget.setEnabled(True)
        self.settings_tabWidget.setAutoFillBackground(False)
        self.settings_tabWidget.setTabPosition(QTabWidget.South)
        self.settings_tabWidget.setElideMode(Qt.ElideNone)
        self.settings_tabWidget.setDocumentMode(False)
        self.settings_tabWidget.setMovable(False)
        self.settings_tabWidget.setTabBarAutoHide(False)
        self.tab_3 = QWidget()
        self.tab_3.setObjectName(u"tab_3")
        self.horizontalLayout_23 = QHBoxLayout(self.tab_3)
        self.horizontalLayout_23.setObjectName(u"horizontalLayout_23")
        self.frame_13 = QFrame(self.tab_3)
        self.frame_13.setObjectName(u"frame_13")
        self.frame_13.setFrameShape(QFrame.NoFrame)
        self.frame_13.setFrameShadow(QFrame.Raised)
        self.gridLayout_9 = QGridLayout(self.frame_13)
        self.gridLayout_9.setObjectName(u"gridLayout_9")
        self.gridLayout_9.setContentsMargins(-1, 0, -1, -1)
        self.frame_19 = QFrame(self.frame_13)
        self.frame_19.setObjectName(u"frame_19")
        self.frame_19.setFrameShape(QFrame.NoFrame)
        self.frame_19.setFrameShadow(QFrame.Raised)
        self.gridLayout_22 = QGridLayout(self.frame_19)
        self.gridLayout_22.setObjectName(u"gridLayout_22")
        self.max_iterations_spinBox = QSpinBox(self.frame_19)
        self.max_iterations_spinBox.setObjectName(u"max_iterations_spinBox")
        self.max_iterations_spinBox.setMinimum(1)
        self.max_iterations_spinBox.setMaximum(1000)
        self.max_iterations_spinBox.setValue(40)

        self.gridLayout_22.addWidget(self.max_iterations_spinBox, 11, 1, 1, 1)

        self.helm_retry_checkBox = QCheckBox(self.frame_19)
        self.helm_retry_checkBox.setObjectName(u"helm_retry_checkBox")
        self.helm_retry_checkBox.setChecked(True)

        self.gridLayout_22.addWidget(self.helm_retry_checkBox, 3, 0, 1, 2)

        self.label_5 = QLabel(self.frame_19)
        self.label_5.setObjectName(u"label_5")

        self.gridLayout_22.addWidget(self.label_5, 9, 0, 1, 1)

        self.ignore_single_node_islands_checkBox = QCheckBox(self.frame_19)
        self.ignore_single_node_islands_checkBox.setObjectName(u"ignore_single_node_islands_checkBox")
        self.ignore_single_node_islands_checkBox.setChecked(True)

        self.gridLayout_22.addWidget(self.ignore_single_node_islands_checkBox, 5, 0, 1, 2)

        self.label_86 = QLabel(self.frame_19)
        self.label_86.setObjectName(u"label_86")

        self.gridLayout_22.addWidget(self.label_86, 2, 0, 1, 2)

        self.label_11 = QLabel(self.frame_19)
        self.label_11.setObjectName(u"label_11")

        self.gridLayout_22.addWidget(self.label_11, 10, 0, 1, 1)

        self.tolerance_spinBox = QSpinBox(self.frame_19)
        self.tolerance_spinBox.setObjectName(u"tolerance_spinBox")
        self.tolerance_spinBox.setMinimum(1)
        self.tolerance_spinBox.setMaximum(15)
        self.tolerance_spinBox.setValue(4)

        self.gridLayout_22.addWidget(self.tolerance_spinBox, 9, 1, 1, 1)

        self.verbositySpinBox = QSpinBox(self.frame_19)
        self.verbositySpinBox.setObjectName(u"verbositySpinBox")
        self.verbositySpinBox.setMaximum(2)

        self.gridLayout_22.addWidget(self.verbositySpinBox, 12, 1, 1, 1)

        self.use_voltage_guess_checkBox = QCheckBox(self.frame_19)
        self.use_voltage_guess_checkBox.setObjectName(u"use_voltage_guess_checkBox")

        self.gridLayout_22.addWidget(self.use_voltage_guess_checkBox, 7, 0, 1, 2)

        self.muSpinBox = QDoubleSpinBox(self.frame_19)
        self.muSpinBox.setObjectName(u"muSpinBox")
        self.muSpinBox.setDecimals(4)
        self.muSpinBox.setMinimum(0.000100000000000)
        self.muSpinBox.setMaximum(1.000000000000000)
        self.muSpinBox.setSingleStep(0.100000000000000)
        self.muSpinBox.setValue(1.000000000000000)

        self.gridLayout_22.addWidget(self.muSpinBox, 10, 1, 1, 1)

        self.label_6 = QLabel(self.frame_19)
        self.label_6.setObjectName(u"label_6")

        self.gridLayout_22.addWidget(self.label_6, 11, 0, 1, 1)

        self.solver_comboBox = QComboBox(self.frame_19)
        self.solver_comboBox.setObjectName(u"solver_comboBox")

        self.gridLayout_22.addWidget(self.solver_comboBox, 1, 0, 1, 2)

        self.label_22 = QLabel(self.frame_19)
        self.label_22.setObjectName(u"label_22")

        self.gridLayout_22.addWidget(self.label_22, 13, 0, 1, 2)

        self.distributed_slack_checkBox = QCheckBox(self.frame_19)
        self.distributed_slack_checkBox.setObjectName(u"distributed_slack_checkBox")

        self.gridLayout_22.addWidget(self.distributed_slack_checkBox, 4, 0, 1, 2)

        self.label_2 = QLabel(self.frame_19)
        self.label_2.setObjectName(u"label_2")

        self.gridLayout_22.addWidget(self.label_2, 0, 0, 1, 1)

        self.verticalSpacer_10 = QSpacerItem(20, 40, QSizePolicy.Minimum, QSizePolicy.Expanding)

        self.gridLayout_22.addItem(self.verticalSpacer_10, 14, 0, 1, 1)

        self.auto_precision_checkBox = QCheckBox(self.frame_19)
        self.auto_precision_checkBox.setObjectName(u"auto_precision_checkBox")

        self.gridLayout_22.addWidget(self.auto_precision_checkBox, 6, 0, 1, 2)

        self.label_23 = QLabel(self.frame_19)
        self.label_23.setObjectName(u"label_23")

        self.gridLayout_22.addWidget(self.label_23, 12, 0, 1, 1)

        self.label_87 = QLabel(self.frame_19)
        self.label_87.setObjectName(u"label_87")

        self.gridLayout_22.addWidget(self.label_87, 8, 0, 1, 2)


        self.gridLayout_9.addWidget(self.frame_19, 2, 0, 1, 1)

        self.frame_36 = QFrame(self.frame_13)
        self.frame_36.setObjectName(u"frame_36")
        self.frame_36.setFrameShape(QFrame.NoFrame)
        self.frame_36.setFrameShadow(QFrame.Plain)
        self.verticalLayout_4 = QVBoxLayout(self.frame_36)
        self.verticalLayout_4.setObjectName(u"verticalLayout_4")
        self.label_48 = QLabel(self.frame_36)
        self.label_48.setObjectName(u"label_48")

        self.verticalLayout_4.addWidget(self.label_48)

        self.reactive_power_control_mode_comboBox = QComboBox(self.frame_36)
        self.reactive_power_control_mode_comboBox.setObjectName(u"reactive_power_control_mode_comboBox")

        self.verticalLayout_4.addWidget(self.reactive_power_control_mode_comboBox)

        self.label_641 = QLabel(self.frame_36)
        self.label_641.setObjectName(u"label_641")

        self.verticalLayout_4.addWidget(self.label_641)

        self.label_50 = QLabel(self.frame_36)
        self.label_50.setObjectName(u"label_50")

        self.verticalLayout_4.addWidget(self.label_50)

        self.taps_control_mode_comboBox = QComboBox(self.frame_36)
        self.taps_control_mode_comboBox.setObjectName(u"taps_control_mode_comboBox")

        self.verticalLayout_4.addWidget(self.taps_control_mode_comboBox)

        self.label_65 = QLabel(self.frame_36)
        self.label_65.setObjectName(u"label_65")

        self.verticalLayout_4.addWidget(self.label_65)

        self.temperature_correction_checkBox = QCheckBox(self.frame_36)
        self.temperature_correction_checkBox.setObjectName(u"temperature_correction_checkBox")

        self.verticalLayout_4.addWidget(self.temperature_correction_checkBox)

        self.apply_impedance_tolerances_checkBox = QCheckBox(self.frame_36)
        self.apply_impedance_tolerances_checkBox.setObjectName(u"apply_impedance_tolerances_checkBox")

        self.verticalLayout_4.addWidget(self.apply_impedance_tolerances_checkBox)

        self.override_branch_controls_checkBox = QCheckBox(self.frame_36)
        self.override_branch_controls_checkBox.setObjectName(u"override_branch_controls_checkBox")

        self.verticalLayout_4.addWidget(self.override_branch_controls_checkBox)

        self.verticalSpacer_14 = QSpacerItem(20, 40, QSizePolicy.Minimum, QSizePolicy.Expanding)

        self.verticalLayout_4.addItem(self.verticalSpacer_14)


        self.gridLayout_9.addWidget(self.frame_36, 2, 1, 1, 1)

        self.line_14 = QFrame(self.frame_13)
        self.line_14.setObjectName(u"line_14")
        palette3 = QPalette()
        brush8 = QBrush(QColor(186, 189, 182, 255))
        brush8.setStyle(Qt.SolidPattern)
        palette3.setBrush(QPalette.Active, QPalette.WindowText, brush8)
        palette3.setBrush(QPalette.Inactive, QPalette.WindowText, brush8)
        palette3.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.line_14.setPalette(palette3)
        self.line_14.setFrameShadow(QFrame.Plain)
        self.line_14.setLineWidth(4)
        self.line_14.setFrameShape(QFrame.HLine)

        self.gridLayout_9.addWidget(self.line_14, 1, 0, 1, 2)

        self.frame_20 = QFrame(self.frame_13)
        self.frame_20.setObjectName(u"frame_20")
        self.frame_20.setFrameShape(QFrame.NoFrame)
        self.frame_20.setFrameShadow(QFrame.Raised)
        self.horizontalLayout_9 = QHBoxLayout(self.frame_20)
        self.horizontalLayout_9.setObjectName(u"horizontalLayout_9")
        self.horizontalLayout_9.setContentsMargins(0, 0, 0, 0)
        self.label_63 = QLabel(self.frame_20)
        self.label_63.setObjectName(u"label_63")
        self.label_63.setMinimumSize(QSize(24, 24))
        self.label_63.setMaximumSize(QSize(24, 24))
        self.label_63.setPixmap(QPixmap(u":/Icons/icons/pf.svg"))
        self.label_63.setScaledContents(True)

        self.horizontalLayout_9.addWidget(self.label_63)

        self.label_17 = QLabel(self.frame_20)
        self.label_17.setObjectName(u"label_17")
        palette4 = QPalette()
        brush9 = QBrush(QColor(85, 87, 83, 255))
        brush9.setStyle(Qt.SolidPattern)
        palette4.setBrush(QPalette.Active, QPalette.WindowText, brush9)
        palette4.setBrush(QPalette.Inactive, QPalette.WindowText, brush9)
        palette4.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.label_17.setPalette(palette4)
        font2 = QFont()
        font2.setPointSize(16)
        self.label_17.setFont(font2)
        self.label_17.setAlignment(Qt.AlignBottom|Qt.AlignLeading|Qt.AlignLeft)

        self.horizontalLayout_9.addWidget(self.label_17)


        self.gridLayout_9.addWidget(self.frame_20, 0, 0, 1, 2)


        self.horizontalLayout_23.addWidget(self.frame_13)

        self.horizontalSpacer_5 = QSpacerItem(40, 20, QSizePolicy.Expanding, QSizePolicy.Minimum)

        self.horizontalLayout_23.addItem(self.horizontalSpacer_5)

        self.settings_tabWidget.addTab(self.tab_3, icon5, "")
        self.tab_5 = QWidget()
        self.tab_5.setObjectName(u"tab_5")
        self.horizontalLayout_10 = QHBoxLayout(self.tab_5)
        self.horizontalLayout_10.setObjectName(u"horizontalLayout_10")
        self.frame_21 = QFrame(self.tab_5)
        self.frame_21.setObjectName(u"frame_21")
        self.frame_21.setFrameShape(QFrame.NoFrame)
        self.frame_21.setFrameShadow(QFrame.Raised)
        self.gridLayout_2 = QGridLayout(self.frame_21)
        self.gridLayout_2.setObjectName(u"gridLayout_2")
        self.gridLayout_2.setContentsMargins(-1, 0, -1, -1)
        self.vs_max_iterations_spinBox = QSpinBox(self.frame_21)
        self.vs_max_iterations_spinBox.setObjectName(u"vs_max_iterations_spinBox")
        self.vs_max_iterations_spinBox.setMinimum(1)
        self.vs_max_iterations_spinBox.setMaximum(300)
        self.vs_max_iterations_spinBox.setValue(20)

        self.gridLayout_2.addWidget(self.vs_max_iterations_spinBox, 2, 1, 1, 2)

        self.label_8 = QLabel(self.frame_21)
        self.label_8.setObjectName(u"label_8")

        self.gridLayout_2.addWidget(self.label_8, 3, 0, 1, 1)

        self.label_25 = QLabel(self.frame_21)
        self.label_25.setObjectName(u"label_25")

        self.gridLayout_2.addWidget(self.label_25, 15, 0, 1, 3)

        self.vc_stop_at_comboBox = QComboBox(self.frame_21)
        self.vc_stop_at_comboBox.setObjectName(u"vc_stop_at_comboBox")

        self.gridLayout_2.addWidget(self.vc_stop_at_comboBox, 3, 1, 1, 2)

        self.alpha_doubleSpinBox = QDoubleSpinBox(self.frame_21)
        self.alpha_doubleSpinBox.setObjectName(u"alpha_doubleSpinBox")
        self.alpha_doubleSpinBox.setMinimum(-99.000000000000000)
        self.alpha_doubleSpinBox.setValue(2.000000000000000)

        self.gridLayout_2.addWidget(self.alpha_doubleSpinBox, 8, 1, 1, 2)

        self.line_17 = QFrame(self.frame_21)
        self.line_17.setObjectName(u"line_17")
        palette5 = QPalette()
        palette5.setBrush(QPalette.Active, QPalette.WindowText, brush8)
        palette5.setBrush(QPalette.Inactive, QPalette.WindowText, brush8)
        palette5.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.line_17.setPalette(palette5)
        self.line_17.setFrameShadow(QFrame.Plain)
        self.line_17.setLineWidth(4)
        self.line_17.setFrameShape(QFrame.HLine)

        self.gridLayout_2.addWidget(self.line_17, 1, 0, 1, 3)

        self.vs_departure_comboBox = QComboBox(self.frame_21)
        self.vs_departure_comboBox.setObjectName(u"vs_departure_comboBox")

        self.gridLayout_2.addWidget(self.vs_departure_comboBox, 11, 1, 1, 2)

        self.label_107 = QLabel(self.frame_21)
        self.label_107.setObjectName(u"label_107")

        self.gridLayout_2.addWidget(self.label_107, 9, 0, 1, 1)

        self.label_19 = QLabel(self.frame_21)
        self.label_19.setObjectName(u"label_19")

        self.gridLayout_2.addWidget(self.label_19, 11, 0, 1, 1)

        self.start_vs_from_selected_radioButton = QRadioButton(self.frame_21)
        self.start_vs_from_selected_radioButton.setObjectName(u"start_vs_from_selected_radioButton")

        self.gridLayout_2.addWidget(self.start_vs_from_selected_radioButton, 10, 0, 1, 3)

        self.vs_target_comboBox = QComboBox(self.frame_21)
        self.vs_target_comboBox.setObjectName(u"vs_target_comboBox")

        self.gridLayout_2.addWidget(self.vs_target_comboBox, 12, 1, 1, 2)

        self.atcRadioButton = QRadioButton(self.frame_21)
        self.atcRadioButton.setObjectName(u"atcRadioButton")

        self.gridLayout_2.addWidget(self.atcRadioButton, 14, 0, 1, 3)

        self.label_106 = QLabel(self.frame_21)
        self.label_106.setObjectName(u"label_106")

        self.gridLayout_2.addWidget(self.label_106, 4, 0, 1, 1)

        self.label_18 = QLabel(self.frame_21)
        self.label_18.setObjectName(u"label_18")

        self.gridLayout_2.addWidget(self.label_18, 8, 0, 1, 1)

        self.label_29 = QLabel(self.frame_21)
        self.label_29.setObjectName(u"label_29")

        self.gridLayout_2.addWidget(self.label_29, 2, 0, 1, 1)

        self.label_20 = QLabel(self.frame_21)
        self.label_20.setObjectName(u"label_20")

        self.gridLayout_2.addWidget(self.label_20, 12, 0, 1, 1)

        self.label_108 = QLabel(self.frame_21)
        self.label_108.setObjectName(u"label_108")

        self.gridLayout_2.addWidget(self.label_108, 13, 0, 1, 1)

        self.frame_44 = QFrame(self.frame_21)
        self.frame_44.setObjectName(u"frame_44")
        self.frame_44.setFrameShape(QFrame.NoFrame)
        self.frame_44.setFrameShadow(QFrame.Raised)
        self.horizontalLayout_16 = QHBoxLayout(self.frame_44)
        self.horizontalLayout_16.setObjectName(u"horizontalLayout_16")
        self.horizontalLayout_16.setContentsMargins(0, 0, 0, 0)
        self.label_74 = QLabel(self.frame_44)
        self.label_74.setObjectName(u"label_74")
        self.label_74.setMinimumSize(QSize(24, 24))
        self.label_74.setMaximumSize(QSize(24, 24))
        self.label_74.setPixmap(QPixmap(u":/Icons/icons/continuation_power_flow.svg"))
        self.label_74.setScaledContents(True)

        self.horizontalLayout_16.addWidget(self.label_74)

        self.label_46 = QLabel(self.frame_44)
        self.label_46.setObjectName(u"label_46")
        palette6 = QPalette()
        palette6.setBrush(QPalette.Active, QPalette.WindowText, brush9)
        palette6.setBrush(QPalette.Inactive, QPalette.WindowText, brush9)
        palette6.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.label_46.setPalette(palette6)
        self.label_46.setFont(font2)
        self.label_46.setAlignment(Qt.AlignBottom|Qt.AlignLeading|Qt.AlignLeft)

        self.horizontalLayout_16.addWidget(self.label_46)


        self.gridLayout_2.addWidget(self.frame_44, 0, 0, 1, 3)

        self.label_67 = QLabel(self.frame_21)
        self.label_67.setObjectName(u"label_67")
        font3 = QFont()
        font3.setPointSize(12)
        self.label_67.setFont(font3)

        self.gridLayout_2.addWidget(self.label_67, 5, 0, 1, 3)

        self.start_vs_from_default_radioButton = QRadioButton(self.frame_21)
        self.start_vs_from_default_radioButton.setObjectName(u"start_vs_from_default_radioButton")
        self.start_vs_from_default_radioButton.setChecked(True)

        self.gridLayout_2.addWidget(self.start_vs_from_default_radioButton, 7, 0, 1, 3)

        self.verticalSpacer_7 = QSpacerItem(20, 40, QSizePolicy.Minimum, QSizePolicy.Expanding)

        self.gridLayout_2.addItem(self.verticalSpacer_7, 16, 0, 1, 3)


        self.horizontalLayout_10.addWidget(self.frame_21)

        self.horizontalSpacer_24 = QSpacerItem(589, 20, QSizePolicy.Expanding, QSizePolicy.Minimum)

        self.horizontalLayout_10.addItem(self.horizontalSpacer_24)

        self.settings_tabWidget.addTab(self.tab_5, icon10, "")
        self.tab_4 = QWidget()
        self.tab_4.setObjectName(u"tab_4")
        self.gridLayout_10 = QGridLayout(self.tab_4)
        self.gridLayout_10.setObjectName(u"gridLayout_10")
        self.horizontalSpacer_10 = QSpacerItem(40, 20, QSizePolicy.Expanding, QSizePolicy.Minimum)

        self.gridLayout_10.addItem(self.horizontalSpacer_10, 0, 4, 1, 1)

        self.frame_30 = QFrame(self.tab_4)
        self.frame_30.setObjectName(u"frame_30")
        self.frame_30.setFrameShape(QFrame.NoFrame)
        self.frame_30.setFrameShadow(QFrame.Raised)
        self.verticalLayout_20 = QVBoxLayout(self.frame_30)
        self.verticalLayout_20.setObjectName(u"verticalLayout_20")
        self.verticalLayout_20.setContentsMargins(-1, 0, -1, -1)
        self.frame_43 = QFrame(self.frame_30)
        self.frame_43.setObjectName(u"frame_43")
        self.frame_43.setFrameShape(QFrame.NoFrame)
        self.frame_43.setFrameShadow(QFrame.Raised)
        self.horizontalLayout_15 = QHBoxLayout(self.frame_43)
        self.horizontalLayout_15.setObjectName(u"horizontalLayout_15")
        self.horizontalLayout_15.setContentsMargins(0, 0, 0, 0)
        self.label_72 = QLabel(self.frame_43)
        self.label_72.setObjectName(u"label_72")
        self.label_72.setMinimumSize(QSize(24, 24))
        self.label_72.setMaximumSize(QSize(24, 24))
        self.label_72.setPixmap(QPixmap(u":/Icons/icons/dcopf.svg"))
        self.label_72.setScaledContents(True)

        self.horizontalLayout_15.addWidget(self.label_72)

        self.label_73 = QLabel(self.frame_43)
        self.label_73.setObjectName(u"label_73")
        palette7 = QPalette()
        palette7.setBrush(QPalette.Active, QPalette.WindowText, brush9)
        palette7.setBrush(QPalette.Inactive, QPalette.WindowText, brush9)
        palette7.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.label_73.setPalette(palette7)
        self.label_73.setFont(font2)
        self.label_73.setAlignment(Qt.AlignBottom|Qt.AlignLeading|Qt.AlignLeft)

        self.horizontalLayout_15.addWidget(self.label_73)


        self.verticalLayout_20.addWidget(self.frame_43)

        self.line_16 = QFrame(self.frame_30)
        self.line_16.setObjectName(u"line_16")
        palette8 = QPalette()
        palette8.setBrush(QPalette.Active, QPalette.WindowText, brush8)
        palette8.setBrush(QPalette.Inactive, QPalette.WindowText, brush8)
        palette8.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.line_16.setPalette(palette8)
        self.line_16.setFrameShadow(QFrame.Plain)
        self.line_16.setLineWidth(4)
        self.line_16.setFrameShape(QFrame.HLine)

        self.verticalLayout_20.addWidget(self.line_16)

        self.frame_2 = QFrame(self.frame_30)
        self.frame_2.setObjectName(u"frame_2")
        self.frame_2.setFrameShape(QFrame.NoFrame)
        self.frame_2.setFrameShadow(QFrame.Raised)
        self.gridLayout_3 = QGridLayout(self.frame_2)
        self.gridLayout_3.setObjectName(u"gridLayout_3")
        self.lpf_solver_comboBox = QComboBox(self.frame_2)
        self.lpf_solver_comboBox.setObjectName(u"lpf_solver_comboBox")

        self.gridLayout_3.addWidget(self.lpf_solver_comboBox, 0, 1, 1, 1)

        self.opf_time_grouping_comboBox = QComboBox(self.frame_2)
        self.opf_time_grouping_comboBox.setObjectName(u"opf_time_grouping_comboBox")

        self.gridLayout_3.addWidget(self.opf_time_grouping_comboBox, 2, 1, 1, 1)

        self.opfUnitCommitmentCheckBox = QCheckBox(self.frame_2)
        self.opfUnitCommitmentCheckBox.setObjectName(u"opfUnitCommitmentCheckBox")

        self.gridLayout_3.addWidget(self.opfUnitCommitmentCheckBox, 12, 0, 1, 1)

        self.maxVoltageModuleStepLabel = QLabel(self.frame_2)
        self.maxVoltageModuleStepLabel.setObjectName(u"maxVoltageModuleStepLabel")

        self.gridLayout_3.addWidget(self.maxVoltageModuleStepLabel, 13, 0, 1, 1)

        self.opfContingencyToleranceSpinBox = QDoubleSpinBox(self.frame_2)
        self.opfContingencyToleranceSpinBox.setObjectName(u"opfContingencyToleranceSpinBox")
        self.opfContingencyToleranceSpinBox.setDecimals(4)
        self.opfContingencyToleranceSpinBox.setValue(0.050000000000000)

        self.gridLayout_3.addWidget(self.opfContingencyToleranceSpinBox, 10, 1, 1, 1)

        self.maxVoltageAngleStepSpinBox = QDoubleSpinBox(self.frame_2)
        self.maxVoltageAngleStepSpinBox.setObjectName(u"maxVoltageAngleStepSpinBox")
        self.maxVoltageAngleStepSpinBox.setDecimals(6)
        self.maxVoltageAngleStepSpinBox.setSingleStep(0.010000000000000)
        self.maxVoltageAngleStepSpinBox.setValue(0.020000000000000)

        self.gridLayout_3.addWidget(self.maxVoltageAngleStepSpinBox, 14, 1, 1, 1)

        self.label_103 = QLabel(self.frame_2)
        self.label_103.setObjectName(u"label_103")

        self.gridLayout_3.addWidget(self.label_103, 3, 0, 1, 1)

        self.maxVoltageModuleStepSpinBox = QDoubleSpinBox(self.frame_2)
        self.maxVoltageModuleStepSpinBox.setObjectName(u"maxVoltageModuleStepSpinBox")
        self.maxVoltageModuleStepSpinBox.setDecimals(6)
        self.maxVoltageModuleStepSpinBox.setSingleStep(0.010000000000000)
        self.maxVoltageModuleStepSpinBox.setValue(0.010000000000000)

        self.gridLayout_3.addWidget(self.maxVoltageModuleStepSpinBox, 13, 1, 1, 1)

        self.label_4 = QLabel(self.frame_2)
        self.label_4.setObjectName(u"label_4")

        self.gridLayout_3.addWidget(self.label_4, 2, 0, 1, 1)

        self.label_104 = QLabel(self.frame_2)
        self.label_104.setObjectName(u"label_104")

        self.gridLayout_3.addWidget(self.label_104, 10, 0, 1, 1)

        self.maxVoltageAngleStepLabel = QLabel(self.frame_2)
        self.maxVoltageAngleStepLabel.setObjectName(u"maxVoltageAngleStepLabel")

        self.gridLayout_3.addWidget(self.maxVoltageAngleStepLabel, 14, 0, 1, 1)

        self.label_42 = QLabel(self.frame_2)
        self.label_42.setObjectName(u"label_42")

        self.gridLayout_3.addWidget(self.label_42, 0, 0, 1, 1)

        self.opfZonalGroupByComboBox = QComboBox(self.frame_2)
        self.opfZonalGroupByComboBox.setObjectName(u"opfZonalGroupByComboBox")

        self.gridLayout_3.addWidget(self.opfZonalGroupByComboBox, 3, 1, 1, 1)

        self.label_10 = QLabel(self.frame_2)
        self.label_10.setObjectName(u"label_10")

        self.gridLayout_3.addWidget(self.label_10, 1, 0, 1, 1)

        self.mip_solver_comboBox = QComboBox(self.frame_2)
        self.mip_solver_comboBox.setObjectName(u"mip_solver_comboBox")

        self.gridLayout_3.addWidget(self.mip_solver_comboBox, 1, 1, 1, 1)

        self.skipOpfGenerationLimitsCheckBox = QCheckBox(self.frame_2)
        self.skipOpfGenerationLimitsCheckBox.setObjectName(u"skipOpfGenerationLimitsCheckBox")

        self.gridLayout_3.addWidget(self.skipOpfGenerationLimitsCheckBox, 8, 0, 1, 1)

        self.considerContingenciesOpfCheckBox = QCheckBox(self.frame_2)
        self.considerContingenciesOpfCheckBox.setObjectName(u"considerContingenciesOpfCheckBox")

        self.gridLayout_3.addWidget(self.considerContingenciesOpfCheckBox, 9, 0, 1, 1)

        self.opfMaximizeExcahngeCheckBox = QCheckBox(self.frame_2)
        self.opfMaximizeExcahngeCheckBox.setObjectName(u"opfMaximizeExcahngeCheckBox")

        self.gridLayout_3.addWidget(self.opfMaximizeExcahngeCheckBox, 11, 0, 1, 1)


        self.verticalLayout_20.addWidget(self.frame_2)

        self.verticalSpacer_18 = QSpacerItem(20, 365, QSizePolicy.Minimum, QSizePolicy.Expanding)

        self.verticalLayout_20.addItem(self.verticalSpacer_18)


        self.gridLayout_10.addWidget(self.frame_30, 0, 0, 1, 1)

        self.settings_tabWidget.addTab(self.tab_4, icon15, "")
        self.tab_12 = QWidget()
        self.tab_12.setObjectName(u"tab_12")
        self.horizontalLayout_36 = QHBoxLayout(self.tab_12)
        self.horizontalLayout_36.setObjectName(u"horizontalLayout_36")
        self.frame_65 = QFrame(self.tab_12)
        self.frame_65.setObjectName(u"frame_65")
        self.frame_65.setFrameShape(QFrame.NoFrame)
        self.frame_65.setFrameShadow(QFrame.Raised)
        self.gridLayout_15 = QGridLayout(self.frame_65)
        self.gridLayout_15.setObjectName(u"gridLayout_15")
        self.gridLayout_15.setContentsMargins(-1, 0, -1, -1)
        self.verticalSpacer_17 = QSpacerItem(20, 365, QSizePolicy.Minimum, QSizePolicy.Expanding)

        self.gridLayout_15.addItem(self.verticalSpacer_17, 8, 1, 1, 1)

        self.frame_67 = QFrame(self.frame_65)
        self.frame_67.setObjectName(u"frame_67")
        self.frame_67.setFrameShape(QFrame.NoFrame)
        self.frame_67.setFrameShadow(QFrame.Raised)
        self.gridLayout_24 = QGridLayout(self.frame_67)
        self.gridLayout_24.setObjectName(u"gridLayout_24")
        self.ntcOpfTolSpinBox = QSpinBox(self.frame_67)
        self.ntcOpfTolSpinBox.setObjectName(u"ntcOpfTolSpinBox")
        self.ntcOpfTolSpinBox.setMinimum(-99)
        self.ntcOpfTolSpinBox.setValue(-3)

        self.gridLayout_24.addWidget(self.ntcOpfTolSpinBox, 5, 1, 1, 1)

        self.trmSpinBox = QSpinBox(self.frame_67)
        self.trmSpinBox.setObjectName(u"trmSpinBox")
        self.trmSpinBox.setMaximum(1500)
        self.trmSpinBox.setSingleStep(10)
        self.trmSpinBox.setValue(400)
        self.trmSpinBox.setDisplayIntegerBase(10)

        self.gridLayout_24.addWidget(self.trmSpinBox, 6, 1, 1, 1)

        self.label_231 = QLabel(self.frame_67)
        self.label_231.setObjectName(u"label_231")

        self.gridLayout_24.addWidget(self.label_231, 6, 0, 1, 1)

        self.ntcFeasibilityCheckCheckBox = QCheckBox(self.frame_67)
        self.ntcFeasibilityCheckCheckBox.setObjectName(u"ntcFeasibilityCheckCheckBox")
        self.ntcFeasibilityCheckCheckBox.setChecked(False)

        self.gridLayout_24.addWidget(self.ntcFeasibilityCheckCheckBox, 4, 0, 1, 1)

        self.skipNtcGenerationLimitsCheckBox = QCheckBox(self.frame_67)
        self.skipNtcGenerationLimitsCheckBox.setObjectName(u"skipNtcGenerationLimitsCheckBox")
        self.skipNtcGenerationLimitsCheckBox.setChecked(True)

        self.gridLayout_24.addWidget(self.skipNtcGenerationLimitsCheckBox, 2, 0, 1, 2)

        self.ntcDispatchAllAreasCheckBox = QCheckBox(self.frame_67)
        self.ntcDispatchAllAreasCheckBox.setObjectName(u"ntcDispatchAllAreasCheckBox")

        self.gridLayout_24.addWidget(self.ntcDispatchAllAreasCheckBox, 3, 0, 1, 1)

        self.label_101 = QLabel(self.frame_67)
        self.label_101.setObjectName(u"label_101")

        self.gridLayout_24.addWidget(self.label_101, 5, 0, 1, 1)

        self.proportionalRedispatchRadioButton = QRadioButton(self.frame_67)
        self.proportionalRedispatchRadioButton.setObjectName(u"proportionalRedispatchRadioButton")
        self.proportionalRedispatchRadioButton.setChecked(True)

        self.gridLayout_24.addWidget(self.proportionalRedispatchRadioButton, 0, 0, 1, 2)

        self.optimalRedispatchRadioButton = QRadioButton(self.frame_67)
        self.optimalRedispatchRadioButton.setObjectName(u"optimalRedispatchRadioButton")
        self.optimalRedispatchRadioButton.setChecked(False)

        self.gridLayout_24.addWidget(self.optimalRedispatchRadioButton, 1, 0, 1, 2)


        self.gridLayout_15.addWidget(self.frame_67, 2, 0, 2, 3)

        self.frame_51 = QFrame(self.frame_65)
        self.frame_51.setObjectName(u"frame_51")
        self.frame_51.setFrameShape(QFrame.NoFrame)
        self.frame_51.setFrameShadow(QFrame.Raised)
        self.gridLayout_25 = QGridLayout(self.frame_51)
        self.gridLayout_25.setObjectName(u"gridLayout_25")
        self.ntcLoadRuleSpinBox = QSpinBox(self.frame_51)
        self.ntcLoadRuleSpinBox.setObjectName(u"ntcLoadRuleSpinBox")
        self.ntcLoadRuleSpinBox.setMaximum(100)
        self.ntcLoadRuleSpinBox.setValue(70)

        self.gridLayout_25.addWidget(self.ntcLoadRuleSpinBox, 3, 1, 1, 1)

        self.label_64 = QLabel(self.frame_51)
        self.label_64.setObjectName(u"label_64")
        font4 = QFont()
        font4.setBold(True)
        self.label_64.setFont(font4)

        self.gridLayout_25.addWidget(self.label_64, 0, 0, 1, 1)

        self.ntcSelectBasedOnExchangeSensitivityCheckBox = QCheckBox(self.frame_51)
        self.ntcSelectBasedOnExchangeSensitivityCheckBox.setObjectName(u"ntcSelectBasedOnExchangeSensitivityCheckBox")
        self.ntcSelectBasedOnExchangeSensitivityCheckBox.setChecked(True)

        self.gridLayout_25.addWidget(self.ntcSelectBasedOnExchangeSensitivityCheckBox, 1, 0, 1, 1)

        self.ntcAlphaSpinBox = QSpinBox(self.frame_51)
        self.ntcAlphaSpinBox.setObjectName(u"ntcAlphaSpinBox")
        self.ntcAlphaSpinBox.setMaximum(100)
        self.ntcAlphaSpinBox.setValue(5)

        self.gridLayout_25.addWidget(self.ntcAlphaSpinBox, 1, 1, 1, 1)

        self.ntcSelectBasedOnAcerCriteriaCheckBox = QCheckBox(self.frame_51)
        self.ntcSelectBasedOnAcerCriteriaCheckBox.setObjectName(u"ntcSelectBasedOnAcerCriteriaCheckBox")

        self.gridLayout_25.addWidget(self.ntcSelectBasedOnAcerCriteriaCheckBox, 3, 0, 1, 1)


        self.gridLayout_15.addWidget(self.frame_51, 4, 0, 1, 3)

        self.label_97 = QLabel(self.frame_65)
        self.label_97.setObjectName(u"label_97")
        self.label_97.setMinimumSize(QSize(24, 24))
        self.label_97.setMaximumSize(QSize(24, 24))
        self.label_97.setPixmap(QPixmap(u":/Icons/icons/ntc_opf.svg"))
        self.label_97.setScaledContents(True)

        self.gridLayout_15.addWidget(self.label_97, 0, 0, 1, 1)

        self.label_96 = QLabel(self.frame_65)
        self.label_96.setObjectName(u"label_96")
        palette9 = QPalette()
        palette9.setBrush(QPalette.Active, QPalette.WindowText, brush9)
        palette9.setBrush(QPalette.Inactive, QPalette.WindowText, brush9)
        palette9.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.label_96.setPalette(palette9)
        self.label_96.setFont(font2)

        self.gridLayout_15.addWidget(self.label_96, 0, 1, 1, 2)

        self.frame_4 = QFrame(self.frame_65)
        self.frame_4.setObjectName(u"frame_4")
        self.frame_4.setFrameShape(QFrame.NoFrame)
        self.frame_4.setFrameShadow(QFrame.Raised)
        self.frame_4.setLineWidth(1)
        self.gridLayout_5 = QGridLayout(self.frame_4)
        self.gridLayout_5.setObjectName(u"gridLayout_5")
        self.contingencyGenerationThresholdDoubleSpinBox = QDoubleSpinBox(self.frame_4)
        self.contingencyGenerationThresholdDoubleSpinBox.setObjectName(u"contingencyGenerationThresholdDoubleSpinBox")
        self.contingencyGenerationThresholdDoubleSpinBox.setDecimals(0)
        self.contingencyGenerationThresholdDoubleSpinBox.setMaximum(5000.000000000000000)
        self.contingencyGenerationThresholdDoubleSpinBox.setSingleStep(50.000000000000000)
        self.contingencyGenerationThresholdDoubleSpinBox.setValue(1000.000000000000000)

        self.gridLayout_5.addWidget(self.contingencyGenerationThresholdDoubleSpinBox, 4, 1, 1, 1)

        self.considerContingenciesGeneratorOpfCheckBox = QCheckBox(self.frame_4)
        self.considerContingenciesGeneratorOpfCheckBox.setObjectName(u"considerContingenciesGeneratorOpfCheckBox")
        self.considerContingenciesGeneratorOpfCheckBox.setChecked(True)

        self.gridLayout_5.addWidget(self.considerContingenciesGeneratorOpfCheckBox, 3, 0, 1, 1)

        self.contingencyPowerTripLabel = QLabel(self.frame_4)
        self.contingencyPowerTripLabel.setObjectName(u"contingencyPowerTripLabel")

        self.gridLayout_5.addWidget(self.contingencyPowerTripLabel, 4, 0, 1, 1)

        self.label_105 = QLabel(self.frame_4)
        self.label_105.setObjectName(u"label_105")
        self.label_105.setFont(font4)

        self.gridLayout_5.addWidget(self.label_105, 0, 0, 1, 1)

        self.considerContingenciesNtcOpfCheckBox = QCheckBox(self.frame_4)
        self.considerContingenciesNtcOpfCheckBox.setObjectName(u"considerContingenciesNtcOpfCheckBox")
        self.considerContingenciesNtcOpfCheckBox.setChecked(True)

        self.gridLayout_5.addWidget(self.considerContingenciesNtcOpfCheckBox, 1, 0, 1, 1)

        self.considerContingenciesHvdcOpfCheckBox = QCheckBox(self.frame_4)
        self.considerContingenciesHvdcOpfCheckBox.setObjectName(u"considerContingenciesHvdcOpfCheckBox")
        self.considerContingenciesHvdcOpfCheckBox.setChecked(True)

        self.gridLayout_5.addWidget(self.considerContingenciesHvdcOpfCheckBox, 2, 0, 1, 1)


        self.gridLayout_15.addWidget(self.frame_4, 5, 0, 2, 3)

        self.frame_68 = QFrame(self.frame_65)
        self.frame_68.setObjectName(u"frame_68")
        self.frame_68.setFrameShape(QFrame.NoFrame)
        self.frame_68.setFrameShadow(QFrame.Raised)
        self.formLayout = QFormLayout(self.frame_68)
        self.formLayout.setObjectName(u"formLayout")
        self.label_102 = QLabel(self.frame_68)
        self.label_102.setObjectName(u"label_102")
        self.label_102.setFont(font4)

        self.formLayout.setWidget(0, QFormLayout.SpanningRole, self.label_102)

        self.label_26 = QLabel(self.frame_68)
        self.label_26.setObjectName(u"label_26")

        self.formLayout.setWidget(1, QFormLayout.LabelRole, self.label_26)

        self.weightPowerShiftSpinBox = QSpinBox(self.frame_68)
        self.weightPowerShiftSpinBox.setObjectName(u"weightPowerShiftSpinBox")
        self.weightPowerShiftSpinBox.setMinimum(-99)
        self.weightPowerShiftSpinBox.setValue(5)

        self.formLayout.setWidget(1, QFormLayout.FieldRole, self.weightPowerShiftSpinBox)

        self.label_40 = QLabel(self.frame_68)
        self.label_40.setObjectName(u"label_40")

        self.formLayout.setWidget(2, QFormLayout.LabelRole, self.label_40)

        self.weightGenCostSpinBox = QSpinBox(self.frame_68)
        self.weightGenCostSpinBox.setObjectName(u"weightGenCostSpinBox")
        self.weightGenCostSpinBox.setMinimum(-99)
        self.weightGenCostSpinBox.setValue(2)

        self.formLayout.setWidget(2, QFormLayout.FieldRole, self.weightGenCostSpinBox)

        self.label_98 = QLabel(self.frame_68)
        self.label_98.setObjectName(u"label_98")

        self.formLayout.setWidget(3, QFormLayout.LabelRole, self.label_98)

        self.weightsOverloadsSpinBox = QSpinBox(self.frame_68)
        self.weightsOverloadsSpinBox.setObjectName(u"weightsOverloadsSpinBox")
        self.weightsOverloadsSpinBox.setMinimum(-99)
        self.weightsOverloadsSpinBox.setValue(3)

        self.formLayout.setWidget(3, QFormLayout.FieldRole, self.weightsOverloadsSpinBox)


        self.gridLayout_15.addWidget(self.frame_68, 2, 3, 1, 1)

        self.line_27 = QFrame(self.frame_65)
        self.line_27.setObjectName(u"line_27")
        palette10 = QPalette()
        palette10.setBrush(QPalette.Active, QPalette.WindowText, brush8)
        palette10.setBrush(QPalette.Inactive, QPalette.WindowText, brush8)
        palette10.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.line_27.setPalette(palette10)
        self.line_27.setFrameShadow(QFrame.Plain)
        self.line_27.setLineWidth(4)
        self.line_27.setFrameShape(QFrame.HLine)

        self.gridLayout_15.addWidget(self.line_27, 1, 0, 1, 4)


        self.horizontalLayout_36.addWidget(self.frame_65)

        self.frame_64 = QFrame(self.tab_12)
        self.frame_64.setObjectName(u"frame_64")
        self.frame_64.setFrameShape(QFrame.NoFrame)
        self.frame_64.setFrameShadow(QFrame.Raised)
        self.gridLayout_13 = QGridLayout(self.frame_64)
        self.gridLayout_13.setObjectName(u"gridLayout_13")
        self.gridLayout_13.setContentsMargins(0, 0, -1, -1)
        self.line_23 = QFrame(self.frame_64)
        self.line_23.setObjectName(u"line_23")
        palette11 = QPalette()
        palette11.setBrush(QPalette.Active, QPalette.WindowText, brush8)
        palette11.setBrush(QPalette.Inactive, QPalette.WindowText, brush8)
        palette11.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.line_23.setPalette(palette11)
        self.line_23.setFrameShadow(QFrame.Plain)
        self.line_23.setLineWidth(4)
        self.line_23.setFrameShape(QFrame.HLine)

        self.gridLayout_13.addWidget(self.line_23, 6, 0, 1, 2)

        self.label_61 = QLabel(self.frame_64)
        self.label_61.setObjectName(u"label_61")
        palette12 = QPalette()
        palette12.setBrush(QPalette.Active, QPalette.WindowText, brush9)
        palette12.setBrush(QPalette.Inactive, QPalette.WindowText, brush9)
        palette12.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.label_61.setPalette(palette12)
        self.label_61.setFont(font2)

        self.gridLayout_13.addWidget(self.label_61, 5, 1, 1, 1)

        self.verticalSpacer_9 = QSpacerItem(20, 150, QSizePolicy.Minimum, QSizePolicy.Expanding)

        self.gridLayout_13.addItem(self.verticalSpacer_9, 10, 0, 1, 2)

        self.frame_66 = QFrame(self.frame_64)
        self.frame_66.setObjectName(u"frame_66")
        self.frame_66.setFrameShape(QFrame.NoFrame)
        self.frame_66.setFrameShadow(QFrame.Raised)
        self.gridLayout_16 = QGridLayout(self.frame_66)
        self.gridLayout_16.setObjectName(u"gridLayout_16")
        self.label_30 = QLabel(self.frame_66)
        self.label_30.setObjectName(u"label_30")

        self.gridLayout_16.addWidget(self.label_30, 3, 0, 1, 1)

        self.atcPerturbanceSpinBox = QDoubleSpinBox(self.frame_66)
        self.atcPerturbanceSpinBox.setObjectName(u"atcPerturbanceSpinBox")
        self.atcPerturbanceSpinBox.setMaximum(999999999999.000000000000000)
        self.atcPerturbanceSpinBox.setValue(100.000000000000000)

        self.gridLayout_16.addWidget(self.atcPerturbanceSpinBox, 0, 1, 1, 1)

        self.label_62 = QLabel(self.frame_66)
        self.label_62.setObjectName(u"label_62")

        self.gridLayout_16.addWidget(self.label_62, 1, 0, 1, 1)

        self.label_91 = QLabel(self.frame_66)
        self.label_91.setObjectName(u"label_91")

        self.gridLayout_16.addWidget(self.label_91, 0, 0, 1, 1)

        self.atcThresholdSpinBox = QDoubleSpinBox(self.frame_66)
        self.atcThresholdSpinBox.setObjectName(u"atcThresholdSpinBox")
        self.atcThresholdSpinBox.setDecimals(4)
        self.atcThresholdSpinBox.setMaximum(1.000000000000000)
        self.atcThresholdSpinBox.setValue(0.050000000000000)

        self.gridLayout_16.addWidget(self.atcThresholdSpinBox, 1, 1, 1, 1)

        self.label_77 = QLabel(self.frame_66)
        self.label_77.setObjectName(u"label_77")

        self.gridLayout_16.addWidget(self.label_77, 2, 0, 1, 1)

        self.transferMethodComboBox = QComboBox(self.frame_66)
        self.transferMethodComboBox.setObjectName(u"transferMethodComboBox")

        self.gridLayout_16.addWidget(self.transferMethodComboBox, 2, 1, 1, 1)

        self.n1ConsiderationCheckBox = QCheckBox(self.frame_66)
        self.n1ConsiderationCheckBox.setObjectName(u"n1ConsiderationCheckBox")
        self.n1ConsiderationCheckBox.setChecked(True)

        self.gridLayout_16.addWidget(self.n1ConsiderationCheckBox, 4, 0, 1, 1)

        self.ntcReportLoadingThresholdSpinBox = QSpinBox(self.frame_66)
        self.ntcReportLoadingThresholdSpinBox.setObjectName(u"ntcReportLoadingThresholdSpinBox")
        self.ntcReportLoadingThresholdSpinBox.setMaximum(9999)
        self.ntcReportLoadingThresholdSpinBox.setValue(98)

        self.gridLayout_16.addWidget(self.ntcReportLoadingThresholdSpinBox, 3, 1, 1, 1)


        self.gridLayout_13.addWidget(self.frame_66, 7, 0, 1, 2)

        self.label_90 = QLabel(self.frame_64)
        self.label_90.setObjectName(u"label_90")
        self.label_90.setMinimumSize(QSize(24, 24))
        self.label_90.setMaximumSize(QSize(24, 24))
        self.label_90.setPixmap(QPixmap(u":/Icons/icons/atc.svg"))
        self.label_90.setScaledContents(True)

        self.gridLayout_13.addWidget(self.label_90, 5, 0, 1, 1)


        self.horizontalLayout_36.addWidget(self.frame_64)

        self.horizontalSpacer_26 = QSpacerItem(40, 20, QSizePolicy.Expanding, QSizePolicy.Minimum)

        self.horizontalLayout_36.addItem(self.horizontalSpacer_26)

        self.settings_tabWidget.addTab(self.tab_12, icon44, "")
        self.tab_6 = QWidget()
        self.tab_6.setObjectName(u"tab_6")
        self.gridLayout_12 = QGridLayout(self.tab_6)
        self.gridLayout_12.setObjectName(u"gridLayout_12")
        self.horizontalSpacer_12 = QSpacerItem(40, 20, QSizePolicy.Expanding, QSizePolicy.Minimum)

        self.gridLayout_12.addItem(self.horizontalSpacer_12, 2, 2, 1, 1)

        self.frame_15 = QFrame(self.tab_6)
        self.frame_15.setObjectName(u"frame_15")
        self.frame_15.setMinimumSize(QSize(300, 0))
        self.frame_15.setFrameShape(QFrame.NoFrame)
        self.frame_15.setFrameShadow(QFrame.Raised)
        self.gridLayout_6 = QGridLayout(self.frame_15)
        self.gridLayout_6.setObjectName(u"gridLayout_6")
        self.gridLayout_6.setContentsMargins(-1, 0, -1, -1)
        self.max_iterations_stochastic_spinBox = QSpinBox(self.frame_15)
        self.max_iterations_stochastic_spinBox.setObjectName(u"max_iterations_stochastic_spinBox")
        self.max_iterations_stochastic_spinBox.setMinimum(10)
        self.max_iterations_stochastic_spinBox.setMaximum(99999999)
        self.max_iterations_stochastic_spinBox.setValue(1000)

        self.gridLayout_6.addWidget(self.max_iterations_stochastic_spinBox, 6, 1, 1, 1)

        self.verticalSpacer_8 = QSpacerItem(20, 40, QSizePolicy.Minimum, QSizePolicy.Expanding)

        self.gridLayout_6.addItem(self.verticalSpacer_8, 7, 0, 1, 1)

        self.stochastic_pf_method_comboBox = QComboBox(self.frame_15)
        self.stochastic_pf_method_comboBox.setObjectName(u"stochastic_pf_method_comboBox")

        self.gridLayout_6.addWidget(self.stochastic_pf_method_comboBox, 3, 1, 1, 1)

        self.tolerance_stochastic_spinBox = QSpinBox(self.frame_15)
        self.tolerance_stochastic_spinBox.setObjectName(u"tolerance_stochastic_spinBox")
        self.tolerance_stochastic_spinBox.setMinimum(1)
        self.tolerance_stochastic_spinBox.setMaximum(20)
        self.tolerance_stochastic_spinBox.setValue(4)

        self.gridLayout_6.addWidget(self.tolerance_stochastic_spinBox, 5, 1, 1, 1)

        self.frame_45 = QFrame(self.frame_15)
        self.frame_45.setObjectName(u"frame_45")
        self.frame_45.setFrameShape(QFrame.NoFrame)
        self.frame_45.setFrameShadow(QFrame.Raised)
        self.horizontalLayout_17 = QHBoxLayout(self.frame_45)
        self.horizontalLayout_17.setObjectName(u"horizontalLayout_17")
        self.horizontalLayout_17.setContentsMargins(0, 0, 0, 0)
        self.label_75 = QLabel(self.frame_45)
        self.label_75.setObjectName(u"label_75")
        self.label_75.setMinimumSize(QSize(24, 24))
        self.label_75.setMaximumSize(QSize(24, 24))
        self.label_75.setPixmap(QPixmap(u":/Icons/icons/stochastic_power_flow.svg"))
        self.label_75.setScaledContents(True)

        self.horizontalLayout_17.addWidget(self.label_75)

        self.label_47 = QLabel(self.frame_45)
        self.label_47.setObjectName(u"label_47")
        palette13 = QPalette()
        palette13.setBrush(QPalette.Active, QPalette.WindowText, brush9)
        palette13.setBrush(QPalette.Inactive, QPalette.WindowText, brush9)
        palette13.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.label_47.setPalette(palette13)
        self.label_47.setFont(font2)
        self.label_47.setAlignment(Qt.AlignBottom|Qt.AlignLeading|Qt.AlignLeft)

        self.horizontalLayout_17.addWidget(self.label_47)


        self.gridLayout_6.addWidget(self.frame_45, 0, 0, 1, 2)

        self.line_4 = QFrame(self.frame_15)
        self.line_4.setObjectName(u"line_4")
        palette14 = QPalette()
        palette14.setBrush(QPalette.Active, QPalette.WindowText, brush8)
        palette14.setBrush(QPalette.Inactive, QPalette.WindowText, brush8)
        palette14.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.line_4.setPalette(palette14)
        self.line_4.setFrameShadow(QFrame.Plain)
        self.line_4.setLineWidth(4)
        self.line_4.setFrameShape(QFrame.HLine)

        self.gridLayout_6.addWidget(self.line_4, 1, 0, 1, 2)

        self.label_13 = QLabel(self.frame_15)
        self.label_13.setObjectName(u"label_13")

        self.gridLayout_6.addWidget(self.label_13, 6, 0, 1, 1)

        self.label_55 = QLabel(self.frame_15)
        self.label_55.setObjectName(u"label_55")

        self.gridLayout_6.addWidget(self.label_55, 3, 0, 1, 1)

        self.label_12 = QLabel(self.frame_15)
        self.label_12.setObjectName(u"label_12")

        self.gridLayout_6.addWidget(self.label_12, 5, 0, 1, 1)


        self.gridLayout_12.addWidget(self.frame_15, 2, 0, 1, 1)

        self.frame_22 = QFrame(self.tab_6)
        self.frame_22.setObjectName(u"frame_22")
        self.frame_22.setFrameShape(QFrame.NoFrame)
        self.frame_22.setFrameShadow(QFrame.Raised)
        self.verticalLayout_11 = QVBoxLayout(self.frame_22)
        self.verticalLayout_11.setObjectName(u"verticalLayout_11")
        self.verticalLayout_11.setContentsMargins(-1, 0, -1, -1)
        self.frame_47 = QFrame(self.frame_22)
        self.frame_47.setObjectName(u"frame_47")
        self.frame_47.setFrameShape(QFrame.NoFrame)
        self.frame_47.setFrameShadow(QFrame.Raised)
        self.horizontalLayout_19 = QHBoxLayout(self.frame_47)
        self.horizontalLayout_19.setObjectName(u"horizontalLayout_19")
        self.horizontalLayout_19.setContentsMargins(0, 0, 0, 0)
        self.label_78 = QLabel(self.frame_47)
        self.label_78.setObjectName(u"label_78")
        self.label_78.setMinimumSize(QSize(24, 24))
        self.label_78.setMaximumSize(QSize(24, 24))
        self.label_78.setPixmap(QPixmap(u":/Icons/icons/blackout.svg"))
        self.label_78.setScaledContents(True)

        self.horizontalLayout_19.addWidget(self.label_78)

        self.label_79 = QLabel(self.frame_47)
        self.label_79.setObjectName(u"label_79")
        palette15 = QPalette()
        palette15.setBrush(QPalette.Active, QPalette.WindowText, brush9)
        palette15.setBrush(QPalette.Inactive, QPalette.WindowText, brush9)
        palette15.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.label_79.setPalette(palette15)
        self.label_79.setFont(font2)
        self.label_79.setAlignment(Qt.AlignBottom|Qt.AlignLeading|Qt.AlignLeft)

        self.horizontalLayout_19.addWidget(self.label_79)


        self.verticalLayout_11.addWidget(self.frame_47)

        self.line_10 = QFrame(self.frame_22)
        self.line_10.setObjectName(u"line_10")
        palette16 = QPalette()
        palette16.setBrush(QPalette.Active, QPalette.WindowText, brush8)
        palette16.setBrush(QPalette.Inactive, QPalette.WindowText, brush8)
        palette16.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.line_10.setPalette(palette16)
        self.line_10.setFrameShadow(QFrame.Plain)
        self.line_10.setLineWidth(4)
        self.line_10.setFrameShape(QFrame.HLine)

        self.verticalLayout_11.addWidget(self.line_10)

        self.label_28 = QLabel(self.frame_22)
        self.label_28.setObjectName(u"label_28")

        self.verticalLayout_11.addWidget(self.label_28)

        self.cascading_islands_spinBox = QSpinBox(self.frame_22)
        self.cascading_islands_spinBox.setObjectName(u"cascading_islands_spinBox")
        self.cascading_islands_spinBox.setMinimum(1)
        self.cascading_islands_spinBox.setMaximum(999999)
        self.cascading_islands_spinBox.setValue(2)

        self.verticalLayout_11.addWidget(self.cascading_islands_spinBox)

        self.verticalSpacer_6 = QSpacerItem(20, 40, QSizePolicy.Minimum, QSizePolicy.Expanding)

        self.verticalLayout_11.addItem(self.verticalSpacer_6)


        self.gridLayout_12.addWidget(self.frame_22, 2, 1, 1, 1)

        icon94 = QIcon()
        icon94.addFile(u":/Icons/icons/stochastic_power_flow.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.settings_tabWidget.addTab(self.tab_6, icon94, "")
        self.tab_9 = QWidget()
        self.tab_9.setObjectName(u"tab_9")
        self.horizontalLayout_8 = QHBoxLayout(self.tab_9)
        self.horizontalLayout_8.setObjectName(u"horizontalLayout_8")
        self.frame_32 = QFrame(self.tab_9)
        self.frame_32.setObjectName(u"frame_32")
        self.frame_32.setFrameShape(QFrame.NoFrame)
        self.frame_32.setFrameShadow(QFrame.Raised)
        self.gridLayout_14 = QGridLayout(self.frame_32)
        self.gridLayout_14.setObjectName(u"gridLayout_14")
        self.gridLayout_14.setContentsMargins(-1, 0, -1, -1)
        self.ptdf_correct_nonsense_values_checkBox = QCheckBox(self.frame_32)
        self.ptdf_correct_nonsense_values_checkBox.setObjectName(u"ptdf_correct_nonsense_values_checkBox")
        self.ptdf_correct_nonsense_values_checkBox.setChecked(False)

        self.gridLayout_14.addWidget(self.ptdf_correct_nonsense_values_checkBox, 3, 0, 1, 2)

        self.frame_42 = QFrame(self.frame_32)
        self.frame_42.setObjectName(u"frame_42")
        self.frame_42.setFrameShape(QFrame.NoFrame)
        self.frame_42.setFrameShadow(QFrame.Raised)
        self.horizontalLayout_14 = QHBoxLayout(self.frame_42)
        self.horizontalLayout_14.setObjectName(u"horizontalLayout_14")
        self.horizontalLayout_14.setContentsMargins(0, 0, 0, 0)
        self.label_70 = QLabel(self.frame_42)
        self.label_70.setObjectName(u"label_70")
        self.label_70.setMinimumSize(QSize(24, 24))
        self.label_70.setMaximumSize(QSize(24, 24))
        self.label_70.setPixmap(QPixmap(u":/Icons/icons/ptdf.svg"))
        self.label_70.setScaledContents(True)

        self.horizontalLayout_14.addWidget(self.label_70)

        self.label_71 = QLabel(self.frame_42)
        self.label_71.setObjectName(u"label_71")
        palette17 = QPalette()
        palette17.setBrush(QPalette.Active, QPalette.WindowText, brush9)
        palette17.setBrush(QPalette.Inactive, QPalette.WindowText, brush9)
        palette17.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.label_71.setPalette(palette17)
        self.label_71.setFont(font2)
        self.label_71.setAlignment(Qt.AlignBottom|Qt.AlignLeading|Qt.AlignLeft)

        self.horizontalLayout_14.addWidget(self.label_71)


        self.gridLayout_14.addWidget(self.frame_42, 0, 0, 1, 2)

        self.verticalSpacer_12 = QSpacerItem(20, 40, QSizePolicy.Minimum, QSizePolicy.Expanding)

        self.gridLayout_14.addItem(self.verticalSpacer_12, 7, 0, 1, 1)

        self.usePfValuesForAtcCheckBox = QCheckBox(self.frame_32)
        self.usePfValuesForAtcCheckBox.setObjectName(u"usePfValuesForAtcCheckBox")
        self.usePfValuesForAtcCheckBox.setChecked(True)

        self.gridLayout_14.addWidget(self.usePfValuesForAtcCheckBox, 4, 0, 1, 1)

        self.line_22 = QFrame(self.frame_32)
        self.line_22.setObjectName(u"line_22")
        palette18 = QPalette()
        palette18.setBrush(QPalette.Active, QPalette.WindowText, brush8)
        palette18.setBrush(QPalette.Inactive, QPalette.WindowText, brush8)
        palette18.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.line_22.setPalette(palette18)
        self.line_22.setFrameShadow(QFrame.Plain)
        self.line_22.setLineWidth(4)
        self.line_22.setFrameShape(QFrame.HLine)

        self.gridLayout_14.addWidget(self.line_22, 1, 0, 1, 2)

        self.ptdf_distributed_slack_checkBox = QCheckBox(self.frame_32)
        self.ptdf_distributed_slack_checkBox.setObjectName(u"ptdf_distributed_slack_checkBox")
        self.ptdf_distributed_slack_checkBox.setChecked(False)

        self.gridLayout_14.addWidget(self.ptdf_distributed_slack_checkBox, 2, 0, 1, 2)


        self.horizontalLayout_8.addWidget(self.frame_32)

        self.horizontalSpacer_8 = QSpacerItem(781, 20, QSizePolicy.Expanding, QSizePolicy.Minimum)

        self.horizontalLayout_8.addItem(self.horizontalSpacer_8)

        self.settings_tabWidget.addTab(self.tab_9, icon25, "")
        self.tab_11 = QWidget()
        self.tab_11.setObjectName(u"tab_11")
        self.horizontalLayout_42 = QHBoxLayout(self.tab_11)
        self.horizontalLayout_42.setObjectName(u"horizontalLayout_42")
        self.frame_76 = QFrame(self.tab_11)
        self.frame_76.setObjectName(u"frame_76")
        self.frame_76.setFrameShape(QFrame.NoFrame)
        self.frame_76.setFrameShadow(QFrame.Raised)
        self.gridLayout_28 = QGridLayout(self.frame_76)
        self.gridLayout_28.setObjectName(u"gridLayout_28")
        self.gridLayout_28.setContentsMargins(-1, 0, -1, -1)
        self.frame_78 = QFrame(self.frame_76)
        self.frame_78.setObjectName(u"frame_78")
        self.frame_78.setFrameShape(QFrame.NoFrame)
        self.frame_78.setFrameShadow(QFrame.Raised)
        self.horizontalLayout_41 = QHBoxLayout(self.frame_78)
        self.horizontalLayout_41.setObjectName(u"horizontalLayout_41")
        self.horizontalLayout_41.setContentsMargins(0, 0, 0, 0)
        self.label_109 = QLabel(self.frame_78)
        self.label_109.setObjectName(u"label_109")
        self.label_109.setMinimumSize(QSize(24, 24))
        self.label_109.setMaximumSize(QSize(24, 24))
        self.label_109.setPixmap(QPixmap(u":/Icons/icons/otdf.svg"))
        self.label_109.setScaledContents(True)

        self.horizontalLayout_41.addWidget(self.label_109)

        self.label_117 = QLabel(self.frame_78)
        self.label_117.setObjectName(u"label_117")
        palette19 = QPalette()
        palette19.setBrush(QPalette.Active, QPalette.WindowText, brush9)
        palette19.setBrush(QPalette.Inactive, QPalette.WindowText, brush9)
        palette19.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.label_117.setPalette(palette19)
        self.label_117.setFont(font2)
        self.label_117.setAlignment(Qt.AlignBottom|Qt.AlignLeading|Qt.AlignLeft)

        self.horizontalLayout_41.addWidget(self.label_117)


        self.gridLayout_28.addWidget(self.frame_78, 0, 0, 1, 2)

        self.line_25 = QFrame(self.frame_76)
        self.line_25.setObjectName(u"line_25")
        palette20 = QPalette()
        palette20.setBrush(QPalette.Active, QPalette.WindowText, brush8)
        palette20.setBrush(QPalette.Inactive, QPalette.WindowText, brush8)
        palette20.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.line_25.setPalette(palette20)
        self.line_25.setFrameShadow(QFrame.Plain)
        self.line_25.setLineWidth(4)
        self.line_25.setFrameShape(QFrame.HLine)

        self.gridLayout_28.addWidget(self.line_25, 2, 0, 1, 2)

        self.contingencyEngineComboBox = QComboBox(self.frame_76)
        self.contingencyEngineComboBox.setObjectName(u"contingencyEngineComboBox")

        self.gridLayout_28.addWidget(self.contingencyEngineComboBox, 4, 0, 1, 2)

        self.label_119 = QLabel(self.frame_76)
        self.label_119.setObjectName(u"label_119")

        self.gridLayout_28.addWidget(self.label_119, 3, 0, 1, 2)

        self.verticalSpacer_19 = QSpacerItem(20, 40, QSizePolicy.Minimum, QSizePolicy.Expanding)

        self.gridLayout_28.addItem(self.verticalSpacer_19, 7, 0, 1, 2)


        self.horizontalLayout_42.addWidget(self.frame_76)

        self.horizontalSpacer_28 = QSpacerItem(828, 20, QSizePolicy.Expanding, QSizePolicy.Minimum)

        self.horizontalLayout_42.addItem(self.horizontalSpacer_28)

        self.settings_tabWidget.addTab(self.tab_11, icon43, "")
        self.tab = QWidget()
        self.tab.setObjectName(u"tab")
        self.horizontalLayout_12 = QHBoxLayout(self.tab)
        self.horizontalLayout_12.setObjectName(u"horizontalLayout_12")
        self.frame_40 = QFrame(self.tab)
        self.frame_40.setObjectName(u"frame_40")
        self.frame_40.setFrameShape(QFrame.NoFrame)
        self.frame_40.setFrameShadow(QFrame.Raised)
        self.gridLayout_4 = QGridLayout(self.frame_40)
        self.gridLayout_4.setObjectName(u"gridLayout_4")
        self.line_26 = QFrame(self.frame_40)
        self.line_26.setObjectName(u"line_26")
        palette21 = QPalette()
        palette21.setBrush(QPalette.Active, QPalette.WindowText, brush8)
        palette21.setBrush(QPalette.Inactive, QPalette.WindowText, brush8)
        palette21.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.line_26.setPalette(palette21)
        self.line_26.setFrameShadow(QFrame.Plain)
        self.line_26.setLineWidth(4)
        self.line_26.setFrameShape(QFrame.HLine)

        self.gridLayout_4.addWidget(self.line_26, 1, 0, 1, 2)

        self.label_95 = QLabel(self.frame_40)
        self.label_95.setObjectName(u"label_95")
        palette22 = QPalette()
        palette22.setBrush(QPalette.Active, QPalette.WindowText, brush9)
        palette22.setBrush(QPalette.Inactive, QPalette.WindowText, brush9)
        palette22.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.label_95.setPalette(palette22)
        self.label_95.setFont(font2)

        self.gridLayout_4.addWidget(self.label_95, 0, 1, 1, 1)

        self.label_92 = QLabel(self.frame_40)
        self.label_92.setObjectName(u"label_92")
        self.label_92.setMinimumSize(QSize(24, 24))
        self.label_92.setMaximumSize(QSize(24, 24))
        self.label_92.setPixmap(QPixmap(u":/Icons/icons/area_transfer.svg"))
        self.label_92.setScaledContents(True)

        self.gridLayout_4.addWidget(self.label_92, 0, 0, 1, 1)

        self.splitter_2 = QSplitter(self.frame_40)
        self.splitter_2.setObjectName(u"splitter_2")
        self.splitter_2.setOrientation(Qt.Horizontal)
        self.frame_34 = QFrame(self.splitter_2)
        self.frame_34.setObjectName(u"frame_34")
        self.frame_34.setFrameShape(QFrame.NoFrame)
        self.frame_34.setFrameShadow(QFrame.Raised)
        self.verticalLayout_29 = QVBoxLayout(self.frame_34)
        self.verticalLayout_29.setObjectName(u"verticalLayout_29")
        self.label_41 = QLabel(self.frame_34)
        self.label_41.setObjectName(u"label_41")

        self.verticalLayout_29.addWidget(self.label_41)

        self.areaFromListView = QListView(self.frame_34)
        self.areaFromListView.setObjectName(u"areaFromListView")

        self.verticalLayout_29.addWidget(self.areaFromListView)

        self.splitter_2.addWidget(self.frame_34)
        self.frame_35 = QFrame(self.splitter_2)
        self.frame_35.setObjectName(u"frame_35")
        self.frame_35.setFrameShape(QFrame.NoFrame)
        self.frame_35.setFrameShadow(QFrame.Raised)
        self.verticalLayout_19 = QVBoxLayout(self.frame_35)
        self.verticalLayout_19.setObjectName(u"verticalLayout_19")
        self.label_21 = QLabel(self.frame_35)
        self.label_21.setObjectName(u"label_21")

        self.verticalLayout_19.addWidget(self.label_21)

        self.areaToListView = QListView(self.frame_35)
        self.areaToListView.setObjectName(u"areaToListView")

        self.verticalLayout_19.addWidget(self.areaToListView)

        self.splitter_2.addWidget(self.frame_35)

        self.gridLayout_4.addWidget(self.splitter_2, 2, 0, 1, 2)


        self.horizontalLayout_12.addWidget(self.frame_40)

        self.horizontalSpacer_11 = QSpacerItem(553, 20, QSizePolicy.Expanding, QSizePolicy.Minimum)

        self.horizontalLayout_12.addItem(self.horizontalSpacer_11)

        icon95 = QIcon()
        icon95.addFile(u":/Icons/icons/area_transfer.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.settings_tabWidget.addTab(self.tab, icon95, "")
        self.tab_2 = QWidget()
        self.tab_2.setObjectName(u"tab_2")
        self.horizontalLayout_6 = QHBoxLayout(self.tab_2)
        self.horizontalLayout_6.setObjectName(u"horizontalLayout_6")
        self.frame_18 = QFrame(self.tab_2)
        self.frame_18.setObjectName(u"frame_18")
        self.frame_18.setFrameShape(QFrame.NoFrame)
        self.frame_18.setFrameShadow(QFrame.Raised)
        self.gridLayout_21 = QGridLayout(self.frame_18)
        self.gridLayout_21.setObjectName(u"gridLayout_21")
        self.gridLayout_21.setContentsMargins(-1, 0, -1, -1)
        self.line_24 = QFrame(self.frame_18)
        self.line_24.setObjectName(u"line_24")
        palette23 = QPalette()
        palette23.setBrush(QPalette.Active, QPalette.WindowText, brush8)
        palette23.setBrush(QPalette.Inactive, QPalette.WindowText, brush8)
        palette23.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.line_24.setPalette(palette23)
        self.line_24.setFrameShadow(QFrame.Plain)
        self.line_24.setLineWidth(4)
        self.line_24.setFrameShape(QFrame.HLine)

        self.gridLayout_21.addWidget(self.line_24, 14, 0, 1, 2)

        self.label_44 = QLabel(self.frame_18)
        self.label_44.setObjectName(u"label_44")

        self.gridLayout_21.addWidget(self.label_44, 17, 0, 1, 2)

        self.label_88 = QLabel(self.frame_18)
        self.label_88.setObjectName(u"label_88")
        self.label_88.setMinimumSize(QSize(24, 24))
        self.label_88.setMaximumSize(QSize(24, 24))
        self.label_88.setPixmap(QPixmap(u":/Icons/icons/color_grid.svg"))
        self.label_88.setScaledContents(True)

        self.gridLayout_21.addWidget(self.label_88, 13, 0, 1, 1)

        self.label_33 = QLabel(self.frame_18)
        self.label_33.setObjectName(u"label_33")

        self.gridLayout_21.addWidget(self.label_33, 10, 0, 1, 2)

        self.node_distances_elements_spinBox = QSpinBox(self.frame_18)
        self.node_distances_elements_spinBox.setObjectName(u"node_distances_elements_spinBox")
        self.node_distances_elements_spinBox.setMinimum(1)
        self.node_distances_elements_spinBox.setMaximum(99999)
        self.node_distances_elements_spinBox.setValue(2)

        self.gridLayout_21.addWidget(self.node_distances_elements_spinBox, 16, 0, 1, 2)

        self.label_121 = QLabel(self.frame_18)
        self.label_121.setObjectName(u"label_121")
        palette24 = QPalette()
        palette24.setBrush(QPalette.Active, QPalette.WindowText, brush9)
        palette24.setBrush(QPalette.Inactive, QPalette.WindowText, brush9)
        palette24.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.label_121.setPalette(palette24)
        self.label_121.setFont(font2)
        self.label_121.setAlignment(Qt.AlignBottom|Qt.AlignLeading|Qt.AlignLeft)

        self.gridLayout_21.addWidget(self.label_121, 18, 1, 1, 1)

        self.line_30 = QFrame(self.frame_18)
        self.line_30.setObjectName(u"line_30")
        palette25 = QPalette()
        palette25.setBrush(QPalette.Active, QPalette.WindowText, brush8)
        palette25.setBrush(QPalette.Inactive, QPalette.WindowText, brush8)
        palette25.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.line_30.setPalette(palette25)
        self.line_30.setFrameShadow(QFrame.Plain)
        self.line_30.setLineWidth(4)
        self.line_30.setFrameShape(QFrame.HLine)

        self.gridLayout_21.addWidget(self.line_30, 19, 0, 1, 2)

        self.investment_evaluation_method_ComboBox = QComboBox(self.frame_18)
        self.investment_evaluation_method_ComboBox.setObjectName(u"investment_evaluation_method_ComboBox")

        self.gridLayout_21.addWidget(self.investment_evaluation_method_ComboBox, 21, 0, 1, 2)

        self.cluster_number_spinBox = QSpinBox(self.frame_18)
        self.cluster_number_spinBox.setObjectName(u"cluster_number_spinBox")
        self.cluster_number_spinBox.setMinimum(1)
        self.cluster_number_spinBox.setMaximum(999999)
        self.cluster_number_spinBox.setValue(200)

        self.gridLayout_21.addWidget(self.cluster_number_spinBox, 11, 0, 1, 3)

        self.label_120 = QLabel(self.frame_18)
        self.label_120.setObjectName(u"label_120")
        self.label_120.setMinimumSize(QSize(24, 24))
        self.label_120.setMaximumSize(QSize(24, 24))
        self.label_120.setPixmap(QPixmap(u":/Icons/icons/expansion_planning.svg"))
        self.label_120.setScaledContents(True)

        self.gridLayout_21.addWidget(self.label_120, 18, 0, 1, 1)

        self.verticalSpacer_16 = QSpacerItem(20, 250, QSizePolicy.Minimum, QSizePolicy.Expanding)

        self.gridLayout_21.addItem(self.verticalSpacer_16, 24, 1, 1, 1)

        self.label_7 = QLabel(self.frame_18)
        self.label_7.setObjectName(u"label_7")

        self.gridLayout_21.addWidget(self.label_7, 12, 0, 1, 2)

        self.label_94 = QLabel(self.frame_18)
        self.label_94.setObjectName(u"label_94")
        self.label_94.setMinimumSize(QSize(24, 24))
        self.label_94.setMaximumSize(QSize(24, 24))
        self.label_94.setPixmap(QPixmap(u":/Icons/icons/clustering.svg"))
        self.label_94.setScaledContents(True)

        self.gridLayout_21.addWidget(self.label_94, 8, 0, 1, 1)

        self.label_3 = QLabel(self.frame_18)
        self.label_3.setObjectName(u"label_3")

        self.gridLayout_21.addWidget(self.label_3, 20, 0, 1, 2)

        self.label_89 = QLabel(self.frame_18)
        self.label_89.setObjectName(u"label_89")
        palette26 = QPalette()
        palette26.setBrush(QPalette.Active, QPalette.WindowText, brush9)
        palette26.setBrush(QPalette.Inactive, QPalette.WindowText, brush9)
        palette26.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.label_89.setPalette(palette26)
        self.label_89.setFont(font2)
        self.label_89.setAlignment(Qt.AlignBottom|Qt.AlignLeading|Qt.AlignLeft)

        self.gridLayout_21.addWidget(self.label_89, 13, 1, 1, 1)

        self.line_29 = QFrame(self.frame_18)
        self.line_29.setObjectName(u"line_29")
        palette27 = QPalette()
        palette27.setBrush(QPalette.Active, QPalette.WindowText, brush8)
        palette27.setBrush(QPalette.Inactive, QPalette.WindowText, brush8)
        palette27.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.line_29.setPalette(palette27)
        self.line_29.setFrameShadow(QFrame.Plain)
        self.line_29.setLineWidth(4)
        self.line_29.setFrameShape(QFrame.HLine)

        self.gridLayout_21.addWidget(self.line_29, 9, 0, 1, 3)

        self.label_51 = QLabel(self.frame_18)
        self.label_51.setObjectName(u"label_51")

        self.gridLayout_21.addWidget(self.label_51, 22, 0, 1, 2)

        self.frame_59 = QFrame(self.frame_18)
        self.frame_59.setObjectName(u"frame_59")
        self.frame_59.setFrameShape(QFrame.NoFrame)
        self.frame_59.setFrameShadow(QFrame.Raised)
        self.horizontalLayout_32 = QHBoxLayout(self.frame_59)
        self.horizontalLayout_32.setObjectName(u"horizontalLayout_32")
        self.horizontalLayout_32.setContentsMargins(0, 0, 0, 0)
        self.label_93 = QLabel(self.frame_59)
        self.label_93.setObjectName(u"label_93")
        palette28 = QPalette()
        palette28.setBrush(QPalette.Active, QPalette.WindowText, brush9)
        palette28.setBrush(QPalette.Inactive, QPalette.WindowText, brush9)
        palette28.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.label_93.setPalette(palette28)
        self.label_93.setFont(font2)
        self.label_93.setAlignment(Qt.AlignBottom|Qt.AlignLeading|Qt.AlignLeft)

        self.horizontalLayout_32.addWidget(self.label_93)


        self.gridLayout_21.addWidget(self.frame_59, 8, 1, 1, 1)

        self.node_distances_sigma_doubleSpinBox = QDoubleSpinBox(self.frame_18)
        self.node_distances_sigma_doubleSpinBox.setObjectName(u"node_distances_sigma_doubleSpinBox")
        self.node_distances_sigma_doubleSpinBox.setDecimals(6)
        self.node_distances_sigma_doubleSpinBox.setSingleStep(0.010000000000000)
        self.node_distances_sigma_doubleSpinBox.setValue(0.750000000000000)

        self.gridLayout_21.addWidget(self.node_distances_sigma_doubleSpinBox, 15, 0, 1, 2)

        self.max_investments_evluation_number_spinBox = QSpinBox(self.frame_18)
        self.max_investments_evluation_number_spinBox.setObjectName(u"max_investments_evluation_number_spinBox")
        self.max_investments_evluation_number_spinBox.setMinimum(1)
        self.max_investments_evluation_number_spinBox.setMaximum(999999999)
        self.max_investments_evluation_number_spinBox.setValue(4)

        self.gridLayout_21.addWidget(self.max_investments_evluation_number_spinBox, 23, 0, 1, 2)


        self.horizontalLayout_6.addWidget(self.frame_18)

        self.horizontalSpacer_3 = QSpacerItem(935, 20, QSizePolicy.Expanding, QSizePolicy.Minimum)

        self.horizontalLayout_6.addItem(self.horizontalSpacer_3)

        icon96 = QIcon()
        icon96.addFile(u":/Icons/icons/ml.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.settings_tabWidget.addTab(self.tab_2, icon96, "")
        self.tab_13 = QWidget()
        self.tab_13.setObjectName(u"tab_13")
        self.gridLayout_17 = QGridLayout(self.tab_13)
        self.gridLayout_17.setObjectName(u"gridLayout_17")
        self.frame_39 = QFrame(self.tab_13)
        self.frame_39.setObjectName(u"frame_39")
        self.frame_39.setFrameShape(QFrame.NoFrame)
        self.frame_39.setFrameShadow(QFrame.Raised)
        self.verticalLayout_36 = QVBoxLayout(self.frame_39)
        self.verticalLayout_36.setObjectName(u"verticalLayout_36")
        self.verticalLayout_36.setContentsMargins(-1, 0, -1, -1)
        self.frame_49 = QFrame(self.frame_39)
        self.frame_49.setObjectName(u"frame_49")
        self.frame_49.setFrameShape(QFrame.NoFrame)
        self.frame_49.setFrameShadow(QFrame.Raised)
        self.horizontalLayout_21 = QHBoxLayout(self.frame_49)
        self.horizontalLayout_21.setObjectName(u"horizontalLayout_21")
        self.horizontalLayout_21.setContentsMargins(0, 0, 0, 0)
        self.label_82 = QLabel(self.frame_49)
        self.label_82.setObjectName(u"label_82")
        self.label_82.setMinimumSize(QSize(24, 24))
        self.label_82.setMaximumSize(QSize(24, 24))
        self.label_82.setPixmap(QPixmap(u":/Icons/icons/automatic_layout.svg"))
        self.label_82.setScaledContents(True)

        self.horizontalLayout_21.addWidget(self.label_82)

        self.label_83 = QLabel(self.frame_49)
        self.label_83.setObjectName(u"label_83")
        palette29 = QPalette()
        palette29.setBrush(QPalette.Active, QPalette.WindowText, brush9)
        palette29.setBrush(QPalette.Inactive, QPalette.WindowText, brush9)
        palette29.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.label_83.setPalette(palette29)
        self.label_83.setFont(font2)
        self.label_83.setAlignment(Qt.AlignBottom|Qt.AlignLeading|Qt.AlignLeft)

        self.horizontalLayout_21.addWidget(self.label_83)


        self.verticalLayout_36.addWidget(self.frame_49)

        self.line_21 = QFrame(self.frame_39)
        self.line_21.setObjectName(u"line_21")
        palette30 = QPalette()
        palette30.setBrush(QPalette.Active, QPalette.WindowText, brush8)
        palette30.setBrush(QPalette.Inactive, QPalette.WindowText, brush8)
        palette30.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.line_21.setPalette(palette30)
        self.line_21.setFrameShadow(QFrame.Plain)
        self.line_21.setLineWidth(4)
        self.line_21.setFrameShape(QFrame.HLine)

        self.verticalLayout_36.addWidget(self.line_21)

        self.label_24 = QLabel(self.frame_39)
        self.label_24.setObjectName(u"label_24")
        self.label_24.setTextFormat(Qt.PlainText)
        self.label_24.setScaledContents(True)

        self.verticalLayout_36.addWidget(self.label_24)

        self.automatic_layout_comboBox = QComboBox(self.frame_39)
        self.automatic_layout_comboBox.setObjectName(u"automatic_layout_comboBox")

        self.verticalLayout_36.addWidget(self.automatic_layout_comboBox)

        self.ask_before_appliying_layout_checkBox = QCheckBox(self.frame_39)
        self.ask_before_appliying_layout_checkBox.setObjectName(u"ask_before_appliying_layout_checkBox")
        self.ask_before_appliying_layout_checkBox.setChecked(True)
        self.ask_before_appliying_layout_checkBox.setTristate(False)

        self.verticalLayout_36.addWidget(self.ask_before_appliying_layout_checkBox)

        self.line_13 = QFrame(self.frame_39)
        self.line_13.setObjectName(u"line_13")
        palette31 = QPalette()
        palette31.setBrush(QPalette.Active, QPalette.WindowText, brush8)
        palette31.setBrush(QPalette.Inactive, QPalette.WindowText, brush8)
        palette31.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.line_13.setPalette(palette31)
        self.line_13.setFrameShadow(QFrame.Plain)
        self.line_13.setLineWidth(4)
        self.line_13.setFrameShape(QFrame.HLine)

        self.verticalLayout_36.addWidget(self.line_13)

        self.label_60 = QLabel(self.frame_39)
        self.label_60.setObjectName(u"label_60")

        self.verticalLayout_36.addWidget(self.label_60)

        self.explosion_factor_doubleSpinBox = QDoubleSpinBox(self.frame_39)
        self.explosion_factor_doubleSpinBox.setObjectName(u"explosion_factor_doubleSpinBox")
        self.explosion_factor_doubleSpinBox.setMinimum(0.000000000000000)
        self.explosion_factor_doubleSpinBox.setMaximum(999999999.000000000000000)
        self.explosion_factor_doubleSpinBox.setValue(1.500000000000000)

        self.verticalLayout_36.addWidget(self.explosion_factor_doubleSpinBox)

        self.frame_52 = QFrame(self.frame_39)
        self.frame_52.setObjectName(u"frame_52")
        self.frame_52.setFrameShape(QFrame.NoFrame)
        self.frame_52.setFrameShadow(QFrame.Raised)
        self.horizontalLayout_24 = QHBoxLayout(self.frame_52)
        self.horizontalLayout_24.setObjectName(u"horizontalLayout_24")
        self.horizontalLayout_24.setContentsMargins(0, 0, 0, 0)

        self.verticalLayout_36.addWidget(self.frame_52)

        self.verticalSpacer_13 = QSpacerItem(20, 40, QSizePolicy.Minimum, QSizePolicy.Expanding)

        self.verticalLayout_36.addItem(self.verticalSpacer_13)


        self.gridLayout_17.addWidget(self.frame_39, 0, 1, 1, 1)

        self.frame_31 = QFrame(self.tab_13)
        self.frame_31.setObjectName(u"frame_31")
        self.frame_31.setFrameShape(QFrame.NoFrame)
        self.frame_31.setFrameShadow(QFrame.Raised)
        self.verticalLayout_25 = QVBoxLayout(self.frame_31)
        self.verticalLayout_25.setObjectName(u"verticalLayout_25")
        self.verticalLayout_25.setContentsMargins(-1, 0, -1, -1)
        self.frame_50 = QFrame(self.frame_31)
        self.frame_50.setObjectName(u"frame_50")
        self.frame_50.setFrameShape(QFrame.NoFrame)
        self.frame_50.setFrameShadow(QFrame.Raised)
        self.horizontalLayout_22 = QHBoxLayout(self.frame_50)
        self.horizontalLayout_22.setObjectName(u"horizontalLayout_22")
        self.horizontalLayout_22.setContentsMargins(0, 0, 0, 0)
        self.label_84 = QLabel(self.frame_50)
        self.label_84.setObjectName(u"label_84")
        self.label_84.setMinimumSize(QSize(24, 24))
        self.label_84.setMaximumSize(QSize(24, 24))
        self.label_84.setPixmap(QPixmap(u":/Icons/icons/rate_br.svg"))
        self.label_84.setScaledContents(True)

        self.horizontalLayout_22.addWidget(self.label_84)

        self.label_85 = QLabel(self.frame_50)
        self.label_85.setObjectName(u"label_85")
        palette32 = QPalette()
        palette32.setBrush(QPalette.Active, QPalette.WindowText, brush9)
        palette32.setBrush(QPalette.Inactive, QPalette.WindowText, brush9)
        palette32.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.label_85.setPalette(palette32)
        self.label_85.setFont(font2)
        self.label_85.setAlignment(Qt.AlignBottom|Qt.AlignLeading|Qt.AlignLeft)

        self.horizontalLayout_22.addWidget(self.label_85)


        self.verticalLayout_25.addWidget(self.frame_50)

        self.line_8 = QFrame(self.frame_31)
        self.line_8.setObjectName(u"line_8")
        palette33 = QPalette()
        palette33.setBrush(QPalette.Active, QPalette.WindowText, brush8)
        palette33.setBrush(QPalette.Inactive, QPalette.WindowText, brush8)
        palette33.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.line_8.setPalette(palette33)
        self.line_8.setFrameShadow(QFrame.Plain)
        self.line_8.setLineWidth(4)
        self.line_8.setFrameShape(QFrame.HLine)

        self.verticalLayout_25.addWidget(self.line_8)

        self.frame_23 = QFrame(self.frame_31)
        self.frame_23.setObjectName(u"frame_23")
        self.frame_23.setFrameShape(QFrame.NoFrame)
        self.frame_23.setFrameShadow(QFrame.Raised)
        self.verticalLayout_15 = QVBoxLayout(self.frame_23)
        self.verticalLayout_15.setObjectName(u"verticalLayout_15")
        self.label_34 = QLabel(self.frame_23)
        self.label_34.setObjectName(u"label_34")

        self.verticalLayout_15.addWidget(self.label_34)

        self.branch_rating_doubleSpinBox = QDoubleSpinBox(self.frame_23)
        self.branch_rating_doubleSpinBox.setObjectName(u"branch_rating_doubleSpinBox")
        self.branch_rating_doubleSpinBox.setMinimum(1.000000000000000)
        self.branch_rating_doubleSpinBox.setMaximum(100.000000000000000)
        self.branch_rating_doubleSpinBox.setValue(1.200000000000000)

        self.verticalLayout_15.addWidget(self.branch_rating_doubleSpinBox)

        self.rating_override_checkBox = QCheckBox(self.frame_23)
        self.rating_override_checkBox.setObjectName(u"rating_override_checkBox")

        self.verticalLayout_15.addWidget(self.rating_override_checkBox)


        self.verticalLayout_25.addWidget(self.frame_23)

        self.verticalSpacer_15 = QSpacerItem(20, 40, QSizePolicy.Minimum, QSizePolicy.Expanding)

        self.verticalLayout_25.addItem(self.verticalSpacer_15)


        self.gridLayout_17.addWidget(self.frame_31, 0, 2, 1, 1)

        self.horizontalSpacer_18 = QSpacerItem(40, 20, QSizePolicy.Expanding, QSizePolicy.Minimum)

        self.gridLayout_17.addItem(self.horizontalSpacer_18, 0, 3, 1, 1)

        self.frame_27 = QFrame(self.tab_13)
        self.frame_27.setObjectName(u"frame_27")
        self.frame_27.setFrameShape(QFrame.NoFrame)
        self.frame_27.setFrameShadow(QFrame.Raised)
        self.verticalLayout_21 = QVBoxLayout(self.frame_27)
        self.verticalLayout_21.setObjectName(u"verticalLayout_21")
        self.verticalLayout_21.setContentsMargins(-1, 0, -1, -1)
        self.frame_48 = QFrame(self.frame_27)
        self.frame_48.setObjectName(u"frame_48")
        self.frame_48.setFrameShape(QFrame.NoFrame)
        self.frame_48.setFrameShadow(QFrame.Raised)
        self.horizontalLayout_20 = QHBoxLayout(self.frame_48)
        self.horizontalLayout_20.setObjectName(u"horizontalLayout_20")
        self.horizontalLayout_20.setContentsMargins(0, 0, 0, 0)
        self.label_80 = QLabel(self.frame_48)
        self.label_80.setObjectName(u"label_80")
        self.label_80.setMinimumSize(QSize(24, 24))
        self.label_80.setMaximumSize(QSize(24, 24))
        self.label_80.setPixmap(QPixmap(u":/Icons/icons/grid_reduction.svg"))
        self.label_80.setScaledContents(True)

        self.horizontalLayout_20.addWidget(self.label_80)

        self.label_81 = QLabel(self.frame_48)
        self.label_81.setObjectName(u"label_81")
        palette34 = QPalette()
        palette34.setBrush(QPalette.Active, QPalette.WindowText, brush9)
        palette34.setBrush(QPalette.Inactive, QPalette.WindowText, brush9)
        palette34.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.label_81.setPalette(palette34)
        self.label_81.setFont(font2)
        self.label_81.setAlignment(Qt.AlignBottom|Qt.AlignLeading|Qt.AlignLeft)

        self.horizontalLayout_20.addWidget(self.label_81)


        self.verticalLayout_21.addWidget(self.frame_48)

        self.line_20 = QFrame(self.frame_27)
        self.line_20.setObjectName(u"line_20")
        palette35 = QPalette()
        palette35.setBrush(QPalette.Active, QPalette.WindowText, brush8)
        palette35.setBrush(QPalette.Inactive, QPalette.WindowText, brush8)
        palette35.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.line_20.setPalette(palette35)
        self.line_20.setFrameShadow(QFrame.Plain)
        self.line_20.setLineWidth(4)
        self.line_20.setFrameShape(QFrame.HLine)

        self.verticalLayout_21.addWidget(self.line_20)

        self.label_59 = QLabel(self.frame_27)
        self.label_59.setObjectName(u"label_59")

        self.verticalLayout_21.addWidget(self.label_59)

        self.removeByTypeListView = QListView(self.frame_27)
        self.removeByTypeListView.setObjectName(u"removeByTypeListView")

        self.verticalLayout_21.addWidget(self.removeByTypeListView)

        self.rxThresholdCheckBox = QCheckBox(self.frame_27)
        self.rxThresholdCheckBox.setObjectName(u"rxThresholdCheckBox")
        self.rxThresholdCheckBox.setChecked(True)

        self.verticalLayout_21.addWidget(self.rxThresholdCheckBox)

        self.rxThresholdSpinBox = QSpinBox(self.frame_27)
        self.rxThresholdSpinBox.setObjectName(u"rxThresholdSpinBox")
        self.rxThresholdSpinBox.setValue(5)

        self.verticalLayout_21.addWidget(self.rxThresholdSpinBox)

        self.verticalSpacer_11 = QSpacerItem(20, 40, QSizePolicy.Minimum, QSizePolicy.Expanding)

        self.verticalLayout_21.addItem(self.verticalSpacer_11)


        self.gridLayout_17.addWidget(self.frame_27, 0, 0, 1, 1)

        self.settings_tabWidget.addTab(self.tab_13, icon13, "")
        self.tab_10 = QWidget()
        self.tab_10.setObjectName(u"tab_10")
        self.horizontalLayout_18 = QHBoxLayout(self.tab_10)
        self.horizontalLayout_18.setObjectName(u"horizontalLayout_18")
        self.horizontalLayout_18.setContentsMargins(0, 0, 0, 0)
        self.frame_46 = QFrame(self.tab_10)
        self.frame_46.setObjectName(u"frame_46")
        self.frame_46.setMinimumSize(QSize(250, 0))
        self.frame_46.setFrameShape(QFrame.NoFrame)
        self.frame_46.setFrameShadow(QFrame.Raised)
        self.verticalLayout_31 = QVBoxLayout(self.frame_46)
        self.verticalLayout_31.setObjectName(u"verticalLayout_31")
        self.frame_57 = QFrame(self.frame_46)
        self.frame_57.setObjectName(u"frame_57")
        self.frame_57.setFrameShape(QFrame.NoFrame)
        self.frame_57.setFrameShadow(QFrame.Raised)
        self.horizontalLayout_31 = QHBoxLayout(self.frame_57)
        self.horizontalLayout_31.setObjectName(u"horizontalLayout_31")
        self.horizontalLayout_31.setContentsMargins(0, 0, 0, 0)
        self.label_76 = QLabel(self.frame_57)
        self.label_76.setObjectName(u"label_76")
        self.label_76.setMinimumSize(QSize(24, 24))
        self.label_76.setMaximumSize(QSize(24, 24))
        self.label_76.setPixmap(QPixmap(u":/Icons/icons/color_grid.svg"))
        self.label_76.setScaledContents(True)

        self.horizontalLayout_31.addWidget(self.label_76)

        self.label_49 = QLabel(self.frame_57)
        self.label_49.setObjectName(u"label_49")
        palette36 = QPalette()
        palette36.setBrush(QPalette.Active, QPalette.WindowText, brush9)
        palette36.setBrush(QPalette.Inactive, QPalette.WindowText, brush9)
        palette36.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.label_49.setPalette(palette36)
        self.label_49.setFont(font2)
        self.label_49.setAlignment(Qt.AlignBottom|Qt.AlignLeading|Qt.AlignLeft)

        self.horizontalLayout_31.addWidget(self.label_49)


        self.verticalLayout_31.addWidget(self.frame_57)

        self.line_9 = QFrame(self.frame_46)
        self.line_9.setObjectName(u"line_9")
        palette37 = QPalette()
        palette37.setBrush(QPalette.Active, QPalette.WindowText, brush8)
        palette37.setBrush(QPalette.Inactive, QPalette.WindowText, brush8)
        palette37.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.line_9.setPalette(palette37)
        self.line_9.setFrameShadow(QFrame.Plain)
        self.line_9.setLineWidth(4)
        self.line_9.setFrameShape(QFrame.HLine)

        self.verticalLayout_31.addWidget(self.line_9)

        self.frame_70 = QFrame(self.frame_46)
        self.frame_70.setObjectName(u"frame_70")
        self.frame_70.setFrameShape(QFrame.NoFrame)
        self.frame_70.setFrameShadow(QFrame.Raised)
        self.horizontalLayout_39 = QHBoxLayout(self.frame_70)
        self.horizontalLayout_39.setObjectName(u"horizontalLayout_39")
        self.horizontalLayout_39.setContentsMargins(0, -1, -1, -1)
        self.frame_58 = QFrame(self.frame_70)
        self.frame_58.setObjectName(u"frame_58")
        self.frame_58.setFrameShape(QFrame.NoFrame)
        self.frame_58.setFrameShadow(QFrame.Raised)
        self.gridLayout = QGridLayout(self.frame_58)
        self.gridLayout.setObjectName(u"gridLayout")
        self.gridLayout.setContentsMargins(-1, 0, -1, -1)
        self.max_branch_size_spinBox = QSpinBox(self.frame_58)
        self.max_branch_size_spinBox.setObjectName(u"max_branch_size_spinBox")
        self.max_branch_size_spinBox.setMinimum(5)
        self.max_branch_size_spinBox.setMaximum(10000)
        self.max_branch_size_spinBox.setValue(20)

        self.gridLayout.addWidget(self.max_branch_size_spinBox, 12, 1, 1, 1)

        self.label_56 = QLabel(self.frame_58)
        self.label_56.setObjectName(u"label_56")
        palette38 = QPalette()
        palette38.setBrush(QPalette.Active, QPalette.WindowText, brush9)
        palette38.setBrush(QPalette.Inactive, QPalette.WindowText, brush9)
        palette38.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.label_56.setPalette(palette38)
        font5 = QFont()
        font5.setPointSize(14)
        self.label_56.setFont(font5)
        self.label_56.setAlignment(Qt.AlignBottom|Qt.AlignLeading|Qt.AlignLeft)

        self.gridLayout.addWidget(self.label_56, 5, 0, 1, 1)

        self.dark_mode_checkBox = QCheckBox(self.frame_58)
        self.dark_mode_checkBox.setObjectName(u"dark_mode_checkBox")

        self.gridLayout.addWidget(self.dark_mode_checkBox, 15, 0, 1, 1)

        self.max_node_size_spinBox = QSpinBox(self.frame_58)
        self.max_node_size_spinBox.setObjectName(u"max_node_size_spinBox")
        self.max_node_size_spinBox.setMinimum(20)
        self.max_node_size_spinBox.setMaximum(10000)
        self.max_node_size_spinBox.setValue(40)

        self.gridLayout.addWidget(self.max_node_size_spinBox, 7, 1, 1, 1)

        self.label_112 = QLabel(self.frame_58)
        self.label_112.setObjectName(u"label_112")

        self.gridLayout.addWidget(self.label_112, 8, 0, 1, 1)

        self.label_43 = QLabel(self.frame_58)
        self.label_43.setObjectName(u"label_43")

        self.gridLayout.addWidget(self.label_43, 2, 0, 1, 1)

        self.branch_width_based_on_flow_checkBox = QCheckBox(self.frame_58)
        self.branch_width_based_on_flow_checkBox.setObjectName(u"branch_width_based_on_flow_checkBox")
        self.branch_width_based_on_flow_checkBox.setChecked(False)

        self.gridLayout.addWidget(self.branch_width_based_on_flow_checkBox, 13, 0, 1, 2)

        self.label_9 = QLabel(self.frame_58)
        self.label_9.setObjectName(u"label_9")

        self.gridLayout.addWidget(self.label_9, 7, 0, 1, 1)

        self.frame_74 = QFrame(self.frame_58)
        self.frame_74.setObjectName(u"frame_74")
        self.frame_74.setMinimumSize(QSize(0, 0))
        self.frame_74.setMaximumSize(QSize(16777215, 26))
        self.frame_74.setFrameShape(QFrame.NoFrame)
        self.frame_74.setFrameShadow(QFrame.Raised)
        self.horizontalLayout_38 = QHBoxLayout(self.frame_74)
        self.horizontalLayout_38.setObjectName(u"horizontalLayout_38")
        self.horizontalLayout_38.setContentsMargins(0, 0, 0, 0)
        self.label_110 = QLabel(self.frame_74)
        self.label_110.setObjectName(u"label_110")
        self.label_110.setMinimumSize(QSize(24, 24))
        self.label_110.setMaximumSize(QSize(24, 24))
        self.label_110.setPixmap(QPixmap(u":/Icons/icons/show_color_controls.svg"))
        self.label_110.setScaledContents(True)

        self.horizontalLayout_38.addWidget(self.label_110)

        self.label_111 = QLabel(self.frame_74)
        self.label_111.setObjectName(u"label_111")
        palette39 = QPalette()
        palette39.setBrush(QPalette.Active, QPalette.WindowText, brush9)
        palette39.setBrush(QPalette.Inactive, QPalette.WindowText, brush9)
        palette39.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.label_111.setPalette(palette39)
        self.label_111.setFont(font2)
        self.label_111.setAlignment(Qt.AlignBottom|Qt.AlignLeading|Qt.AlignLeft)

        self.horizontalLayout_38.addWidget(self.label_111)


        self.gridLayout.addWidget(self.frame_74, 0, 0, 1, 1)

        self.label_15 = QLabel(self.frame_58)
        self.label_15.setObjectName(u"label_15")

        self.gridLayout.addWidget(self.label_15, 12, 0, 1, 1)

        self.min_branch_size_spinBox = QSpinBox(self.frame_58)
        self.min_branch_size_spinBox.setObjectName(u"min_branch_size_spinBox")
        self.min_branch_size_spinBox.setMinimum(5)
        self.min_branch_size_spinBox.setMaximum(10000)

        self.gridLayout.addWidget(self.min_branch_size_spinBox, 11, 1, 1, 1)

        self.label_54 = QLabel(self.frame_58)
        self.label_54.setObjectName(u"label_54")
        palette40 = QPalette()
        palette40.setBrush(QPalette.Active, QPalette.WindowText, brush9)
        palette40.setBrush(QPalette.Inactive, QPalette.WindowText, brush9)
        palette40.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.label_54.setPalette(palette40)
        self.label_54.setFont(font5)
        self.label_54.setAlignment(Qt.AlignBottom|Qt.AlignLeading|Qt.AlignLeft)

        self.gridLayout.addWidget(self.label_54, 9, 0, 1, 1)

        self.min_node_size_spinBox = QSpinBox(self.frame_58)
        self.min_node_size_spinBox.setObjectName(u"min_node_size_spinBox")
        self.min_node_size_spinBox.setMinimum(20)
        self.min_node_size_spinBox.setMaximum(10000)

        self.gridLayout.addWidget(self.min_node_size_spinBox, 6, 1, 1, 1)

        self.label = QLabel(self.frame_58)
        self.label.setObjectName(u"label")

        self.gridLayout.addWidget(self.label, 6, 0, 1, 1)

        self.palette_comboBox = QComboBox(self.frame_58)
        self.palette_comboBox.setObjectName(u"palette_comboBox")

        self.gridLayout.addWidget(self.palette_comboBox, 3, 0, 1, 2)

        self.verticalSpacer_4 = QSpacerItem(20, 40, QSizePolicy.Minimum, QSizePolicy.Expanding)

        self.gridLayout.addItem(self.verticalSpacer_4, 14, 0, 1, 1)

        self.label_113 = QLabel(self.frame_58)
        self.label_113.setObjectName(u"label_113")

        self.gridLayout.addWidget(self.label_113, 4, 0, 1, 1)

        self.label_14 = QLabel(self.frame_58)
        self.label_14.setObjectName(u"label_14")

        self.gridLayout.addWidget(self.label_14, 11, 0, 1, 1)


        self.horizontalLayout_39.addWidget(self.frame_58)

        self.label_114 = QLabel(self.frame_70)
        self.label_114.setObjectName(u"label_114")

        self.horizontalLayout_39.addWidget(self.label_114)

        self.frame_73 = QFrame(self.frame_70)
        self.frame_73.setObjectName(u"frame_73")
        self.frame_73.setMinimumSize(QSize(250, 0))
        self.frame_73.setFrameShape(QFrame.NoFrame)
        self.frame_73.setFrameShadow(QFrame.Raised)
        self.verticalLayout_38 = QVBoxLayout(self.frame_73)
        self.verticalLayout_38.setObjectName(u"verticalLayout_38")
        self.verticalLayout_38.setContentsMargins(0, 0, -1, -1)
        self.frame_71 = QFrame(self.frame_73)
        self.frame_71.setObjectName(u"frame_71")
        self.frame_71.setMaximumSize(QSize(16777215, 26))
        self.frame_71.setFrameShape(QFrame.NoFrame)
        self.frame_71.setFrameShadow(QFrame.Raised)
        self.horizontalLayout_37 = QHBoxLayout(self.frame_71)
        self.horizontalLayout_37.setObjectName(u"horizontalLayout_37")
        self.horizontalLayout_37.setContentsMargins(0, 0, 0, 0)
        self.label_99 = QLabel(self.frame_71)
        self.label_99.setObjectName(u"label_99")
        self.label_99.setMinimumSize(QSize(24, 24))
        self.label_99.setMaximumSize(QSize(24, 24))
        self.label_99.setPixmap(QPixmap(u":/Icons/icons/show_color_controls.svg"))
        self.label_99.setScaledContents(True)

        self.horizontalLayout_37.addWidget(self.label_99)

        self.label_100 = QLabel(self.frame_71)
        self.label_100.setObjectName(u"label_100")
        palette41 = QPalette()
        palette41.setBrush(QPalette.Active, QPalette.WindowText, brush9)
        palette41.setBrush(QPalette.Inactive, QPalette.WindowText, brush9)
        palette41.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.label_100.setPalette(palette41)
        self.label_100.setFont(font2)
        self.label_100.setAlignment(Qt.AlignBottom|Qt.AlignLeading|Qt.AlignLeft)

        self.horizontalLayout_37.addWidget(self.label_100)


        self.verticalLayout_38.addWidget(self.frame_71)

        self.label_118 = QLabel(self.frame_73)
        self.label_118.setObjectName(u"label_118")

        self.verticalLayout_38.addWidget(self.label_118)

        self.tile_provider_comboBox = QComboBox(self.frame_73)
        self.tile_provider_comboBox.setObjectName(u"tile_provider_comboBox")

        self.verticalLayout_38.addWidget(self.tile_provider_comboBox)

        self.verticalSpacer_2 = QSpacerItem(20, 40, QSizePolicy.Minimum, QSizePolicy.Expanding)

        self.verticalLayout_38.addItem(self.verticalSpacer_2)


        self.horizontalLayout_39.addWidget(self.frame_73)


        self.verticalLayout_31.addWidget(self.frame_70)


        self.horizontalLayout_18.addWidget(self.frame_46)

        self.horizontalSpacer_15 = QSpacerItem(40, 20, QSizePolicy.Expanding, QSizePolicy.Minimum)

        self.horizontalLayout_18.addItem(self.horizontalSpacer_15)

        self.frame_3 = QFrame(self.tab_10)
        self.frame_3.setObjectName(u"frame_3")
        self.frame_3.setMinimumSize(QSize(250, 0))
        self.frame_3.setFrameShape(QFrame.NoFrame)
        self.frame_3.setFrameShadow(QFrame.Raised)
        self.verticalLayout_7 = QVBoxLayout(self.frame_3)
        self.verticalLayout_7.setObjectName(u"verticalLayout_7")
        self.verticalLayout_7.setContentsMargins(-1, 0, -1, -1)
        self.frame_37 = QFrame(self.frame_3)
        self.frame_37.setObjectName(u"frame_37")
        self.frame_37.setFrameShape(QFrame.NoFrame)
        self.frame_37.setFrameShadow(QFrame.Raised)
        self.horizontalLayout_11 = QHBoxLayout(self.frame_37)
        self.horizontalLayout_11.setObjectName(u"horizontalLayout_11")
        self.horizontalLayout_11.setContentsMargins(0, 0, 0, 0)
        self.label_66 = QLabel(self.frame_37)
        self.label_66.setObjectName(u"label_66")
        self.label_66.setMinimumSize(QSize(24, 24))
        self.label_66.setMaximumSize(QSize(24, 24))
        self.label_66.setPixmap(QPixmap(u":/Icons/icons/resize.svg"))
        self.label_66.setScaledContents(True)

        self.horizontalLayout_11.addWidget(self.label_66)

        self.label_45 = QLabel(self.frame_37)
        self.label_45.setObjectName(u"label_45")
        palette42 = QPalette()
        palette42.setBrush(QPalette.Active, QPalette.WindowText, brush9)
        palette42.setBrush(QPalette.Inactive, QPalette.WindowText, brush9)
        palette42.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.label_45.setPalette(palette42)
        self.label_45.setFont(font2)
        self.label_45.setAlignment(Qt.AlignBottom|Qt.AlignLeading|Qt.AlignLeft)

        self.horizontalLayout_11.addWidget(self.label_45)


        self.verticalLayout_7.addWidget(self.frame_37)

        self.line_6 = QFrame(self.frame_3)
        self.line_6.setObjectName(u"line_6")
        palette43 = QPalette()
        palette43.setBrush(QPalette.Active, QPalette.WindowText, brush8)
        palette43.setBrush(QPalette.Inactive, QPalette.WindowText, brush8)
        palette43.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.line_6.setPalette(palette43)
        self.line_6.setFrameShadow(QFrame.Plain)
        self.line_6.setLineWidth(4)
        self.line_6.setFrameShape(QFrame.HLine)

        self.verticalLayout_7.addWidget(self.line_6)

        self.frame_24 = QFrame(self.frame_3)
        self.frame_24.setObjectName(u"frame_24")
        self.frame_24.setFrameShape(QFrame.NoFrame)
        self.frame_24.setFrameShadow(QFrame.Raised)
        self.verticalLayout_16 = QVBoxLayout(self.frame_24)
        self.verticalLayout_16.setObjectName(u"verticalLayout_16")
        self.label_32 = QLabel(self.frame_24)
        self.label_32.setObjectName(u"label_32")

        self.verticalLayout_16.addWidget(self.label_32)

        self.resolution_factor_spinBox = QSpinBox(self.frame_24)
        self.resolution_factor_spinBox.setObjectName(u"resolution_factor_spinBox")
        self.resolution_factor_spinBox.setMinimum(1)
        self.resolution_factor_spinBox.setMaximum(100)
        self.resolution_factor_spinBox.setValue(10)

        self.verticalLayout_16.addWidget(self.resolution_factor_spinBox)

        self.label_38 = QLabel(self.frame_24)
        self.label_38.setObjectName(u"label_38")

        self.verticalLayout_16.addWidget(self.label_38)

        self.plt_style_comboBox = QComboBox(self.frame_24)
        self.plt_style_comboBox.setObjectName(u"plt_style_comboBox")

        self.verticalLayout_16.addWidget(self.plt_style_comboBox)


        self.verticalLayout_7.addWidget(self.frame_24)

        self.verticalSpacer = QSpacerItem(20, 40, QSizePolicy.Minimum, QSizePolicy.Expanding)

        self.verticalLayout_7.addItem(self.verticalSpacer)


        self.horizontalLayout_18.addWidget(self.frame_3)

        self.settings_tabWidget.addTab(self.tab_10, icon65, "")
        self.tab_8 = QWidget()
        self.tab_8.setObjectName(u"tab_8")
        self.horizontalLayout_40 = QHBoxLayout(self.tab_8)
        self.horizontalLayout_40.setObjectName(u"horizontalLayout_40")
        self.frame_77 = QFrame(self.tab_8)
        self.frame_77.setObjectName(u"frame_77")
        self.frame_77.setFrameShape(QFrame.NoFrame)
        self.frame_77.setFrameShadow(QFrame.Raised)
        self.verticalLayout_37 = QVBoxLayout(self.frame_77)
        self.verticalLayout_37.setObjectName(u"verticalLayout_37")
        self.label_115 = QLabel(self.frame_77)
        self.label_115.setObjectName(u"label_115")
        self.label_115.setFont(font2)

        self.verticalLayout_37.addWidget(self.label_115)

        self.line_28 = QFrame(self.frame_77)
        self.line_28.setObjectName(u"line_28")
        palette44 = QPalette()
        palette44.setBrush(QPalette.Active, QPalette.WindowText, brush8)
        palette44.setBrush(QPalette.Inactive, QPalette.WindowText, brush8)
        palette44.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.line_28.setPalette(palette44)
        self.line_28.setFrameShadow(QFrame.Plain)
        self.line_28.setLineWidth(4)
        self.line_28.setFrameShape(QFrame.HLine)

        self.verticalLayout_37.addWidget(self.line_28)

        self.label_39 = QLabel(self.frame_77)
        self.label_39.setObjectName(u"label_39")

        self.verticalLayout_37.addWidget(self.label_39)

        self.file_information_label = QLabel(self.frame_77)
        self.file_information_label.setObjectName(u"file_information_label")
        self.file_information_label.setWordWrap(True)
        self.file_information_label.setTextInteractionFlags(Qt.LinksAccessibleByMouse|Qt.TextSelectableByKeyboard|Qt.TextSelectableByMouse)

        self.verticalLayout_37.addWidget(self.file_information_label)

        self.model_version_label = QLabel(self.frame_77)
        self.model_version_label.setObjectName(u"model_version_label")

        self.verticalLayout_37.addWidget(self.model_version_label)

        self.user_name_label = QLabel(self.frame_77)
        self.user_name_label.setObjectName(u"user_name_label")

        self.verticalLayout_37.addWidget(self.user_name_label)

        self.saveResultsCheckBox = QCheckBox(self.frame_77)
        self.saveResultsCheckBox.setObjectName(u"saveResultsCheckBox")

        self.verticalLayout_37.addWidget(self.saveResultsCheckBox)

        self.verticalSpacer_20 = QSpacerItem(20, 436, QSizePolicy.Minimum, QSizePolicy.Expanding)

        self.verticalLayout_37.addItem(self.verticalSpacer_20)


        self.horizontalLayout_40.addWidget(self.frame_77)

        self.horizontalSpacer_27 = QSpacerItem(659, 20, QSizePolicy.Expanding, QSizePolicy.Minimum)

        self.horizontalLayout_40.addItem(self.horizontalSpacer_27)

        self.settings_tabWidget.addTab(self.tab_8, icon4, "")

        self.gridLayout_8.addWidget(self.settings_tabWidget, 0, 2, 1, 1)

        self.frame_7 = QFrame(self.SettingsTab)
        self.frame_7.setObjectName(u"frame_7")
        self.frame_7.setFrameShape(QFrame.NoFrame)
        self.frame_7.setFrameShadow(QFrame.Raised)
        self.verticalLayout_12 = QVBoxLayout(self.frame_7)
        self.verticalLayout_12.setObjectName(u"verticalLayout_12")
        self.frame_41 = QFrame(self.frame_7)
        self.frame_41.setObjectName(u"frame_41")
        self.frame_41.setFrameShape(QFrame.NoFrame)
        self.frame_41.setFrameShadow(QFrame.Raised)
        self.horizontalLayout_13 = QHBoxLayout(self.frame_41)
        self.horizontalLayout_13.setObjectName(u"horizontalLayout_13")
        self.horizontalLayout_13.setContentsMargins(0, 0, 0, 0)
        self.label_68 = QLabel(self.frame_41)
        self.label_68.setObjectName(u"label_68")
        self.label_68.setMinimumSize(QSize(24, 24))
        self.label_68.setMaximumSize(QSize(24, 24))
        self.label_68.setPixmap(QPixmap(u":/Icons/icons/gear.svg"))
        self.label_68.setScaledContents(True)

        self.horizontalLayout_13.addWidget(self.label_68)

        self.label_69 = QLabel(self.frame_41)
        self.label_69.setObjectName(u"label_69")
        palette45 = QPalette()
        palette45.setBrush(QPalette.Active, QPalette.WindowText, brush9)
        palette45.setBrush(QPalette.Inactive, QPalette.WindowText, brush9)
        palette45.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.label_69.setPalette(palette45)
        self.label_69.setFont(font2)
        self.label_69.setAlignment(Qt.AlignBottom|Qt.AlignLeading|Qt.AlignLeft)

        self.horizontalLayout_13.addWidget(self.label_69)


        self.verticalLayout_12.addWidget(self.frame_41)

        self.line_5 = QFrame(self.frame_7)
        self.line_5.setObjectName(u"line_5")
        palette46 = QPalette()
        palette46.setBrush(QPalette.Active, QPalette.WindowText, brush8)
        palette46.setBrush(QPalette.Inactive, QPalette.WindowText, brush8)
        palette46.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.line_5.setPalette(palette46)
        self.line_5.setFrameShadow(QFrame.Plain)
        self.line_5.setLineWidth(4)
        self.line_5.setFrameShape(QFrame.HLine)

        self.verticalLayout_12.addWidget(self.line_5)

        self.frame_25 = QFrame(self.frame_7)
        self.frame_25.setObjectName(u"frame_25")
        self.frame_25.setFrameShape(QFrame.NoFrame)
        self.frame_25.setFrameShadow(QFrame.Raised)
        self.verticalLayout_17 = QVBoxLayout(self.frame_25)
        self.verticalLayout_17.setObjectName(u"verticalLayout_17")
        self.label_57 = QLabel(self.frame_25)
        self.label_57.setObjectName(u"label_57")

        self.verticalLayout_17.addWidget(self.label_57)

        self.sbase_doubleSpinBox = QDoubleSpinBox(self.frame_25)
        self.sbase_doubleSpinBox.setObjectName(u"sbase_doubleSpinBox")
        self.sbase_doubleSpinBox.setDecimals(0)
        self.sbase_doubleSpinBox.setMinimum(1.000000000000000)
        self.sbase_doubleSpinBox.setMaximum(10000000000000000000.000000000000000)
        self.sbase_doubleSpinBox.setValue(100.000000000000000)

        self.verticalLayout_17.addWidget(self.sbase_doubleSpinBox)

        self.label_58 = QLabel(self.frame_25)
        self.label_58.setObjectName(u"label_58")

        self.verticalLayout_17.addWidget(self.label_58)

        self.fbase_doubleSpinBox = QDoubleSpinBox(self.frame_25)
        self.fbase_doubleSpinBox.setObjectName(u"fbase_doubleSpinBox")
        self.fbase_doubleSpinBox.setDecimals(0)
        self.fbase_doubleSpinBox.setMinimum(50.000000000000000)
        self.fbase_doubleSpinBox.setMaximum(60.000000000000000)
        self.fbase_doubleSpinBox.setSingleStep(10.000000000000000)

        self.verticalLayout_17.addWidget(self.fbase_doubleSpinBox)

        self.line_19 = QFrame(self.frame_25)
        self.line_19.setObjectName(u"line_19")
        palette47 = QPalette()
        palette47.setBrush(QPalette.Active, QPalette.WindowText, brush8)
        palette47.setBrush(QPalette.Inactive, QPalette.WindowText, brush8)
        palette47.setBrush(QPalette.Disabled, QPalette.WindowText, brush1)
        self.line_19.setPalette(palette47)
        self.line_19.setFrameShadow(QFrame.Plain)
        self.line_19.setLineWidth(4)
        self.line_19.setFrameShape(QFrame.HLine)

        self.verticalLayout_17.addWidget(self.line_19)

        self.label_31 = QLabel(self.frame_25)
        self.label_31.setObjectName(u"label_31")
        self.label_31.setFont(font3)

        self.verticalLayout_17.addWidget(self.label_31)

        self.engineComboBox = QComboBox(self.frame_25)
        self.engineComboBox.setObjectName(u"engineComboBox")

        self.verticalLayout_17.addWidget(self.engineComboBox)


        self.verticalLayout_12.addWidget(self.frame_25)

        self.verticalSpacer_3 = QSpacerItem(20, 363, QSizePolicy.Minimum, QSizePolicy.Expanding)

        self.verticalLayout_12.addItem(self.verticalSpacer_3)


        self.gridLayout_8.addWidget(self.frame_7, 0, 0, 1, 1)

        self.tabWidget.addTab(self.SettingsTab, icon52, "")

        self.verticalLayout.addWidget(self.tabWidget)

        self.progress_frame = QFrame(self.centralwidget)
        self.progress_frame.setObjectName(u"progress_frame")
        self.progress_frame.setFrameShape(QFrame.NoFrame)
        self.progress_frame.setFrameShadow(QFrame.Raised)
        self.gridLayout_7 = QGridLayout(self.progress_frame)
        self.gridLayout_7.setObjectName(u"gridLayout_7")
        self.cancelButton = QPushButton(self.progress_frame)
        self.cancelButton.setObjectName(u"cancelButton")
        self.cancelButton.setMinimumSize(QSize(0, 24))
        self.cancelButton.setIcon(icon48)

        self.gridLayout_7.addWidget(self.cancelButton, 1, 0, 1, 1)

        self.progressBar = QProgressBar(self.progress_frame)
        self.progressBar.setObjectName(u"progressBar")
        self.progressBar.setStyleSheet(u"QProgressBar {\n"
"	border: 1px solid rgb(186, 189, 182);\n"
"    border-radius: 5px;\n"
"	text-align: center;\n"
"}\n"
"QProgressBar::chunk{\n"
"	background-color: rgb(0, 180, 136)\n"
"}")
        self.progressBar.setValue(20)
        self.progressBar.setInvertedAppearance(False)

        self.gridLayout_7.addWidget(self.progressBar, 1, 2, 1, 1)

        self.progress_label = QLabel(self.progress_frame)
        self.progress_label.setObjectName(u"progress_label")

        self.gridLayout_7.addWidget(self.progress_label, 0, 2, 1, 1)


        self.verticalLayout.addWidget(self.progress_frame)

        mainWindow.setCentralWidget(self.centralwidget)
        self.menuBar = QMenuBar(mainWindow)
        self.menuBar.setObjectName(u"menuBar")
        self.menuBar.setGeometry(QRect(0, 0, 1379, 22))
        self.menuProject = QMenu(self.menuBar)
        self.menuProject.setObjectName(u"menuProject")
        self.menuExport = QMenu(self.menuProject)
        self.menuExport.setObjectName(u"menuExport")
        self.menuExport.setIcon(icon3)
        self.menuImport = QMenu(self.menuProject)
        self.menuImport.setObjectName(u"menuImport")
        self.menuImport.setIcon(icon1)
        self.menuAbout = QMenu(self.menuBar)
        self.menuAbout.setObjectName(u"menuAbout")
        self.menuActions = QMenu(self.menuBar)
        self.menuActions.setObjectName(u"menuActions")
        self.menuSimulations = QMenu(self.menuBar)
        self.menuSimulations.setObjectName(u"menuSimulations")
        self.menuModel = QMenu(self.menuBar)
        self.menuModel.setObjectName(u"menuModel")
        self.menuDiagrams = QMenu(self.menuBar)
        self.menuDiagrams.setObjectName(u"menuDiagrams")
        self.menuSelect_buses_by = QMenu(self.menuDiagrams)
        self.menuSelect_buses_by.setObjectName(u"menuSelect_buses_by")
        self.menuSelect_buses_by.setIcon(icon61)
        mainWindow.setMenuBar(self.menuBar)
        self.toolBar = QToolBar(mainWindow)
        self.toolBar.setObjectName(u"toolBar")
        font6 = QFont()
        font6.setPointSize(8)
        self.toolBar.setFont(font6)
        self.toolBar.setMovable(False)
        self.toolBar.setIconSize(QSize(26, 26))
        self.toolBar.setToolButtonStyle(Qt.ToolButtonIconOnly)
        self.toolBar.setFloatable(False)
        mainWindow.addToolBar(Qt.TopToolBarArea, self.toolBar)

        self.menuBar.addAction(self.menuProject.menuAction())
        self.menuBar.addAction(self.menuActions.menuAction())
        self.menuBar.addAction(self.menuDiagrams.menuAction())
        self.menuBar.addAction(self.menuModel.menuAction())
        self.menuBar.addAction(self.menuSimulations.menuAction())
        self.menuBar.addAction(self.menuAbout.menuAction())
        self.menuProject.addAction(self.actionNew_project)
        self.menuProject.addAction(self.actiongrid_Generator)
        self.menuProject.addAction(self.actionOpen_file)
        self.menuProject.addAction(self.actionSave)
        self.menuProject.addAction(self.actionSave_as)
        self.menuProject.addSeparator()
        self.menuProject.addAction(self.menuExport.menuAction())
        self.menuProject.addAction(self.menuImport.menuAction())
        self.menuExport.addAction(self.actionExport)
        self.menuExport.addAction(self.actionExport_all_the_device_s_profiles)
        self.menuExport.addAction(self.actionExport_contingencies)
        self.menuExport.addAction(self.actionExport_all_results)
        self.menuImport.addAction(self.actionAdd_circuit)
        self.menuImport.addAction(self.actionImport_bus_coordinates)
        self.menuImport.addAction(self.actionImport_contingencies)
        self.menuAbout.addAction(self.actionOnline_documentation)
        self.menuAbout.addAction(self.actionAbout)
        self.menuActions.addAction(self.actionAdd_default_catalogue)
        self.menuActions.addAction(self.actionClear_stuff_running_right_now)
        self.menuActions.addAction(self.actionReset_console)
        self.menuSimulations.addAction(self.actionPower_flow)
        self.menuSimulations.addAction(self.actionPower_Flow_Time_series)
        self.menuSimulations.addAction(self.actionInputs_analysis)
        self.menuSimulations.addAction(self.actionStorage_location_suggestion)
        self.menuSimulations.addAction(self.actionShort_Circuit)
        self.menuSimulations.addAction(self.actionVoltage_stability)
        self.menuSimulations.addAction(self.actionSigma_analysis)
        self.menuSimulations.addSeparator()
        self.menuSimulations.addAction(self.actionOPF)
        self.menuSimulations.addAction(self.actionOPF_time_series)
        self.menuSimulations.addAction(self.actionOptimal_Net_Transfer_Capacity)
        self.menuSimulations.addAction(self.actionOptimal_Net_Transfer_Capacity_Time_Series)
        self.menuSimulations.addAction(self.actionOpf_to_Power_flow)
        self.menuSimulations.addAction(self.actionSet_OPF_generation_to_profiles)
        self.menuSimulations.addSeparator()
        self.menuSimulations.addAction(self.actionClustering)
        self.menuSimulations.addAction(self.actionUse_clustering)
        self.menuSimulations.addAction(self.actionPower_flow_Stochastic)
        self.menuSimulations.addAction(self.actionInvestments_evaluation)
        self.menuSimulations.addAction(self.actionAdd_selected_as_new_investment)
        self.menuSimulations.addAction(self.actionBlackout_cascade)
        self.menuSimulations.addSeparator()
        self.menuSimulations.addAction(self.actionLinearAnalysis)
        self.menuSimulations.addAction(self.actionPTDF_time_series)
        self.menuSimulations.addAction(self.actionContingency_analysis)
        self.menuSimulations.addAction(self.actionOTDF_time_series)
        self.menuSimulations.addAction(self.actionInitialize_contingencies)
        self.menuSimulations.addAction(self.actionAdd_selected_to_contingency)
        self.menuSimulations.addAction(self.actionATC)
        self.menuSimulations.addAction(self.actionATC_Time_Series)
        self.menuModel.addAction(self.actionAuto_rate_branches)
        self.menuModel.addAction(self.actionDetect_transformers)
        self.menuModel.addAction(self.actionFind_node_groups)
        self.menuModel.addAction(self.actionGrid_Reduction)
        self.menuModel.addAction(self.actionFuse_devices)
        self.menuModel.addAction(self.actionre_index_time)
        self.menuModel.addSeparator()
        self.menuModel.addAction(self.actionLaunch_data_analysis_tool)
        self.menuModel.addAction(self.actionFix_generators_active_based_on_the_power)
        self.menuModel.addAction(self.actionFix_loads_active_based_on_the_power)
        self.menuModel.addAction(self.actionDelete_inconsistencies)
        self.menuDiagrams.addAction(self.actionAdd_general_bus_branch_diagram)
        self.menuDiagrams.addAction(self.menuSelect_buses_by.menuAction())
        self.menuDiagrams.addAction(self.actionAdd_selection_bus_branch_diagram)
        self.menuDiagrams.addAction(self.actionAdd_bus_vecinity_diagram)
        self.menuDiagrams.addAction(self.actionAdd_map)
        self.menuDiagrams.addAction(self.actionAdd_substation_diagram)
        self.menuDiagrams.addSeparator()
        self.menuDiagrams.addAction(self.actionRemove_selected_diagram)
        self.menuDiagrams.addAction(self.actionDelete_selected)
        self.menuDiagrams.addSeparator()
        self.menuDiagrams.addAction(self.actionZoom_in)
        self.menuDiagrams.addAction(self.actionZoom_out)
        self.menuDiagrams.addAction(self.actionCenter_view)
        self.menuDiagrams.addAction(self.actionBigger_nodes)
        self.menuDiagrams.addAction(self.actionSmaller_nodes)
        self.menuDiagrams.addAction(self.actionAutoatic_layout)
        self.menuDiagrams.addAction(self.actionTry_to_fix_buses_location)
        self.menuDiagrams.addAction(self.actionSet_schematic_positions_from_GPS_coordinates)
        self.menuSelect_buses_by.addAction(self.actionSetSelectedBusCountry)
        self.menuSelect_buses_by.addAction(self.actionSetSelectedBusArea)
        self.menuSelect_buses_by.addAction(self.actionSetSelectedBusZone)
        self.toolBar.addAction(self.actionNew_project)
        self.toolBar.addAction(self.actionOpen_file)
        self.toolBar.addAction(self.actionSave)
        self.toolBar.addAction(self.actionSync)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionPower_flow)
        self.toolBar.addAction(self.actionPower_Flow_Time_series)
        self.toolBar.addAction(self.actionShort_Circuit)
        self.toolBar.addAction(self.actionVoltage_stability)
        self.toolBar.addAction(self.actionSigma_analysis)
        self.toolBar.addAction(self.actionInputs_analysis)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionOPF)
        self.toolBar.addAction(self.actionOPF_time_series)
        self.toolBar.addAction(self.actionOptimal_Net_Transfer_Capacity)
        self.toolBar.addAction(self.actionOptimal_Net_Transfer_Capacity_Time_Series)
        self.toolBar.addAction(self.actionOpf_to_Power_flow)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionClustering)
        self.toolBar.addAction(self.actionUse_clustering)
        self.toolBar.addAction(self.actionPower_flow_Stochastic)
        self.toolBar.addAction(self.actionAdd_selected_as_new_investment)
        self.toolBar.addAction(self.actionInvestments_evaluation)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionLinearAnalysis)
        self.toolBar.addAction(self.actionPTDF_time_series)
        self.toolBar.addAction(self.actionAdd_selected_to_contingency)
        self.toolBar.addAction(self.actionInitialize_contingencies)
        self.toolBar.addAction(self.actionContingency_analysis)
        self.toolBar.addAction(self.actionOTDF_time_series)
        self.toolBar.addAction(self.actionATC)
        self.toolBar.addAction(self.actionATC_Time_Series)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionBigger_nodes)
        self.toolBar.addAction(self.actionSmaller_nodes)
        self.toolBar.addAction(self.actionCenter_view)
        self.toolBar.addAction(self.actionAutoatic_layout)
        self.toolBar.addAction(self.actionDelete_selected)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionLaunch_data_analysis_tool)

        self.retranslateUi(mainWindow)

        self.tabWidget.setCurrentIndex(0)
        self.tabWidget_3.setCurrentIndex(0)
        self.tabWidget_2.setCurrentIndex(0)
        self.settings_tabWidget.setCurrentIndex(0)


        QMetaObject.connectSlotsByName(mainWindow)
    # setupUi

    def retranslateUi(self, mainWindow):
        mainWindow.setWindowTitle(QCoreApplication.translate("mainWindow", u"GridCal", None))
        self.actionOpen_file.setText(QCoreApplication.translate("mainWindow", u"Open file", None))
#if QT_CONFIG(shortcut)
        self.actionOpen_file.setShortcut(QCoreApplication.translate("mainWindow", u"Ctrl+O", None))
#endif // QT_CONFIG(shortcut)
        self.actionSave.setText(QCoreApplication.translate("mainWindow", u"Save", None))
#if QT_CONFIG(shortcut)
        self.actionSave.setShortcut(QCoreApplication.translate("mainWindow", u"Ctrl+S", None))
#endif // QT_CONFIG(shortcut)
        self.actionExport.setText(QCoreApplication.translate("mainWindow", u"Schematic picture", None))
        self.actionNew_project.setText(QCoreApplication.translate("mainWindow", u"New project", None))
#if QT_CONFIG(shortcut)
        self.actionNew_project.setShortcut(QCoreApplication.translate("mainWindow", u"Ctrl+N", None))
#endif // QT_CONFIG(shortcut)
        self.actionPower_flow.setText(QCoreApplication.translate("mainWindow", u"Power Flow", None))
#if QT_CONFIG(shortcut)
        self.actionPower_flow.setShortcut(QCoreApplication.translate("mainWindow", u"F5", None))
#endif // QT_CONFIG(shortcut)
        self.actionPower_Flow_Time_series.setText(QCoreApplication.translate("mainWindow", u"Power flow time series", None))
#if QT_CONFIG(tooltip)
        self.actionPower_Flow_Time_series.setToolTip(QCoreApplication.translate("mainWindow", u"Power flow time series", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionPower_Flow_Time_series.setShortcut(QCoreApplication.translate("mainWindow", u"F6", None))
#endif // QT_CONFIG(shortcut)
        self.actionBigger_nodes.setText(QCoreApplication.translate("mainWindow", u"Expand", None))
#if QT_CONFIG(tooltip)
        self.actionBigger_nodes.setToolTip(QCoreApplication.translate("mainWindow", u"Expand distances", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionBigger_nodes.setShortcut(QCoreApplication.translate("mainWindow", u"F3", None))
#endif // QT_CONFIG(shortcut)
        self.actionSmaller_nodes.setText(QCoreApplication.translate("mainWindow", u"Shrink", None))
#if QT_CONFIG(tooltip)
        self.actionSmaller_nodes.setToolTip(QCoreApplication.translate("mainWindow", u"Shrink distances", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionSmaller_nodes.setShortcut(QCoreApplication.translate("mainWindow", u"F2", None))
#endif // QT_CONFIG(shortcut)
        self.actionPower_flow_Stochastic.setText(QCoreApplication.translate("mainWindow", u"Stochastic power flow", None))
#if QT_CONFIG(tooltip)
        self.actionPower_flow_Stochastic.setToolTip(QCoreApplication.translate("mainWindow", u"Stochastic power flow", None))
#endif // QT_CONFIG(tooltip)
        self.actionVoltage_stability.setText(QCoreApplication.translate("mainWindow", u"Continuation power flow", None))
#if QT_CONFIG(tooltip)
        self.actionVoltage_stability.setToolTip(QCoreApplication.translate("mainWindow", u"Continuation power flow", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionVoltage_stability.setShortcut(QCoreApplication.translate("mainWindow", u"F7", None))
#endif // QT_CONFIG(shortcut)
        self.actionAbout.setText(QCoreApplication.translate("mainWindow", u"About", None))
        self.actionCenter_view.setText(QCoreApplication.translate("mainWindow", u"center view", None))
#if QT_CONFIG(tooltip)
        self.actionCenter_view.setToolTip(QCoreApplication.translate("mainWindow", u"Center view", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionCenter_view.setShortcut(QCoreApplication.translate("mainWindow", u"Ctrl+E", None))
#endif // QT_CONFIG(shortcut)
        self.actionShort_Circuit.setText(QCoreApplication.translate("mainWindow", u"Short Circuit", None))
        self.actionAutoatic_layout.setText(QCoreApplication.translate("mainWindow", u"Automatic grid layout", None))
#if QT_CONFIG(tooltip)
        self.actionAutoatic_layout.setToolTip(QCoreApplication.translate("mainWindow", u"Automatic layout the of the grid", None))
#endif // QT_CONFIG(tooltip)
        self.actionBlackout_cascade.setText(QCoreApplication.translate("mainWindow", u"Blackout cascade", None))
#if QT_CONFIG(tooltip)
        self.actionBlackout_cascade.setToolTip(QCoreApplication.translate("mainWindow", u"Run a simulation or step by step blackout cascade", None))
#endif // QT_CONFIG(tooltip)
        self.actionOPF.setText(QCoreApplication.translate("mainWindow", u"Optimal power flow", None))
#if QT_CONFIG(tooltip)
        self.actionOPF.setToolTip(QCoreApplication.translate("mainWindow", u"Optimal power flow", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionOPF.setShortcut(QCoreApplication.translate("mainWindow", u"F9", None))
#endif // QT_CONFIG(shortcut)
        self.actionOPF_time_series.setText(QCoreApplication.translate("mainWindow", u"Optimal power flow time series", None))
#if QT_CONFIG(tooltip)
        self.actionOPF_time_series.setToolTip(QCoreApplication.translate("mainWindow", u"Optimal power flow time series", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionOPF_time_series.setShortcut(QCoreApplication.translate("mainWindow", u"F10", None))
#endif // QT_CONFIG(shortcut)
        self.actionDetect_transformers.setText(QCoreApplication.translate("mainWindow", u"Detect transformers", None))
#if QT_CONFIG(tooltip)
        self.actionDetect_transformers.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p>Detect transformers.</p><p>Use the nodes nominal voltage to determine which branches should be a transformer.</p><p>If a branch joins two nodes with different voltage levels, the branch should be a transformer.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.actionAuto_rate_branches.setText(QCoreApplication.translate("mainWindow", u"Auto rate branches", None))
#if QT_CONFIG(tooltip)
        self.actionAuto_rate_branches.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p>Automatic rating of the branches.</p><p>Use the branches calculated power to establish a rate, if the branch rate is unknown. A factor is available in the settings.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.actionExport_all_the_device_s_profiles.setText(QCoreApplication.translate("mainWindow", u"All the devices' profiles", None))
        self.actionGrid_Reduction.setText(QCoreApplication.translate("mainWindow", u"Grid Reduction", None))
#if QT_CONFIG(tooltip)
        self.actionGrid_Reduction.setToolTip(QCoreApplication.translate("mainWindow", u"Performs a topological grid reduction", None))
#endif // QT_CONFIG(tooltip)
        self.actionStorage_location_suggestion.setText(QCoreApplication.translate("mainWindow", u"Storage location suggestion", None))
#if QT_CONFIG(tooltip)
        self.actionStorage_location_suggestion.setToolTip(QCoreApplication.translate("mainWindow", u"Suggest places where storage devices are useful", None))
#endif // QT_CONFIG(tooltip)
        self.actionLaunch_data_analysis_tool.setText(QCoreApplication.translate("mainWindow", u"Launch data analysis tool", None))
#if QT_CONFIG(shortcut)
        self.actionLaunch_data_analysis_tool.setShortcut(QCoreApplication.translate("mainWindow", u"F8", None))
#endif // QT_CONFIG(shortcut)
        self.actionOnline_documentation.setText(QCoreApplication.translate("mainWindow", u"Online documentation", None))
#if QT_CONFIG(shortcut)
        self.actionOnline_documentation.setShortcut(QCoreApplication.translate("mainWindow", u"F1", None))
#endif // QT_CONFIG(shortcut)
        self.actionExport_all_results.setText(QCoreApplication.translate("mainWindow", u"All results", None))
#if QT_CONFIG(tooltip)
        self.actionExport_all_results.setToolTip(QCoreApplication.translate("mainWindow", u"Export all the results", None))
#endif // QT_CONFIG(tooltip)
        self.actionSave_as.setText(QCoreApplication.translate("mainWindow", u"Save as", None))
        self.actionDelete_selected.setText(QCoreApplication.translate("mainWindow", u"Delete selected objects from the db", None))
#if QT_CONFIG(tooltip)
        self.actionDelete_selected.setToolTip(QCoreApplication.translate("mainWindow", u"Delete selected objects", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionDelete_selected.setShortcut(QCoreApplication.translate("mainWindow", u"Del", None))
#endif // QT_CONFIG(shortcut)
        self.actionLinearAnalysis.setText(QCoreApplication.translate("mainWindow", u"Linear Analysis", None))
#if QT_CONFIG(tooltip)
        self.actionLinearAnalysis.setToolTip(QCoreApplication.translate("mainWindow", u"Perform linear analysis with distribution factors (PTDF, LODF)", None))
#endif // QT_CONFIG(tooltip)
        self.actionReset_console.setText(QCoreApplication.translate("mainWindow", u"Reset console", None))
        self.actionOpf_to_Power_flow.setText(QCoreApplication.translate("mainWindow", u"Set OPF results to power flow (non destructive)", None))
#if QT_CONFIG(tooltip)
        self.actionOpf_to_Power_flow.setToolTip(QCoreApplication.translate("mainWindow", u"Set the OPF resultsinto the power flow or time series simulations (non destructive)", None))
#endif // QT_CONFIG(tooltip)
        self.actionTry_to_fix_buses_location.setText(QCoreApplication.translate("mainWindow", u"Correct buses location", None))
#if QT_CONFIG(tooltip)
        self.actionTry_to_fix_buses_location.setToolTip(QCoreApplication.translate("mainWindow", u"Set selected buses location closer to their neighbours", None))
#endif // QT_CONFIG(tooltip)
        self.actionSet_OPF_generation_to_profiles.setText(QCoreApplication.translate("mainWindow", u"Copy OPF generation to profiles (destructive)", None))
#if QT_CONFIG(tooltip)
        self.actionSet_OPF_generation_to_profiles.setToolTip(QCoreApplication.translate("mainWindow", u"Destructive copy of the OPF generation results to the input profiles", None))
#endif // QT_CONFIG(tooltip)
        self.actionPTDF_time_series.setText(QCoreApplication.translate("mainWindow", u"Linear analysis time series power flow", None))
#if QT_CONFIG(tooltip)
        self.actionPTDF_time_series.setToolTip(QCoreApplication.translate("mainWindow", u"PTDF based time series power flow", None))
#endif // QT_CONFIG(tooltip)
        self.actionAdd_circuit.setText(QCoreApplication.translate("mainWindow", u"Add circuit", None))
#if QT_CONFIG(tooltip)
        self.actionAdd_circuit.setToolTip(QCoreApplication.translate("mainWindow", u"Add circuit to the current circuit", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionAdd_circuit.setShortcut(QCoreApplication.translate("mainWindow", u"Ctrl+N, Ctrl+O", None))
#endif // QT_CONFIG(shortcut)
        self.actionSync.setText(QCoreApplication.translate("mainWindow", u"Sync", None))
#if QT_CONFIG(tooltip)
        self.actionSync.setToolTip(QCoreApplication.translate("mainWindow", u"Sync with the file for colaborative editing of the grid", None))
#endif // QT_CONFIG(tooltip)
        self.actionDrawSchematic.setText(QCoreApplication.translate("mainWindow", u"Draw schematic", None))
        self.actionSigma_analysis.setText(QCoreApplication.translate("mainWindow", u"Sigma analysis", None))
#if QT_CONFIG(tooltip)
        self.actionSigma_analysis.setToolTip(QCoreApplication.translate("mainWindow", u"Perform HELM-Sigma analysis", None))
#endif // QT_CONFIG(tooltip)
        self.actionClear_stuff_running_right_now.setText(QCoreApplication.translate("mainWindow", u"Clear \"stuff running right now\"", None))
        self.actionAdd_default_catalogue.setText(QCoreApplication.translate("mainWindow", u"Add default catalogue", None))
        self.actionFind_node_groups.setText(QCoreApplication.translate("mainWindow", u"Find node groups", None))
#if QT_CONFIG(tooltip)
        self.actionFind_node_groups.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p>Finds the electrically related nodes by using their electrical distance and the DBSCAN clustering method</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.actiongrid_Generator.setText(QCoreApplication.translate("mainWindow", u"Grid Generator", None))
#if QT_CONFIG(shortcut)
        self.actiongrid_Generator.setShortcut(QCoreApplication.translate("mainWindow", u"Ctrl+G", None))
#endif // QT_CONFIG(shortcut)
        self.actionImportPlexosNodeLoad.setText(QCoreApplication.translate("mainWindow", u"Node load", None))
        self.actionImportPlexosGeneratorGeneration.setText(QCoreApplication.translate("mainWindow", u"Generator generation", None))
        self.actionOTDF_time_series.setText(QCoreApplication.translate("mainWindow", u"Contingency analysis time series", None))
#if QT_CONFIG(tooltip)
        self.actionOTDF_time_series.setToolTip(QCoreApplication.translate("mainWindow", u"Contingency analysis time series", None))
#endif // QT_CONFIG(tooltip)
        self.actionImportPlexosBranchRates.setText(QCoreApplication.translate("mainWindow", u"Branch rates", None))
        self.actionClustering_time_series.setText(QCoreApplication.translate("mainWindow", u"Clustering time series", None))
#if QT_CONFIG(tooltip)
        self.actionClustering_time_series.setToolTip(QCoreApplication.translate("mainWindow", u"Perform the time series simulation using clusters for speed / accuracy trade-off", None))
#endif // QT_CONFIG(tooltip)
        self.actionSetSelectedBusArea.setText(QCoreApplication.translate("mainWindow", u"Area", None))
        self.actionSetSelectedBusZone.setText(QCoreApplication.translate("mainWindow", u"Zone", None))
        self.actionSetSelectedBusCountry.setText(QCoreApplication.translate("mainWindow", u"Country", None))
        self.actionImport_bus_coordinates.setText(QCoreApplication.translate("mainWindow", u"Import bus coordinates", None))
        self.actionATC.setText(QCoreApplication.translate("mainWindow", u"Available Transfer Capacity", None))
#if QT_CONFIG(tooltip)
        self.actionATC.setToolTip(QCoreApplication.translate("mainWindow", u"Net Transfer Capacity", None))
#endif // QT_CONFIG(tooltip)
        self.actionATC_Time_Series.setText(QCoreApplication.translate("mainWindow", u"Available Transfer Capacity Time Series", None))
#if QT_CONFIG(tooltip)
        self.actionATC_Time_Series.setToolTip(QCoreApplication.translate("mainWindow", u"Net Transfer Capacity Time Series", None))
#endif // QT_CONFIG(tooltip)
        self.actionContingency_analysis.setText(QCoreApplication.translate("mainWindow", u"Contingency analysis", None))
        self.actionOptimal_Net_Transfer_Capacity.setText(QCoreApplication.translate("mainWindow", u"Optimal net transfer capacity", None))
#if QT_CONFIG(tooltip)
        self.actionOptimal_Net_Transfer_Capacity.setToolTip(QCoreApplication.translate("mainWindow", u"Optimal Net Transfer Capacity", None))
#endif // QT_CONFIG(tooltip)
        self.actionSet_schematic_positions_from_GPS_coordinates.setText(QCoreApplication.translate("mainWindow", u"Set schematic (x,y) from (lat,lon)", None))
        self.actionInputs_analysis.setText(QCoreApplication.translate("mainWindow", u"Inputs analysis", None))
#if QT_CONFIG(shortcut)
        self.actionInputs_analysis.setShortcut(QCoreApplication.translate("mainWindow", u"Ctrl+I", None))
#endif // QT_CONFIG(shortcut)
        self.actionATC_clustering.setText(QCoreApplication.translate("mainWindow", u"Available transfer capacity with clustering", None))
#if QT_CONFIG(tooltip)
        self.actionATC_clustering.setToolTip(QCoreApplication.translate("mainWindow", u"Perform the ATC time series study with clustering", None))
#endif // QT_CONFIG(tooltip)
        self.actionFuse_devices.setText(QCoreApplication.translate("mainWindow", u"Fuse devices", None))
#if QT_CONFIG(tooltip)
        self.actionFuse_devices.setToolTip(QCoreApplication.translate("mainWindow", u"Fuse devices into a single device of each category per node", None))
#endif // QT_CONFIG(tooltip)
        self.actionDelete_inconsistencies.setText(QCoreApplication.translate("mainWindow", u"Delete inconsistencies", None))
#if QT_CONFIG(tooltip)
        self.actionDelete_inconsistencies.setToolTip(QCoreApplication.translate("mainWindow", u"Delete inconsistencies", None))
#endif // QT_CONFIG(tooltip)
        self.actionOptimal_Net_Transfer_Capacity_Time_Series.setText(QCoreApplication.translate("mainWindow", u"Optimal NTC time series", None))
#if QT_CONFIG(tooltip)
        self.actionOptimal_Net_Transfer_Capacity_Time_Series.setToolTip(QCoreApplication.translate("mainWindow", u"Optimal net transfer capacity time series", None))
#endif // QT_CONFIG(tooltip)
        self.actionOptimal_NTC_time_series_clustering.setText(QCoreApplication.translate("mainWindow", u"Optimal NTC time series with clustering", None))
#if QT_CONFIG(tooltip)
        self.actionOptimal_NTC_time_series_clustering.setToolTip(QCoreApplication.translate("mainWindow", u"Optimal NTC time series with clustering", None))
#endif // QT_CONFIG(tooltip)
        self.actionre_index_time.setText(QCoreApplication.translate("mainWindow", u"re-index time", None))
        self.actionFix_generators_active_based_on_the_power.setText(QCoreApplication.translate("mainWindow", u"Fix generators active based on the power", None))
        self.actionFix_loads_active_based_on_the_power.setText(QCoreApplication.translate("mainWindow", u"Fix loads active based on the power", None))
#if QT_CONFIG(tooltip)
        self.actionFix_loads_active_based_on_the_power.setToolTip(QCoreApplication.translate("mainWindow", u"Fix loads active based on the power", None))
#endif // QT_CONFIG(tooltip)
        self.actionImport_contingencies.setText(QCoreApplication.translate("mainWindow", u"Contingencies", None))
        self.actionInitialize_contingencies.setText(QCoreApplication.translate("mainWindow", u"Initialize contingencies", None))
        self.actionExport_contingencies.setText(QCoreApplication.translate("mainWindow", u"Contingencies", None))
        self.actionAdd_selected_to_contingency.setText(QCoreApplication.translate("mainWindow", u"Add selected as new contingency", None))
#if QT_CONFIG(tooltip)
        self.actionAdd_selected_to_contingency.setToolTip(QCoreApplication.translate("mainWindow", u"Add schematic selection as new contingency", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionAdd_selected_to_contingency.setShortcut(QCoreApplication.translate("mainWindow", u"Ctrl+A, Ctrl+C", None))
#endif // QT_CONFIG(shortcut)
        self.actionAdd_selected_as_new_investment.setText(QCoreApplication.translate("mainWindow", u"Add selected as new investment", None))
#if QT_CONFIG(tooltip)
        self.actionAdd_selected_as_new_investment.setToolTip(QCoreApplication.translate("mainWindow", u"Add schematic selection as new investment", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionAdd_selected_as_new_investment.setShortcut(QCoreApplication.translate("mainWindow", u"Ctrl+A, Ctrl+I", None))
#endif // QT_CONFIG(shortcut)
        self.actionZoom_in.setText(QCoreApplication.translate("mainWindow", u"Zoom in", None))
#if QT_CONFIG(shortcut)
        self.actionZoom_in.setShortcut(QCoreApplication.translate("mainWindow", u"Ctrl++", None))
#endif // QT_CONFIG(shortcut)
        self.actionZoom_out.setText(QCoreApplication.translate("mainWindow", u"Zoom out", None))
#if QT_CONFIG(shortcut)
        self.actionZoom_out.setShortcut(QCoreApplication.translate("mainWindow", u"Ctrl+-", None))
#endif // QT_CONFIG(shortcut)
        self.actionClustering.setText(QCoreApplication.translate("mainWindow", u"Clustering", None))
#if QT_CONFIG(tooltip)
        self.actionClustering.setToolTip(QCoreApplication.translate("mainWindow", u"Clustering of the time series", None))
#endif // QT_CONFIG(tooltip)
        self.actionUse_clustering.setText(QCoreApplication.translate("mainWindow", u"Use clustering", None))
#if QT_CONFIG(tooltip)
        self.actionUse_clustering.setToolTip(QCoreApplication.translate("mainWindow", u"Check if you want the available clustering results to be used", None))
#endif // QT_CONFIG(tooltip)
        self.actionInvestments_evaluation.setText(QCoreApplication.translate("mainWindow", u"Investments evaluation", None))
#if QT_CONFIG(tooltip)
        self.actionInvestments_evaluation.setToolTip(QCoreApplication.translate("mainWindow", u"Run the investments evaluation", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionInvestments_evaluation.setShortcut(QCoreApplication.translate("mainWindow", u"Ctrl+I, Ctrl+E", None))
#endif // QT_CONFIG(shortcut)
        self.actionAdd_selection_bus_branch_diagram.setText(QCoreApplication.translate("mainWindow", u"Add selection bus-branch diagram", None))
        self.actionAdd_bus_vecinity_diagram.setText(QCoreApplication.translate("mainWindow", u"Add bus vecinity diagram", None))
        self.actionAdd_general_bus_branch_diagram.setText(QCoreApplication.translate("mainWindow", u"Add general bus-branch diagram", None))
        self.actionAdd_map.setText(QCoreApplication.translate("mainWindow", u"Add map view", None))
        self.actionAdd_substation_diagram.setText(QCoreApplication.translate("mainWindow", u"Add substation diagram", None))
        self.actionRemove_selected_diagram.setText(QCoreApplication.translate("mainWindow", u"Remove selected diagram", None))
#if QT_CONFIG(tooltip)
        self.diagramsListView.setToolTip(QCoreApplication.translate("mainWindow", u"List of available diagrams", None))
#endif // QT_CONFIG(tooltip)
        self.start_label.setText(QCoreApplication.translate("mainWindow", u"...", None))
#if QT_CONFIG(tooltip)
        self.profile_end_slider.setToolTip(QCoreApplication.translate("mainWindow", u"Simulation end", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.grid_name_line_edit.setToolTip(QCoreApplication.translate("mainWindow", u"Name of the grid model", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.view_next_simulation_step_pushButton.setToolTip(QCoreApplication.translate("mainWindow", u"Next", None))
#endif // QT_CONFIG(tooltip)
        self.view_next_simulation_step_pushButton.setText("")
#if QT_CONFIG(tooltip)
        self.colour_results_pushButton.setToolTip(QCoreApplication.translate("mainWindow", u"Color the grid with the selected study", None))
#endif // QT_CONFIG(tooltip)
        self.colour_results_pushButton.setText("")
#if QT_CONFIG(tooltip)
        self.simulation_results_step_slider.setToolTip(QCoreApplication.translate("mainWindow", u"Simulation step", None))
#endif // QT_CONFIG(tooltip)
        self.schematic_step_label.setText(QCoreApplication.translate("mainWindow", u"...", None))
        self.end_label.setText(QCoreApplication.translate("mainWindow", u"...", None))
#if QT_CONFIG(tooltip)
        self.available_results_to_color_comboBox.setToolTip(QCoreApplication.translate("mainWindow", u"Available results", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.view_previous_simulation_step_pushButton.setToolTip(QCoreApplication.translate("mainWindow", u"Previous", None))
#endif // QT_CONFIG(tooltip)
        self.view_previous_simulation_step_pushButton.setText("")
#if QT_CONFIG(tooltip)
        self.profile_start_slider.setToolTip(QCoreApplication.translate("mainWindow", u"Simulation start", None))
#endif // QT_CONFIG(tooltip)
        self.tabWidget_3.setTabText(self.tabWidget_3.indexOf(self.GridSectionTab), QCoreApplication.translate("mainWindow", u"Diagrams", None))
#if QT_CONFIG(tooltip)
        self.smart_search_lineEdit.setToolTip(QCoreApplication.translate("mainWindow", u"<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:'MS Shell Dlg 2'; font-size:8pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Write search criteria. i.e.:</p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">&gt;=20: Is greater or equal to 20</p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">==bus1: Is exacty equal to bus1</p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">&gt;Bus2: Is greater than Bus2</p>\n"
"<p style=\" margin-top:12px; marg"
                        "in-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">== 30: Is equal to 30</p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">*bus : Contains the word bus</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.filter_pushButton.setToolTip(QCoreApplication.translate("mainWindow", u"Smart filter", None))
#endif // QT_CONFIG(tooltip)
        self.filter_pushButton.setText("")
#if QT_CONFIG(tooltip)
        self.highlight_selection_buses_pushButton.setToolTip(QCoreApplication.translate("mainWindow", u"Highlight the buses of the selected elements", None))
#endif // QT_CONFIG(tooltip)
        self.highlight_selection_buses_pushButton.setText("")
#if QT_CONFIG(tooltip)
        self.busViewerButton.setToolTip(QCoreApplication.translate("mainWindow", u"Add bus vecinity viewer of the selected items", None))
#endif // QT_CONFIG(tooltip)
        self.busViewerButton.setText("")
#if QT_CONFIG(tooltip)
        self.copyObjectsTableButton.setToolTip(QCoreApplication.translate("mainWindow", u"Copy the displayed table to the clipboard", None))
#endif // QT_CONFIG(tooltip)
        self.copyObjectsTableButton.setText("")
#if QT_CONFIG(tooltip)
        self.setValueToColumnButton.setToolTip(QCoreApplication.translate("mainWindow", u"Set value to column", None))
#endif // QT_CONFIG(tooltip)
        self.setValueToColumnButton.setText("")
#if QT_CONFIG(tooltip)
        self.highlight_by_property_pushButton.setToolTip(QCoreApplication.translate("mainWindow", u"Highlight the schematic buses based on the values of the selected property", None))
#endif // QT_CONFIG(tooltip)
        self.highlight_by_property_pushButton.setText("")
#if QT_CONFIG(tooltip)
        self.clear_highlight_pushButton.setToolTip(QCoreApplication.translate("mainWindow", u"Clear the bus highlight", None))
#endif // QT_CONFIG(tooltip)
        self.clear_highlight_pushButton.setText("")
#if QT_CONFIG(tooltip)
        self.structure_analysis_pushButton.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p>Run the histogram analysis of the selected data structure</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.structure_analysis_pushButton.setText("")
#if QT_CONFIG(tooltip)
        self.delete_and_reduce_pushButton.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p>Delete and reduce.</p><p>Applicable to buses, it removes a bus and places its objects (loads, generators, etc.) into the next feasible bus of higher voltage.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.delete_and_reduce_pushButton.setText("")
#if QT_CONFIG(tooltip)
        self.add_object_pushButton.setToolTip(QCoreApplication.translate("mainWindow", u"Add new object", None))
#endif // QT_CONFIG(tooltip)
        self.add_object_pushButton.setText("")
#if QT_CONFIG(tooltip)
        self.delete_selected_objects_pushButton.setToolTip(QCoreApplication.translate("mainWindow", u"Delete selection", None))
#endif // QT_CONFIG(tooltip)
        self.delete_selected_objects_pushButton.setText("")
#if QT_CONFIG(tooltip)
        self.catalogue_edit_pushButton.setToolTip(QCoreApplication.translate("mainWindow", u"Edit", None))
#endif // QT_CONFIG(tooltip)
        self.catalogue_edit_pushButton.setText("")
        self.tabWidget_3.setTabText(self.tabWidget_3.indexOf(self.DataTab), QCoreApplication.translate("mainWindow", u"Objects DB", None))
#if QT_CONFIG(tooltip)
        self.new_profiles_structure_pushButton.setToolTip(QCoreApplication.translate("mainWindow", u"Create profiles", None))
#endif // QT_CONFIG(tooltip)
        self.new_profiles_structure_pushButton.setText("")
#if QT_CONFIG(tooltip)
        self.edit_profiles_pushButton.setToolTip(QCoreApplication.translate("mainWindow", u"Import profiles", None))
#endif // QT_CONFIG(tooltip)
        self.edit_profiles_pushButton.setText("")
#if QT_CONFIG(tooltip)
        self.edit_profiles_from_models_pushButton.setToolTip(QCoreApplication.translate("mainWindow", u"Import profiles from models. This is, load many individual grids and take the operational data from them", None))
#endif // QT_CONFIG(tooltip)
        self.edit_profiles_from_models_pushButton.setText("")
#if QT_CONFIG(tooltip)
        self.delete_profiles_structure_pushButton.setToolTip(QCoreApplication.translate("mainWindow", u"Delete profiles", None))
#endif // QT_CONFIG(tooltip)
        self.delete_profiles_structure_pushButton.setText("")
#if QT_CONFIG(tooltip)
        self.undo_pushButton.setToolTip(QCoreApplication.translate("mainWindow", u"Un-do action (only for the current profile)", None))
#endif // QT_CONFIG(tooltip)
        self.undo_pushButton.setText("")
#if QT_CONFIG(tooltip)
        self.redo_pushButton.setToolTip(QCoreApplication.translate("mainWindow", u"Re-do action (only for the current profile)", None))
#endif // QT_CONFIG(tooltip)
        self.redo_pushButton.setText("")
#if QT_CONFIG(tooltip)
        self.copy_profile_pushButton.setToolTip(QCoreApplication.translate("mainWindow", u"Copy displayed profile", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.copy_profile_pushButton.setStatusTip("")
#endif // QT_CONFIG(statustip)
        self.copy_profile_pushButton.setText("")
#if QT_CONFIG(tooltip)
        self.paste_profiles_pushButton.setToolTip(QCoreApplication.translate("mainWindow", u"Paste clipboard into the displayed profile", None))
#endif // QT_CONFIG(tooltip)
        self.paste_profiles_pushButton.setText("")
#if QT_CONFIG(tooltip)
        self.set_linear_combination_profile_pushButton.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p>Copy the selected profile into the profiles selected next to this button</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.set_linear_combination_profile_pushButton.setText("")
#if QT_CONFIG(tooltip)
        self.device_type_magnitude_comboBox_2.setToolTip(QCoreApplication.translate("mainWindow", u"Profile where to copy the current profile", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.set_profile_state_button.setToolTip(QCoreApplication.translate("mainWindow", u"Assign the values of the selected time step into the grid", None))
#endif // QT_CONFIG(tooltip)
        self.set_profile_state_button.setText("")
#if QT_CONFIG(tooltip)
        self.profile_time_selection_comboBox.setToolTip(QCoreApplication.translate("mainWindow", u"Time step selector", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.profile_device_type_comboBox.setToolTip(QCoreApplication.translate("mainWindow", u"Device type", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.device_type_magnitude_comboBox.setToolTip(QCoreApplication.translate("mainWindow", u"Magnitude with profile", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.plot_time_series_pushButton.setToolTip(QCoreApplication.translate("mainWindow", u"Plot the selected object's profile", None))
#endif // QT_CONFIG(tooltip)
        self.plot_time_series_pushButton.setText("")
#if QT_CONFIG(tooltip)
        self.profile_add_pushButton.setToolTip(QCoreApplication.translate("mainWindow", u"Add value to the profile", None))
#endif // QT_CONFIG(tooltip)
        self.profile_add_pushButton.setText("")
#if QT_CONFIG(tooltip)
        self.profile_subtract_pushButton.setToolTip(QCoreApplication.translate("mainWindow", u"Subtract value from the profile", None))
#endif // QT_CONFIG(tooltip)
        self.profile_subtract_pushButton.setText("")
#if QT_CONFIG(tooltip)
        self.profile_multiply_pushButton.setToolTip(QCoreApplication.translate("mainWindow", u"Multiply the profile by a value", None))
#endif // QT_CONFIG(tooltip)
        self.profile_multiply_pushButton.setText("")
#if QT_CONFIG(tooltip)
        self.profile_divide_pushButton.setToolTip(QCoreApplication.translate("mainWindow", u"Divide the profile by a value", None))
#endif // QT_CONFIG(tooltip)
        self.profile_divide_pushButton.setText("")
#if QT_CONFIG(tooltip)
        self.set_profile_value_pushButton.setToolTip(QCoreApplication.translate("mainWindow", u"Set the value to all or to the selection", None))
#endif // QT_CONFIG(tooltip)
        self.set_profile_value_pushButton.setText("")
        self.tabWidget_3.setTabText(self.tabWidget_3.indexOf(self.timeEventsTab), QCoreApplication.translate("mainWindow", u"Time series", None))
#if QT_CONFIG(tooltip)
        self.compute_simulation_data_pushButton.setToolTip(QCoreApplication.translate("mainWindow", u"Update the islands dispayed", None))
#endif // QT_CONFIG(tooltip)
        self.compute_simulation_data_pushButton.setText("")
#if QT_CONFIG(tooltip)
        self.exportSimulationDataButton.setToolTip(QCoreApplication.translate("mainWindow", u"Export simulation data", None))
#endif // QT_CONFIG(tooltip)
        self.exportSimulationDataButton.setText("")
#if QT_CONFIG(tooltip)
        self.copyArraysToNumpyButton.setToolTip(QCoreApplication.translate("mainWindow", u"Copy to data frame to clipboard in array format", None))
#endif // QT_CONFIG(tooltip)
        self.copyArraysToNumpyButton.setText("")
#if QT_CONFIG(tooltip)
        self.plotArraysButton.setToolTip(QCoreApplication.translate("mainWindow", u"Plot values", None))
#endif // QT_CONFIG(tooltip)
        self.plotArraysButton.setText("")
#if QT_CONFIG(tooltip)
        self.copyArraysButton.setToolTip(QCoreApplication.translate("mainWindow", u"Copy array to clipboard", None))
#endif // QT_CONFIG(tooltip)
        self.copyArraysButton.setText("")
        self.tabWidget_3.setTabText(self.tabWidget_3.indexOf(self.compiledArraysTab), QCoreApplication.translate("mainWindow", u"Compiled arrays", None))
#if QT_CONFIG(tooltip)
        self.comments_textEdit.setToolTip(QCoreApplication.translate("mainWindow", u"Write here some comments about the grid", None))
#endif // QT_CONFIG(tooltip)
        self.tabWidget_3.setTabText(self.tabWidget_3.indexOf(self.commentsTab), QCoreApplication.translate("mainWindow", u"Comments", None))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.GridTab), QCoreApplication.translate("mainWindow", u"Model", None))
        self.label_16.setText(QCoreApplication.translate("mainWindow", u"Session results", None))
#if QT_CONFIG(tooltip)
        self.deleteDriverButton.setToolTip(QCoreApplication.translate("mainWindow", u"Delete selected driver", None))
#endif // QT_CONFIG(tooltip)
        self.deleteDriverButton.setText("")
        self.label_37.setText(QCoreApplication.translate("mainWindow", u"Disk persistance", None))
#if QT_CONFIG(tooltip)
        self.loadResultFromDiskButton.setToolTip(QCoreApplication.translate("mainWindow", u"Load result from the gridcal file", None))
#endif // QT_CONFIG(tooltip)
        self.loadResultFromDiskButton.setText("")
#if QT_CONFIG(tooltip)
        self.copy_results_pushButton.setToolTip(QCoreApplication.translate("mainWindow", u"Copy to data frame to clipboard", None))
#endif // QT_CONFIG(tooltip)
        self.copy_results_pushButton.setText("")
#if QT_CONFIG(tooltip)
        self.copy_numpy_button.setToolTip(QCoreApplication.translate("mainWindow", u"Copy data in numpy format to clipboard", None))
#endif // QT_CONFIG(tooltip)
        self.copy_numpy_button.setText("")
#if QT_CONFIG(tooltip)
        self.saveResultsButton.setToolTip(QCoreApplication.translate("mainWindow", u"Export data", None))
#endif // QT_CONFIG(tooltip)
        self.saveResultsButton.setText("")
#if QT_CONFIG(tooltip)
        self.results_as_cdf_checkBox.setToolTip(QCoreApplication.translate("mainWindow", u"Results as cummulative density functions", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.results_as_cdf_checkBox.setStatusTip("")
#endif // QT_CONFIG(statustip)
        self.results_as_cdf_checkBox.setText("")
#if QT_CONFIG(tooltip)
        self.results_as_abs_checkBox.setToolTip(QCoreApplication.translate("mainWindow", u"Results as absolute values", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.results_as_abs_checkBox.setStatusTip("")
#endif // QT_CONFIG(statustip)
        self.results_as_abs_checkBox.setText("")
        self.units_label.setText("")
        self.search_results_Button.setText("")
#if QT_CONFIG(tooltip)
        self.plot_data_pushButton.setToolTip(QCoreApplication.translate("mainWindow", u"Plot the data in a separated window", None))
#endif // QT_CONFIG(tooltip)
        self.plot_data_pushButton.setText("")
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.ResultsTab), QCoreApplication.translate("mainWindow", u"Results", None))
        self.tabWidget_2.setTabText(self.tabWidget_2.indexOf(self.tab_7), QCoreApplication.translate("mainWindow", u"Text output", None))
        self.tabWidget_2.setTabText(self.tabWidget_2.indexOf(self.pythonConsoleTab), QCoreApplication.translate("mainWindow", u"Python console", None))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.main_console_tab), QCoreApplication.translate("mainWindow", u"Console", None))
#if QT_CONFIG(tooltip)
        self.settings_tabWidget.setToolTip(QCoreApplication.translate("mainWindow", u"Select the solver in the OPF tab and the areas in the areas tab", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.max_iterations_spinBox.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p>Maximum numberof iterations to use.</p><p><br/></p><p>Tipical values: </p><p>Newton Raphson: 5</p><p>Levenberg-Marquards: 20</p><p>Fast decoupled: 10</p><p>Others: 20</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.helm_retry_checkBox.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p>If the selected method does not converge, try a list of methods that may help</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.helm_retry_checkBox.setText(QCoreApplication.translate("mainWindow", u"Retry with other methods if failed", None))
        self.label_5.setText(QCoreApplication.translate("mainWindow", u"Precision", None))
#if QT_CONFIG(tooltip)
        self.ignore_single_node_islands_checkBox.setToolTip(QCoreApplication.translate("mainWindow", u"If active, the islands of a single node are ignored.", None))
#endif // QT_CONFIG(tooltip)
        self.ignore_single_node_islands_checkBox.setText(QCoreApplication.translate("mainWindow", u"Ignore single node islands", None))
        self.label_86.setText("")
        self.label_11.setText(QCoreApplication.translate("mainWindow", u"Acceleration", None))
#if QT_CONFIG(tooltip)
        self.tolerance_spinBox.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p>Exponent of the precission to use.</p><p>precision = 1x10^-factor</p><p>i.e.</p><p>factor=3</p><p>precision = 1e-3</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.tolerance_spinBox.setPrefix(QCoreApplication.translate("mainWindow", u"1e-", None))
#if QT_CONFIG(tooltip)
        self.verbositySpinBox.setToolTip(QCoreApplication.translate("mainWindow", u"Level of console information. 0: None, 1: some information, 2: all the information", None))
#endif // QT_CONFIG(tooltip)
        self.use_voltage_guess_checkBox.setText(QCoreApplication.translate("mainWindow", u"Use voltage guess", None))
#if QT_CONFIG(tooltip)
        self.muSpinBox.setToolTip(QCoreApplication.translate("mainWindow", u"Factor by which multiply each jacobian result. In practice this is used to slow down troublesome solutions.", None))
#endif // QT_CONFIG(tooltip)
        self.label_6.setText(QCoreApplication.translate("mainWindow", u"Max. iterations", None))
        self.label_22.setText("")
#if QT_CONFIG(tooltip)
        self.distributed_slack_checkBox.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p>If active, the slack power is distributed among the generators according to their installed power &quot;Snom&quot;</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.distributed_slack_checkBox.setText(QCoreApplication.translate("mainWindow", u"Distributed slack", None))
        self.label_2.setText(QCoreApplication.translate("mainWindow", u"Solver", None))
#if QT_CONFIG(tooltip)
        self.auto_precision_checkBox.setToolTip(QCoreApplication.translate("mainWindow", u"If active, GridCal finds a precission that suits the magnitude of the power injections so that the power flow is meaningful", None))
#endif // QT_CONFIG(tooltip)
        self.auto_precision_checkBox.setText(QCoreApplication.translate("mainWindow", u"Automatic precision", None))
        self.label_23.setText(QCoreApplication.translate("mainWindow", u"Verbosity", None))
        self.label_87.setText("")
        self.label_48.setText(QCoreApplication.translate("mainWindow", u"Reactive power control mode", None))
        self.label_641.setText("")
        self.label_50.setText(QCoreApplication.translate("mainWindow", u"Transformer taps control mode", None))
        self.label_65.setText("")
#if QT_CONFIG(tooltip)
        self.temperature_correction_checkBox.setToolTip(QCoreApplication.translate("mainWindow", u"Correct the branches resistance using the temperature", None))
#endif // QT_CONFIG(tooltip)
        self.temperature_correction_checkBox.setText(QCoreApplication.translate("mainWindow", u"Apply temperature correction", None))
        self.apply_impedance_tolerances_checkBox.setText(QCoreApplication.translate("mainWindow", u"Apply impedance tolerances", None))
        self.override_branch_controls_checkBox.setText(QCoreApplication.translate("mainWindow", u"Override branch controls", None))
        self.label_63.setText("")
        self.label_17.setText(QCoreApplication.translate("mainWindow", u"Power flow", None))
        self.settings_tabWidget.setTabText(self.settings_tabWidget.indexOf(self.tab_3), QCoreApplication.translate("mainWindow", u"PF", None))
#if QT_CONFIG(tooltip)
        self.settings_tabWidget.setTabToolTip(self.settings_tabWidget.indexOf(self.tab_3), QCoreApplication.translate("mainWindow", u"Power flow settings", None))
#endif // QT_CONFIG(tooltip)
        self.label_8.setText(QCoreApplication.translate("mainWindow", u"Stop at", None))
        self.label_25.setText(QCoreApplication.translate("mainWindow", u"Refer to the NTC areas (Linear tab)", None))
        self.label_107.setText("")
        self.label_19.setText(QCoreApplication.translate("mainWindow", u"Now", None))
        self.start_vs_from_selected_radioButton.setText(QCoreApplication.translate("mainWindow", u"Use departure and target points from time series", None))
        self.atcRadioButton.setText(QCoreApplication.translate("mainWindow", u"Available transfer capacity", None))
        self.label_106.setText("")
        self.label_18.setText(QCoreApplication.translate("mainWindow", u"<html><head/><body><p>Lambda factor</p></body></html>", None))
        self.label_29.setText(QCoreApplication.translate("mainWindow", u"Max. Iterations", None))
        self.label_20.setText(QCoreApplication.translate("mainWindow", u"Target", None))
        self.label_108.setText("")
        self.label_74.setText("")
        self.label_46.setText(QCoreApplication.translate("mainWindow", u"Continuation power flow", None))
        self.label_67.setText(QCoreApplication.translate("mainWindow", u"Simulation mode", None))
        self.start_vs_from_default_radioButton.setText(QCoreApplication.translate("mainWindow", u"Increase system loading", None))
        self.settings_tabWidget.setTabText(self.settings_tabWidget.indexOf(self.tab_5), QCoreApplication.translate("mainWindow", u"CPF", None))
        self.label_72.setText("")
        self.label_73.setText(QCoreApplication.translate("mainWindow", u"Optimal Power Flow", None))
#if QT_CONFIG(tooltip)
        self.lpf_solver_comboBox.setToolTip(QCoreApplication.translate("mainWindow", u"Choose the optimal power flow method", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.opf_time_grouping_comboBox.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p>Choose the time grouping to possibly shorten the solution time.</p><p>This splits the time series by week, month, etc. and the subproblems are solved sequentially.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.opfUnitCommitmentCheckBox.setText(QCoreApplication.translate("mainWindow", u"Unit commitment", None))
        self.maxVoltageModuleStepLabel.setText(QCoreApplication.translate("mainWindow", u"Max module step", None))
#if QT_CONFIG(tooltip)
        self.opfContingencyToleranceSpinBox.setToolTip(QCoreApplication.translate("mainWindow", u"LODF matrix tolerance choosing contingencies", None))
#endif // QT_CONFIG(tooltip)
        self.maxVoltageAngleStepSpinBox.setSuffix(QCoreApplication.translate("mainWindow", u" rad", None))
        self.label_103.setText(QCoreApplication.translate("mainWindow", u"Zone grouping", None))
        self.maxVoltageModuleStepSpinBox.setSuffix(QCoreApplication.translate("mainWindow", u" p.u.", None))
        self.label_4.setText(QCoreApplication.translate("mainWindow", u"Time grouping", None))
        self.label_104.setText(QCoreApplication.translate("mainWindow", u"Contingency tolerance", None))
        self.maxVoltageAngleStepLabel.setText(QCoreApplication.translate("mainWindow", u"Max angle step", None))
        self.label_42.setText(QCoreApplication.translate("mainWindow", u"Method", None))
        self.label_10.setText(QCoreApplication.translate("mainWindow", u"MIP solver", None))
#if QT_CONFIG(tooltip)
        self.mip_solver_comboBox.setToolTip(QCoreApplication.translate("mainWindow", u"Choose the external mixed integer programming solver", None))
#endif // QT_CONFIG(tooltip)
        self.skipOpfGenerationLimitsCheckBox.setText(QCoreApplication.translate("mainWindow", u"Skip generation limits", None))
        self.considerContingenciesOpfCheckBox.setText(QCoreApplication.translate("mainWindow", u"Consider contingencies", None))
        self.opfMaximizeExcahngeCheckBox.setText(QCoreApplication.translate("mainWindow", u"Maximize area exchange", None))
        self.settings_tabWidget.setTabText(self.settings_tabWidget.indexOf(self.tab_4), QCoreApplication.translate("mainWindow", u"OPF", None))
#if QT_CONFIG(tooltip)
        self.settings_tabWidget.setTabToolTip(self.settings_tabWidget.indexOf(self.tab_4), QCoreApplication.translate("mainWindow", u"Optimal power flow settings", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.ntcOpfTolSpinBox.setToolTip(QCoreApplication.translate("mainWindow", u"This value determines if the convergence is reached", None))
#endif // QT_CONFIG(tooltip)
        self.ntcOpfTolSpinBox.setSuffix("")
        self.ntcOpfTolSpinBox.setPrefix(QCoreApplication.translate("mainWindow", u"1e", None))
        self.trmSpinBox.setSuffix(QCoreApplication.translate("mainWindow", u" MW", None))
#if QT_CONFIG(tooltip)
        self.label_231.setToolTip(QCoreApplication.translate("mainWindow", u"Transmission reliability margin (TRM)", None))
#endif // QT_CONFIG(tooltip)
        self.label_231.setText(QCoreApplication.translate("mainWindow", u"Transmission reliability margin (TRM)", None))
        self.ntcFeasibilityCheckCheckBox.setText(QCoreApplication.translate("mainWindow", u"Check feasibility", None))
#if QT_CONFIG(tooltip)
        self.skipNtcGenerationLimitsCheckBox.setToolTip(QCoreApplication.translate("mainWindow", u"If activated, the generation limits are not considered", None))
#endif // QT_CONFIG(tooltip)
        self.skipNtcGenerationLimitsCheckBox.setText(QCoreApplication.translate("mainWindow", u"Skip generation limits", None))
        self.ntcDispatchAllAreasCheckBox.setText(QCoreApplication.translate("mainWindow", u"Dispatch all areas", None))
#if QT_CONFIG(tooltip)
        self.label_101.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p>This tolerance determines the maximum value of a slack variable that produces an error</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.label_101.setText(QCoreApplication.translate("mainWindow", u"Slack variables' tolerance", None))
#if QT_CONFIG(tooltip)
        self.proportionalRedispatchRadioButton.setToolTip(QCoreApplication.translate("mainWindow", u"The generation is modified as a linear combination of it's current dispatch", None))
#endif // QT_CONFIG(tooltip)
        self.proportionalRedispatchRadioButton.setText(QCoreApplication.translate("mainWindow", u"Proportional redispatch", None))
#if QT_CONFIG(tooltip)
        self.optimalRedispatchRadioButton.setToolTip(QCoreApplication.translate("mainWindow", u"The generation is modified so that the transference is maximal.", None))
#endif // QT_CONFIG(tooltip)
        self.optimalRedispatchRadioButton.setText(QCoreApplication.translate("mainWindow", u"Optimal dispatch", None))
        self.ntcLoadRuleSpinBox.setSuffix(QCoreApplication.translate("mainWindow", u"%", None))
#if QT_CONFIG(tooltip)
        self.label_64.setToolTip(QCoreApplication.translate("mainWindow", u"Determine the branches that enter the optimization", None))
#endif // QT_CONFIG(tooltip)
        self.label_64.setText(QCoreApplication.translate("mainWindow", u"Branch monitoring selection criteria", None))
#if QT_CONFIG(tooltip)
        self.ntcSelectBasedOnExchangeSensitivityCheckBox.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p>A branch is monitored solely based on its contribution to the inter-area excahge sensitivity. Therefore a branch is selected if it's alpha value is greater than the set alpha %</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.ntcSelectBasedOnExchangeSensitivityCheckBox.setText(QCoreApplication.translate("mainWindow", u"Branch exchange sensitivity (\u03b1)", None))
#if QT_CONFIG(tooltip)
        self.ntcAlphaSpinBox.setToolTip(QCoreApplication.translate("mainWindow", u"Minimum exchange contribution (Alpha)", None))
#endif // QT_CONFIG(tooltip)
        self.ntcAlphaSpinBox.setSuffix(QCoreApplication.translate("mainWindow", u"%", None))
#if QT_CONFIG(tooltip)
        self.ntcSelectBasedOnAcerCriteriaCheckBox.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p>This criteria springs from the ACER (Agency for the Cooperation for Energy Regulators).</p><p>It determines that a branch is only relevant to be considered in a NTC calculation if the flow due to the exchange is over a percentage (70%) </p><p><br/></p><p>A branch is monitored only if:</p><p>(branch_rate * 70%) / branch_alpha &lt;= total exchange rating</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.ntcSelectBasedOnAcerCriteriaCheckBox.setText(QCoreApplication.translate("mainWindow", u"Branch rating contribution (ACER)", None))
        self.label_97.setText("")
#if QT_CONFIG(tooltip)
        self.label_96.setToolTip(QCoreApplication.translate("mainWindow", u"Select the solver in the OPF tab and the areas in the areas tab", None))
#endif // QT_CONFIG(tooltip)
        self.label_96.setText(QCoreApplication.translate("mainWindow", u"NTC optimization", None))
#if QT_CONFIG(tooltip)
        self.contingencyGenerationThresholdDoubleSpinBox.setToolTip(QCoreApplication.translate("mainWindow", u"Generation power to trip as contingency", None))
#endif // QT_CONFIG(tooltip)
        self.contingencyGenerationThresholdDoubleSpinBox.setSuffix(QCoreApplication.translate("mainWindow", u" MW", None))
        self.considerContingenciesGeneratorOpfCheckBox.setText(QCoreApplication.translate("mainWindow", u"Consider generator contingencies", None))
        self.contingencyPowerTripLabel.setText(QCoreApplication.translate("mainWindow", u"Generation power contingency", None))
        self.label_105.setText(QCoreApplication.translate("mainWindow", u"Contingencies", None))
#if QT_CONFIG(tooltip)
        self.considerContingenciesNtcOpfCheckBox.setToolTip(QCoreApplication.translate("mainWindow", u"If activated, the N-1 contingencies are considered", None))
#endif // QT_CONFIG(tooltip)
        self.considerContingenciesNtcOpfCheckBox.setText(QCoreApplication.translate("mainWindow", u"Consider branch contingencies", None))
        self.considerContingenciesHvdcOpfCheckBox.setText(QCoreApplication.translate("mainWindow", u"Consider hvdc contingencies", None))
        self.label_102.setText(QCoreApplication.translate("mainWindow", u"Objective function weights", None))
        self.label_26.setText(QCoreApplication.translate("mainWindow", u"Power shift", None))
        self.weightPowerShiftSpinBox.setSuffix("")
        self.weightPowerShiftSpinBox.setPrefix(QCoreApplication.translate("mainWindow", u"1e", None))
        self.label_40.setText(QCoreApplication.translate("mainWindow", u"Generation cost", None))
        self.weightGenCostSpinBox.setSuffix("")
        self.weightGenCostSpinBox.setPrefix(QCoreApplication.translate("mainWindow", u"1e", None))
        self.label_98.setText(QCoreApplication.translate("mainWindow", u"Overloads", None))
        self.weightsOverloadsSpinBox.setSuffix("")
        self.weightsOverloadsSpinBox.setPrefix(QCoreApplication.translate("mainWindow", u"1e", None))
        self.label_61.setText(QCoreApplication.translate("mainWindow", u"Linear NTC", None))
        self.label_30.setText(QCoreApplication.translate("mainWindow", u"Loading threshold to report", None))
#if QT_CONFIG(tooltip)
        self.atcPerturbanceSpinBox.setToolTip(QCoreApplication.translate("mainWindow", u"Amount of power used to compute the branches sensitivity to the transfer", None))
#endif // QT_CONFIG(tooltip)
        self.atcPerturbanceSpinBox.setSuffix(QCoreApplication.translate("mainWindow", u" MW", None))
        self.label_62.setText(QCoreApplication.translate("mainWindow", u"Transfer sensitivity threshold", None))
        self.label_91.setText(QCoreApplication.translate("mainWindow", u"Perturbance power", None))
#if QT_CONFIG(tooltip)
        self.atcThresholdSpinBox.setToolTip(QCoreApplication.translate("mainWindow", u"Threshold used to discard insensitive branches", None))
#endif // QT_CONFIG(tooltip)
        self.label_77.setText(QCoreApplication.translate("mainWindow", u"Transfer method", None))
        self.n1ConsiderationCheckBox.setText(QCoreApplication.translate("mainWindow", u"n-1 sensibility consideration", None))
        self.ntcReportLoadingThresholdSpinBox.setSuffix(QCoreApplication.translate("mainWindow", u"%", None))
        self.label_90.setText("")
        self.settings_tabWidget.setTabText(self.settings_tabWidget.indexOf(self.tab_12), QCoreApplication.translate("mainWindow", u"NTC", None))
        self.tolerance_stochastic_spinBox.setPrefix(QCoreApplication.translate("mainWindow", u"1e-", None))
        self.label_75.setText("")
        self.label_47.setText(QCoreApplication.translate("mainWindow", u"Stochastic power flow", None))
        self.label_13.setText(QCoreApplication.translate("mainWindow", u"Samples", None))
        self.label_55.setText(QCoreApplication.translate("mainWindow", u"Method", None))
        self.label_12.setText(QCoreApplication.translate("mainWindow", u"Voltage variance", None))
        self.label_78.setText("")
        self.label_79.setText(QCoreApplication.translate("mainWindow", u"Cascading", None))
        self.label_28.setText(QCoreApplication.translate("mainWindow", u"Aditional islands until stop", None))
        self.settings_tabWidget.setTabText(self.settings_tabWidget.indexOf(self.tab_6), QCoreApplication.translate("mainWindow", u"Sto", None))
#if QT_CONFIG(tooltip)
        self.settings_tabWidget.setTabToolTip(self.settings_tabWidget.indexOf(self.tab_6), QCoreApplication.translate("mainWindow", u"Stochastic power flow settings", None))
#endif // QT_CONFIG(tooltip)
        self.ptdf_correct_nonsense_values_checkBox.setText(QCoreApplication.translate("mainWindow", u"Correct nonsense values", None))
        self.label_70.setText("")
        self.label_71.setText(QCoreApplication.translate("mainWindow", u"PTDF / LODF", None))
#if QT_CONFIG(tooltip)
        self.usePfValuesForAtcCheckBox.setToolTip(QCoreApplication.translate("mainWindow", u"Use existing power flow values for the contingency initialization in the net transfer capacity and contingency simulations", None))
#endif // QT_CONFIG(tooltip)
        self.usePfValuesForAtcCheckBox.setText(QCoreApplication.translate("mainWindow", u"Use power flow values for initialization", None))
        self.ptdf_distributed_slack_checkBox.setText(QCoreApplication.translate("mainWindow", u"Distributed slack", None))
        self.settings_tabWidget.setTabText(self.settings_tabWidget.indexOf(self.tab_9), QCoreApplication.translate("mainWindow", u"Linear", None))
#if QT_CONFIG(tooltip)
        self.settings_tabWidget.setTabToolTip(self.settings_tabWidget.indexOf(self.tab_9), QCoreApplication.translate("mainWindow", u"Linear calculations related settings", None))
#endif // QT_CONFIG(tooltip)
        self.label_109.setText("")
        self.label_117.setText(QCoreApplication.translate("mainWindow", u"Contingencies", None))
        self.label_119.setText(QCoreApplication.translate("mainWindow", u"Contingency engine", None))
        self.settings_tabWidget.setTabText(self.settings_tabWidget.indexOf(self.tab_11), QCoreApplication.translate("mainWindow", u"Con", None))
        self.label_95.setText(QCoreApplication.translate("mainWindow", u"Area transfer configuration", None))
        self.label_92.setText("")
        self.label_41.setText(QCoreApplication.translate("mainWindow", u"Areas from", None))
        self.label_21.setText(QCoreApplication.translate("mainWindow", u"Areas to", None))
        self.settings_tabWidget.setTabText(self.settings_tabWidget.indexOf(self.tab), QCoreApplication.translate("mainWindow", u"Areas", None))
#if QT_CONFIG(tooltip)
        self.settings_tabWidget.setTabToolTip(self.settings_tabWidget.indexOf(self.tab), QCoreApplication.translate("mainWindow", u"Area, Zone, etc related settings", None))
#endif // QT_CONFIG(tooltip)
        self.label_44.setText("")
        self.label_88.setText("")
        self.label_33.setText(QCoreApplication.translate("mainWindow", u"Number of clusters", None))
#if QT_CONFIG(tooltip)
        self.node_distances_elements_spinBox.setToolTip(QCoreApplication.translate("mainWindow", u"Minimum size of the group", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.node_distances_elements_spinBox.setStatusTip("")
#endif // QT_CONFIG(statustip)
        self.node_distances_elements_spinBox.setSuffix(QCoreApplication.translate("mainWindow", u" elements", None))
        self.label_121.setText(QCoreApplication.translate("mainWindow", u"Investment evaluation", None))
#if QT_CONFIG(tooltip)
        self.investment_evaluation_method_ComboBox.setToolTip(QCoreApplication.translate("mainWindow", u"Select the investment evaluation method", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.cluster_number_spinBox.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p>Number of clusters, this affects all the simulations that deal with clustering</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.cluster_number_spinBox.setSuffix(QCoreApplication.translate("mainWindow", u" Clusters", None))
        self.label_120.setText("")
        self.label_7.setText("")
        self.label_94.setText("")
        self.label_3.setText(QCoreApplication.translate("mainWindow", u"Method", None))
        self.label_89.setText(QCoreApplication.translate("mainWindow", u"Node grouping", None))
        self.label_51.setText(QCoreApplication.translate("mainWindow", u"Maximum evaluations", None))
        self.label_93.setText(QCoreApplication.translate("mainWindow", u"Clustering", None))
#if QT_CONFIG(tooltip)
        self.node_distances_sigma_doubleSpinBox.setToolTip(QCoreApplication.translate("mainWindow", u"M\u00e1ximum standard deviation to determine the groups", None))
#endif // QT_CONFIG(tooltip)
        self.node_distances_sigma_doubleSpinBox.setSuffix(QCoreApplication.translate("mainWindow", u" \u03c3", None))
#if QT_CONFIG(tooltip)
        self.max_investments_evluation_number_spinBox.setToolTip(QCoreApplication.translate("mainWindow", u"Number of maximum evaluations for the optimization methods", None))
#endif // QT_CONFIG(tooltip)
        self.max_investments_evluation_number_spinBox.setSuffix(QCoreApplication.translate("mainWindow", u" x number of investments", None))
        self.settings_tabWidget.setTabText(self.settings_tabWidget.indexOf(self.tab_2), QCoreApplication.translate("mainWindow", u"ML", None))
#if QT_CONFIG(tooltip)
        self.settings_tabWidget.setTabToolTip(self.settings_tabWidget.indexOf(self.tab_2), QCoreApplication.translate("mainWindow", u"Machine learning related settings", None))
#endif // QT_CONFIG(tooltip)
        self.label_82.setText("")
        self.label_83.setText(QCoreApplication.translate("mainWindow", u"Node layout", None))
        self.label_24.setText(QCoreApplication.translate("mainWindow", u"Automatic layout algorithm", None))
#if QT_CONFIG(tooltip)
        self.automatic_layout_comboBox.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p>Algorithm to use for the automatic </p><p>layout of the grid nodes</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.ask_before_appliying_layout_checkBox.setToolTip(QCoreApplication.translate("mainWindow", u"Ask before running the automatic grid layout. This is because you might have a layout already and ruin it accidentally.", None))
#endif // QT_CONFIG(tooltip)
        self.ask_before_appliying_layout_checkBox.setText(QCoreApplication.translate("mainWindow", u"Ask before applying", None))
        self.label_60.setText(QCoreApplication.translate("mainWindow", u"Node expansion factor", None))
#if QT_CONFIG(tooltip)
        self.explosion_factor_doubleSpinBox.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p>When expanding or contracting the distances between nodes, this is the factor that applies.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.label_84.setText("")
        self.label_85.setText(QCoreApplication.translate("mainWindow", u"Branch rating", None))
        self.label_34.setText(QCoreApplication.translate("mainWindow", u"Branch rating factor", None))
#if QT_CONFIG(tooltip)
        self.branch_rating_doubleSpinBox.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p>Factor to aply to the branch calculated power to use as rating</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.rating_override_checkBox.setText(QCoreApplication.translate("mainWindow", u"override values", None))
        self.label_80.setText("")
        self.label_81.setText(QCoreApplication.translate("mainWindow", u"Grid reduction", None))
        self.label_59.setText(QCoreApplication.translate("mainWindow", u"Select branch types to reduce", None))
        self.rxThresholdCheckBox.setText(QCoreApplication.translate("mainWindow", u"Filter by r+x under threshold", None))
#if QT_CONFIG(tooltip)
        self.rxThresholdSpinBox.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p>Exponent of the threshold to use.</p><p>threshold = 1x10^-factor</p><p>i.e.</p><p>factor=3</p><p>threshold = 1e-3</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.settings_tabWidget.setTabText(self.settings_tabWidget.indexOf(self.tab_13), QCoreApplication.translate("mainWindow", u"Tplgy", None))
#if QT_CONFIG(tooltip)
        self.settings_tabWidget.setTabToolTip(self.settings_tabWidget.indexOf(self.tab_13), QCoreApplication.translate("mainWindow", u"Topology related settings", None))
#endif // QT_CONFIG(tooltip)
        self.label_76.setText("")
        self.label_49.setText(QCoreApplication.translate("mainWindow", u"Draw", None))
        self.label_56.setText(QCoreApplication.translate("mainWindow", u"Nodes", None))
        self.dark_mode_checkBox.setText(QCoreApplication.translate("mainWindow", u"Dark mode", None))
        self.label_112.setText("")
        self.label_43.setText(QCoreApplication.translate("mainWindow", u"Palette", None))
        self.branch_width_based_on_flow_checkBox.setText(QCoreApplication.translate("mainWindow", u"Width based on flow", None))
        self.label_9.setText(QCoreApplication.translate("mainWindow", u"Max. size", None))
        self.label_110.setText("")
        self.label_111.setText(QCoreApplication.translate("mainWindow", u"Schematic", None))
        self.label_15.setText(QCoreApplication.translate("mainWindow", u"Max. size", None))
        self.label_54.setText(QCoreApplication.translate("mainWindow", u"Branches", None))
        self.label.setText(QCoreApplication.translate("mainWindow", u"Min. size", None))
        self.label_113.setText("")
        self.label_14.setText(QCoreApplication.translate("mainWindow", u"Min. size", None))
        self.label_114.setText("")
        self.label_99.setText("")
        self.label_100.setText(QCoreApplication.translate("mainWindow", u"Map", None))
        self.label_118.setText(QCoreApplication.translate("mainWindow", u"Map tile provider", None))
        self.label_66.setText("")
        self.label_45.setText(QCoreApplication.translate("mainWindow", u"Visualization", None))
        self.label_32.setText(QCoreApplication.translate("mainWindow", u"Export resolution", None))
#if QT_CONFIG(tooltip)
        self.resolution_factor_spinBox.setToolTip(QCoreApplication.translate("mainWindow", u"<html><head/><body><p>Resolution factor.</p><p>1K = 1920 x 1080 pixels</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.resolution_factor_spinBox.setSuffix(QCoreApplication.translate("mainWindow", u" K", None))
        self.label_38.setText(QCoreApplication.translate("mainWindow", u"Plotting style", None))
#if QT_CONFIG(tooltip)
        self.plt_style_comboBox.setToolTip(QCoreApplication.translate("mainWindow", u"MatPlotlib plot styles to choose from", None))
#endif // QT_CONFIG(tooltip)
        self.settings_tabWidget.setTabText(self.settings_tabWidget.indexOf(self.tab_10), QCoreApplication.translate("mainWindow", u"Viz", None))
#if QT_CONFIG(tooltip)
        self.settings_tabWidget.setTabToolTip(self.settings_tabWidget.indexOf(self.tab_10), QCoreApplication.translate("mainWindow", u"Visualization related settings", None))
#endif // QT_CONFIG(tooltip)
        self.label_115.setText(QCoreApplication.translate("mainWindow", u"File Information", None))
        self.label_39.setText(QCoreApplication.translate("mainWindow", u"File path", None))
        self.file_information_label.setText(QCoreApplication.translate("mainWindow", u"...", None))
        self.model_version_label.setText(QCoreApplication.translate("mainWindow", u"...", None))
        self.user_name_label.setText(QCoreApplication.translate("mainWindow", u"...", None))
#if QT_CONFIG(tooltip)
        self.saveResultsCheckBox.setToolTip(QCoreApplication.translate("mainWindow", u"If checked, the results are stored inside the gridcal file in a compressed format.", None))
#endif // QT_CONFIG(tooltip)
        self.saveResultsCheckBox.setText(QCoreApplication.translate("mainWindow", u"Save results in .gridcal files", None))
        self.settings_tabWidget.setTabText(self.settings_tabWidget.indexOf(self.tab_8), QCoreApplication.translate("mainWindow", u"File", None))
        self.label_68.setText("")
        self.label_69.setText(QCoreApplication.translate("mainWindow", u"General settings", None))
        self.label_57.setText(QCoreApplication.translate("mainWindow", u"Base power", None))
#if QT_CONFIG(tooltip)
        self.sbase_doubleSpinBox.setToolTip(QCoreApplication.translate("mainWindow", u"Base power. Despite all the bibliography, changing this number to anything other than 100 MVA, might change the meaning of what sensible per-unit voltage are.", None))
#endif // QT_CONFIG(tooltip)
        self.sbase_doubleSpinBox.setSuffix(QCoreApplication.translate("mainWindow", u" MVA", None))
        self.label_58.setText(QCoreApplication.translate("mainWindow", u"Frequency", None))
#if QT_CONFIG(tooltip)
        self.fbase_doubleSpinBox.setToolTip(QCoreApplication.translate("mainWindow", u"System frequency.", None))
#endif // QT_CONFIG(tooltip)
        self.fbase_doubleSpinBox.setSuffix(QCoreApplication.translate("mainWindow", u" Hz", None))
        self.label_31.setText(QCoreApplication.translate("mainWindow", u"Engine", None))
#if QT_CONFIG(tooltip)
        self.engineComboBox.setToolTip(QCoreApplication.translate("mainWindow", u"Engine to be used when available", None))
#endif // QT_CONFIG(tooltip)
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.SettingsTab), QCoreApplication.translate("mainWindow", u"Settings", None))
#if QT_CONFIG(tooltip)
        self.cancelButton.setToolTip(QCoreApplication.translate("mainWindow", u"Cancel process", None))
#endif // QT_CONFIG(tooltip)
        self.cancelButton.setText("")
        self.progress_label.setText("")
        self.menuProject.setTitle(QCoreApplication.translate("mainWindow", u"File", None))
        self.menuExport.setTitle(QCoreApplication.translate("mainWindow", u"Export", None))
        self.menuImport.setTitle(QCoreApplication.translate("mainWindow", u"Import", None))
        self.menuAbout.setTitle(QCoreApplication.translate("mainWindow", u"Help", None))
        self.menuActions.setTitle(QCoreApplication.translate("mainWindow", u"Actions", None))
        self.menuSimulations.setTitle(QCoreApplication.translate("mainWindow", u"Simulations", None))
        self.menuModel.setTitle(QCoreApplication.translate("mainWindow", u"Model", None))
        self.menuDiagrams.setTitle(QCoreApplication.translate("mainWindow", u"Diagram", None))
        self.menuSelect_buses_by.setTitle(QCoreApplication.translate("mainWindow", u"Select buses by", None))
        self.toolBar.setWindowTitle(QCoreApplication.translate("mainWindow", u"toolBar", None))
    # retranslateUi

